// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/PMsgRechargeDaily.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Sw {

  /// <summary>Holder for reflection information generated from protos/PMsgRechargeDaily.proto</summary>
  public static partial class PMsgRechargeDailyReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/PMsgRechargeDaily.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PMsgRechargeDailyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5wcm90b3MvUE1zZ1JlY2hhcmdlRGFpbHkucHJvdG8SAnN3IjAKG1BNc2dS",
            "ZWNoYXJnZURhaWx5UXVlcnlJbmZvQxIRCgluUmVzZXJ2ZWQYASABKAUidgob",
            "UE1zZ1JlY2hhcmdlRGFpbHlRdWVyeUluZm9TEhUKDXVsbE1vbmV5VG90YWwY",
            "ASABKAQSEwoLdW5GZXRjaEluZm8YAiABKA0SFgoOdW5DYW5GZXRjaEluZm8Y",
            "AyABKA0SEwoLdW5FcnJvckNvZGUYYyABKA0iNwodUE1zZ1JlY2hhcmdlRGFp",
            "bHlTeW5DYW5GZXRjaFMSFgoOdW5DYW5GZXRjaEluZm8YASABKA0iNQodUE1z",
            "Z1JlY2hhcmdlRGFpbHlGZXRjaFJld2FyZEMSFAoMdW5GZXRjaExldmVsGAEg",
            "ASgNImAKHVBNc2dSZWNoYXJnZURhaWx5RmV0Y2hSZXdhcmRTEhUKDXVsbE1v",
            "bmV5VG90YWwYASABKAQSEwoLdW5GZXRjaEluZm8YAiABKA0SEwoLdW5FcnJv",
            "ckNvZGUYYyABKA1iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgRechargeDailyQueryInfoC), global::Sw.PMsgRechargeDailyQueryInfoC.Parser, new[]{ "NReserved" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgRechargeDailyQueryInfoS), global::Sw.PMsgRechargeDailyQueryInfoS.Parser, new[]{ "UllMoneyTotal", "UnFetchInfo", "UnCanFetchInfo", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgRechargeDailySynCanFetchS), global::Sw.PMsgRechargeDailySynCanFetchS.Parser, new[]{ "UnCanFetchInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgRechargeDailyFetchRewardC), global::Sw.PMsgRechargeDailyFetchRewardC.Parser, new[]{ "UnFetchLevel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgRechargeDailyFetchRewardS), global::Sw.PMsgRechargeDailyFetchRewardS.Parser, new[]{ "UllMoneyTotal", "UnFetchInfo", "UnErrorCode" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 客户端：查询每日累积充值相关信息请求
  /// _MSG_RECHARGE_DAILY_QUERY_INFO_C
  /// </summary>
  public sealed partial class PMsgRechargeDailyQueryInfoC : pb::IMessage<PMsgRechargeDailyQueryInfoC> {
    private static readonly pb::MessageParser<PMsgRechargeDailyQueryInfoC> _parser = new pb::MessageParser<PMsgRechargeDailyQueryInfoC>(() => new PMsgRechargeDailyQueryInfoC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgRechargeDailyQueryInfoC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgRechargeDailyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRechargeDailyQueryInfoC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRechargeDailyQueryInfoC(PMsgRechargeDailyQueryInfoC other) : this() {
      nReserved_ = other.nReserved_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRechargeDailyQueryInfoC Clone() {
      return new PMsgRechargeDailyQueryInfoC(this);
    }

    /// <summary>Field number for the "nReserved" field.</summary>
    public const int NReservedFieldNumber = 1;
    private int nReserved_;
    /// <summary>
    /// 保留字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NReserved {
      get { return nReserved_; }
      set {
        nReserved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgRechargeDailyQueryInfoC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgRechargeDailyQueryInfoC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NReserved != other.NReserved) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NReserved != 0) hash ^= NReserved.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NReserved != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NReserved);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NReserved != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NReserved);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgRechargeDailyQueryInfoC other) {
      if (other == null) {
        return;
      }
      if (other.NReserved != 0) {
        NReserved = other.NReserved;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            NReserved = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：查询每日累积充值相关信息请求回复
  /// _MSG_RECHARGE_DAILY_QUERY_INFO_S
  /// </summary>
  public sealed partial class PMsgRechargeDailyQueryInfoS : pb::IMessage<PMsgRechargeDailyQueryInfoS> {
    private static readonly pb::MessageParser<PMsgRechargeDailyQueryInfoS> _parser = new pb::MessageParser<PMsgRechargeDailyQueryInfoS>(() => new PMsgRechargeDailyQueryInfoS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgRechargeDailyQueryInfoS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgRechargeDailyReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRechargeDailyQueryInfoS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRechargeDailyQueryInfoS(PMsgRechargeDailyQueryInfoS other) : this() {
      ullMoneyTotal_ = other.ullMoneyTotal_;
      unFetchInfo_ = other.unFetchInfo_;
      unCanFetchInfo_ = other.unCanFetchInfo_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRechargeDailyQueryInfoS Clone() {
      return new PMsgRechargeDailyQueryInfoS(this);
    }

    /// <summary>Field number for the "ullMoneyTotal" field.</summary>
    public const int UllMoneyTotalFieldNumber = 1;
    private ulong ullMoneyTotal_;
    /// <summary>
    /// 今日充值的金额累积数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UllMoneyTotal {
      get { return ullMoneyTotal_; }
      set {
        ullMoneyTotal_ = value;
      }
    }

    /// <summary>Field number for the "unFetchInfo" field.</summary>
    public const int UnFetchInfoFieldNumber = 2;
    private uint unFetchInfo_;
    /// <summary>
    /// 领取累积充值奖励情况,二进制位表示
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnFetchInfo {
      get { return unFetchInfo_; }
      set {
        unFetchInfo_ = value;
      }
    }

    /// <summary>Field number for the "unCanFetchInfo" field.</summary>
    public const int UnCanFetchInfoFieldNumber = 3;
    private uint unCanFetchInfo_;
    /// <summary>
    /// 可以领取的档次,二进制位表示
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnCanFetchInfo {
      get { return unCanFetchInfo_; }
      set {
        unCanFetchInfo_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private uint unErrorCode_;
    /// <summary>
    /// 返回错误码 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgRechargeDailyQueryInfoS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgRechargeDailyQueryInfoS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllMoneyTotal != other.UllMoneyTotal) return false;
      if (UnFetchInfo != other.UnFetchInfo) return false;
      if (UnCanFetchInfo != other.UnCanFetchInfo) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllMoneyTotal != 0UL) hash ^= UllMoneyTotal.GetHashCode();
      if (UnFetchInfo != 0) hash ^= UnFetchInfo.GetHashCode();
      if (UnCanFetchInfo != 0) hash ^= UnCanFetchInfo.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllMoneyTotal != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UllMoneyTotal);
      }
      if (UnFetchInfo != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(UnFetchInfo);
      }
      if (UnCanFetchInfo != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(UnCanFetchInfo);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteUInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllMoneyTotal != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UllMoneyTotal);
      }
      if (UnFetchInfo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnFetchInfo);
      }
      if (UnCanFetchInfo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnCanFetchInfo);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgRechargeDailyQueryInfoS other) {
      if (other == null) {
        return;
      }
      if (other.UllMoneyTotal != 0UL) {
        UllMoneyTotal = other.UllMoneyTotal;
      }
      if (other.UnFetchInfo != 0) {
        UnFetchInfo = other.UnFetchInfo;
      }
      if (other.UnCanFetchInfo != 0) {
        UnCanFetchInfo = other.UnCanFetchInfo;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllMoneyTotal = input.ReadUInt64();
            break;
          }
          case 16: {
            UnFetchInfo = input.ReadUInt32();
            break;
          }
          case 24: {
            UnCanFetchInfo = input.ReadUInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：通知客户端哪些档次可以领取奖励了
  /// _MSG_RECHARGE_DAILY_SYN_CAN_FETCH_S
  /// </summary>
  public sealed partial class PMsgRechargeDailySynCanFetchS : pb::IMessage<PMsgRechargeDailySynCanFetchS> {
    private static readonly pb::MessageParser<PMsgRechargeDailySynCanFetchS> _parser = new pb::MessageParser<PMsgRechargeDailySynCanFetchS>(() => new PMsgRechargeDailySynCanFetchS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgRechargeDailySynCanFetchS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgRechargeDailyReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRechargeDailySynCanFetchS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRechargeDailySynCanFetchS(PMsgRechargeDailySynCanFetchS other) : this() {
      unCanFetchInfo_ = other.unCanFetchInfo_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRechargeDailySynCanFetchS Clone() {
      return new PMsgRechargeDailySynCanFetchS(this);
    }

    /// <summary>Field number for the "unCanFetchInfo" field.</summary>
    public const int UnCanFetchInfoFieldNumber = 1;
    private uint unCanFetchInfo_;
    /// <summary>
    /// 可以领取的档次,二进制位表示
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnCanFetchInfo {
      get { return unCanFetchInfo_; }
      set {
        unCanFetchInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgRechargeDailySynCanFetchS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgRechargeDailySynCanFetchS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnCanFetchInfo != other.UnCanFetchInfo) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnCanFetchInfo != 0) hash ^= UnCanFetchInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnCanFetchInfo != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnCanFetchInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnCanFetchInfo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnCanFetchInfo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgRechargeDailySynCanFetchS other) {
      if (other == null) {
        return;
      }
      if (other.UnCanFetchInfo != 0) {
        UnCanFetchInfo = other.UnCanFetchInfo;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnCanFetchInfo = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：领取奖励
  /// _MSG_RECHARGE_DAILY_FETCH_REWARD_C
  /// </summary>
  public sealed partial class PMsgRechargeDailyFetchRewardC : pb::IMessage<PMsgRechargeDailyFetchRewardC> {
    private static readonly pb::MessageParser<PMsgRechargeDailyFetchRewardC> _parser = new pb::MessageParser<PMsgRechargeDailyFetchRewardC>(() => new PMsgRechargeDailyFetchRewardC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgRechargeDailyFetchRewardC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgRechargeDailyReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRechargeDailyFetchRewardC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRechargeDailyFetchRewardC(PMsgRechargeDailyFetchRewardC other) : this() {
      unFetchLevel_ = other.unFetchLevel_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRechargeDailyFetchRewardC Clone() {
      return new PMsgRechargeDailyFetchRewardC(this);
    }

    /// <summary>Field number for the "unFetchLevel" field.</summary>
    public const int UnFetchLevelFieldNumber = 1;
    private uint unFetchLevel_;
    /// <summary>
    /// 领取第几个档次的奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnFetchLevel {
      get { return unFetchLevel_; }
      set {
        unFetchLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgRechargeDailyFetchRewardC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgRechargeDailyFetchRewardC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnFetchLevel != other.UnFetchLevel) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnFetchLevel != 0) hash ^= UnFetchLevel.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnFetchLevel != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnFetchLevel);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnFetchLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnFetchLevel);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgRechargeDailyFetchRewardC other) {
      if (other == null) {
        return;
      }
      if (other.UnFetchLevel != 0) {
        UnFetchLevel = other.UnFetchLevel;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnFetchLevel = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：领取奖励回复
  /// _MSG_RECHARGE_DAILY_FETCH_REWARD_S
  /// </summary>
  public sealed partial class PMsgRechargeDailyFetchRewardS : pb::IMessage<PMsgRechargeDailyFetchRewardS> {
    private static readonly pb::MessageParser<PMsgRechargeDailyFetchRewardS> _parser = new pb::MessageParser<PMsgRechargeDailyFetchRewardS>(() => new PMsgRechargeDailyFetchRewardS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgRechargeDailyFetchRewardS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgRechargeDailyReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRechargeDailyFetchRewardS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRechargeDailyFetchRewardS(PMsgRechargeDailyFetchRewardS other) : this() {
      ullMoneyTotal_ = other.ullMoneyTotal_;
      unFetchInfo_ = other.unFetchInfo_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRechargeDailyFetchRewardS Clone() {
      return new PMsgRechargeDailyFetchRewardS(this);
    }

    /// <summary>Field number for the "ullMoneyTotal" field.</summary>
    public const int UllMoneyTotalFieldNumber = 1;
    private ulong ullMoneyTotal_;
    /// <summary>
    /// 今日充值的金额累积数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UllMoneyTotal {
      get { return ullMoneyTotal_; }
      set {
        ullMoneyTotal_ = value;
      }
    }

    /// <summary>Field number for the "unFetchInfo" field.</summary>
    public const int UnFetchInfoFieldNumber = 2;
    private uint unFetchInfo_;
    /// <summary>
    /// 领取累积充值奖励情况,二进制位表示
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnFetchInfo {
      get { return unFetchInfo_; }
      set {
        unFetchInfo_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private uint unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgRechargeDailyFetchRewardS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgRechargeDailyFetchRewardS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllMoneyTotal != other.UllMoneyTotal) return false;
      if (UnFetchInfo != other.UnFetchInfo) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllMoneyTotal != 0UL) hash ^= UllMoneyTotal.GetHashCode();
      if (UnFetchInfo != 0) hash ^= UnFetchInfo.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllMoneyTotal != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UllMoneyTotal);
      }
      if (UnFetchInfo != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(UnFetchInfo);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteUInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllMoneyTotal != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UllMoneyTotal);
      }
      if (UnFetchInfo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnFetchInfo);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgRechargeDailyFetchRewardS other) {
      if (other == null) {
        return;
      }
      if (other.UllMoneyTotal != 0UL) {
        UllMoneyTotal = other.UllMoneyTotal;
      }
      if (other.UnFetchInfo != 0) {
        UnFetchInfo = other.UnFetchInfo;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllMoneyTotal = input.ReadUInt64();
            break;
          }
          case 16: {
            UnFetchInfo = input.ReadUInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
