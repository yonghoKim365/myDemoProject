// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/PMsgGlobal.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Sw {

  /// <summary>Holder for reflection information generated from protos/PMsgGlobal.proto</summary>
  public static partial class PMsgGlobalReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/PMsgGlobal.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PMsgGlobalReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chdwcm90b3MvUE1zZ0dsb2JhbC5wcm90bxICc3ciJQoPUE1zZ1NlcnZlckxp",
            "c3RDEhIKCnVuUmVzZXJ2ZWQYASABKAUiVAoKU2VydmVySW5mbxISCgp1blNl",
            "cnZlcklEGAEgASgFEg4KBnN6TmFtZRgCIAEoCRISCgp1bk1haW50YWluGAMg",
            "ASgFEg4KBnVuQnVzeRgEIAEoBSI2Cg9QTXNnU2VydmVyTGlzdFMSIwoLY1Nl",
            "cnZlckluZm8YASADKAsyDi5zdy5TZXJ2ZXJJbmZvIiwKFlBNc2dHZW5lcmF0",
            "ZUFjY291bnRJZEMSEgoKdW5SZXNlcnZlZBgBIAEoBSItChZQTXNnR2VuZXJh",
            "dGVBY2NvdW50SWRTEhMKC3N6QWNjb3VudElkGAEgASgJItMBChNQTXNnQWNj",
            "b3VudENlcnRpZnlDEhYKDnVuUGxhdGZvcm1UeXBlGAEgASgFEhQKDHN6TWFj",
            "aGluZUtleRgCIAEoCRIQCgh1bkFwcGxJZBgDIAEoBRITCgt1bkNoYW5uZWxJ",
            "ZBgEIAEoBRIaChJzekNoYW5uZWxBY2NvdW50SWQYBSABKAkSHAoUc3pDaGFu",
            "bmVsQWNjb3VudE5hbWUYBiABKAkSFgoOc3pDaGFubmVsVG9rZW4YByABKAkS",
            "FQoNc3pDaGFubmVsRGF0YRgIIAEoCSKQAgoTUE1zZ0FjY291bnRDZXJ0aWZ5",
            "UxIWCg51blBsYXRmb3JtVHlwZRgBIAEoBRIUCgxzek1hY2hpbmVLZXkYAiAB",
            "KAkSEAoIdW5BcHBsSWQYAyABKAUSEwoLdW5DaGFubmVsSWQYBCABKAUSGgoS",
            "c3pDaGFubmVsQWNjb3VudElkGAUgASgJEhwKFHN6Q2hhbm5lbEFjY291bnRO",
            "YW1lGAYgASgJEhYKDnN6Q2hhbm5lbFRva2VuGAcgASgJEhUKDXN6Q2hhbm5l",
            "bERhdGEYCCABKAkSEQoJdWxsVXNlcklkGAogASgDEhMKC3VuU2lnbmVkS2V5",
            "GAsgASgFEhMKC3VuRXJyb3JDb2RlGGMgASgFIjgKEVBNc2dQaG9uZUNlcnRp",
            "ZnlDEg8KB3N6UGhvbmUYASABKAkSEgoKc3pQYXNzd29yZBgCIAEoCSJhChFQ",
            "TXNnUGhvbmVDZXJ0aWZ5UxIPCgdzelBob25lGAEgASgJEhEKCXVsbFVzZXJJ",
            "ZBgCIAEoAxITCgt1blNpZ25lZEtleRgDIAEoBRITCgt1bkVycm9yQ29kZRhj",
            "IAEoBSJICgpQTXNnTG9naW5DEhEKCXVsbFVzZXJJZBgBIAEoAxITCgt1blNp",
            "Z25lZEtleRgCIAEoBRISCgp1blNlcnZlcklkGAMgASgFInYKClBNc2dMb2dp",
            "blMSEQoJdWxsVXNlcklkGAEgASgDEhIKCnVuU2VydmVySWQYAiABKAUSDAoE",
            "dW5JUBgDIAEoBRIOCgZ1blBvcnQYBCABKAUSDgoGdW5Db2RlGAUgASgFEhMK",
            "C3VuRXJyb3JDb2RlGGMgASgFIicKFFBNc2dSZXNldFBzd0dldENvZGVDEg8K",
            "B3N6UGhvbmUYASABKAkiPAoUUE1zZ1Jlc2V0UHN3R2V0Q29kZVMSDwoHc3pQ",
            "aG9uZRgBIAEoCRITCgt1bkVycm9yQ29kZRhjIAEoBSJECg1QTXNnUmVzZXRQ",
            "c3dDEg8KB3N6UGhvbmUYASABKAkSDgoGc3pDb2RlGAIgASgJEhIKCnN6UGFz",
            "c3dvcmQYAyABKAkiNQoNUE1zZ1Jlc2V0UHN3UxIPCgdzelBob25lGAEgASgJ",
            "EhMKC3VuRXJyb3JDb2RlGGMgASgFIj4KElBNc2dHb29nbGVDZXJ0aWZ5QxIX",
            "Cg9zekdvb2dsZUFjY291bnQYASABKAkSDwoHc3pUb2tlbhgCIAEoCSJqChJQ",
            "TXNnR29vZ2xlQ2VydGlmeVMSFwoPc3pHb29nbGVBY2NvdW50GAEgASgJEhEK",
            "CXVsbFVzZXJJZBgCIAEoAxITCgt1blNpZ25lZEtleRgDIAEoBRITCgt1bkVy",
            "cm9yQ29kZRhjIAEoBSJCChRQTXNnRmFjZWJvb2tDZXJ0aWZ5QxIZChFzekZh",
            "Y2Vib29rQWNjb3VudBgBIAEoCRIPCgdzelRva2VuGAIgASgJIm4KFFBNc2dG",
            "YWNlYm9va0NlcnRpZnlTEhkKEXN6RmFjZWJvb2tBY2NvdW50GAEgASgJEhEK",
            "CXVsbFVzZXJJZBgCIAEoAxITCgt1blNpZ25lZEtleRgDIAEoBRITCgt1bkVy",
            "cm9yQ29kZRhjIAEoBWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgServerListC), global::Sw.PMsgServerListC.Parser, new[]{ "UnReserved" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.ServerInfo), global::Sw.ServerInfo.Parser, new[]{ "UnServerID", "SzName", "UnMaintain", "UnBusy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgServerListS), global::Sw.PMsgServerListS.Parser, new[]{ "CServerInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgGenerateAccountIdC), global::Sw.PMsgGenerateAccountIdC.Parser, new[]{ "UnReserved" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgGenerateAccountIdS), global::Sw.PMsgGenerateAccountIdS.Parser, new[]{ "SzAccountId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgAccountCertifyC), global::Sw.PMsgAccountCertifyC.Parser, new[]{ "UnPlatformType", "SzMachineKey", "UnApplId", "UnChannelId", "SzChannelAccountId", "SzChannelAccountName", "SzChannelToken", "SzChannelData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgAccountCertifyS), global::Sw.PMsgAccountCertifyS.Parser, new[]{ "UnPlatformType", "SzMachineKey", "UnApplId", "UnChannelId", "SzChannelAccountId", "SzChannelAccountName", "SzChannelToken", "SzChannelData", "UllUserId", "UnSignedKey", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgPhoneCertifyC), global::Sw.PMsgPhoneCertifyC.Parser, new[]{ "SzPhone", "SzPassword" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgPhoneCertifyS), global::Sw.PMsgPhoneCertifyS.Parser, new[]{ "SzPhone", "UllUserId", "UnSignedKey", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgLoginC), global::Sw.PMsgLoginC.Parser, new[]{ "UllUserId", "UnSignedKey", "UnServerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgLoginS), global::Sw.PMsgLoginS.Parser, new[]{ "UllUserId", "UnServerId", "UnIP", "UnPort", "UnCode", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgResetPswGetCodeC), global::Sw.PMsgResetPswGetCodeC.Parser, new[]{ "SzPhone" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgResetPswGetCodeS), global::Sw.PMsgResetPswGetCodeS.Parser, new[]{ "SzPhone", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgResetPswC), global::Sw.PMsgResetPswC.Parser, new[]{ "SzPhone", "SzCode", "SzPassword" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgResetPswS), global::Sw.PMsgResetPswS.Parser, new[]{ "SzPhone", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgGoogleCertifyC), global::Sw.PMsgGoogleCertifyC.Parser, new[]{ "SzGoogleAccount", "SzToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgGoogleCertifyS), global::Sw.PMsgGoogleCertifyS.Parser, new[]{ "SzGoogleAccount", "UllUserId", "UnSignedKey", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFacebookCertifyC), global::Sw.PMsgFacebookCertifyC.Parser, new[]{ "SzFacebookAccount", "SzToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFacebookCertifyS), global::Sw.PMsgFacebookCertifyS.Parser, new[]{ "SzFacebookAccount", "UllUserId", "UnSignedKey", "UnErrorCode" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 客户端：请求服务器列表
  /// _MSG_SERVER_LIST_C
  /// </summary>
  public sealed partial class PMsgServerListC : pb::IMessage<PMsgServerListC> {
    private static readonly pb::MessageParser<PMsgServerListC> _parser = new pb::MessageParser<PMsgServerListC>(() => new PMsgServerListC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgServerListC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGlobalReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgServerListC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgServerListC(PMsgServerListC other) : this() {
      unReserved_ = other.unReserved_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgServerListC Clone() {
      return new PMsgServerListC(this);
    }

    /// <summary>Field number for the "unReserved" field.</summary>
    public const int UnReservedFieldNumber = 1;
    private int unReserved_;
    /// <summary>
    /// 保留字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnReserved {
      get { return unReserved_; }
      set {
        unReserved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgServerListC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgServerListC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnReserved != other.UnReserved) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnReserved != 0) hash ^= UnReserved.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnReserved != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnReserved);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnReserved != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnReserved);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgServerListC other) {
      if (other == null) {
        return;
      }
      if (other.UnReserved != 0) {
        UnReserved = other.UnReserved;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnReserved = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器信息
  /// </summary>
  public sealed partial class ServerInfo : pb::IMessage<ServerInfo> {
    private static readonly pb::MessageParser<ServerInfo> _parser = new pb::MessageParser<ServerInfo>(() => new ServerInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGlobalReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerInfo(ServerInfo other) : this() {
      unServerID_ = other.unServerID_;
      szName_ = other.szName_;
      unMaintain_ = other.unMaintain_;
      unBusy_ = other.unBusy_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerInfo Clone() {
      return new ServerInfo(this);
    }

    /// <summary>Field number for the "unServerID" field.</summary>
    public const int UnServerIDFieldNumber = 1;
    private int unServerID_;
    /// <summary>
    /// 服务器id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnServerID {
      get { return unServerID_; }
      set {
        unServerID_ = value;
      }
    }

    /// <summary>Field number for the "szName" field.</summary>
    public const int SzNameFieldNumber = 2;
    private string szName_ = "";
    /// <summary>
    /// 服务器名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzName {
      get { return szName_; }
      set {
        szName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unMaintain" field.</summary>
    public const int UnMaintainFieldNumber = 3;
    private int unMaintain_;
    /// <summary>
    /// 服务器维护标志位：0-正常，1-维护中
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnMaintain {
      get { return unMaintain_; }
      set {
        unMaintain_ = value;
      }
    }

    /// <summary>Field number for the "unBusy" field.</summary>
    public const int UnBusyFieldNumber = 4;
    private int unBusy_;
    /// <summary>
    /// 服务器是否忙碌标志位：0-不忙碌，1-忙碌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnBusy {
      get { return unBusy_; }
      set {
        unBusy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnServerID != other.UnServerID) return false;
      if (SzName != other.SzName) return false;
      if (UnMaintain != other.UnMaintain) return false;
      if (UnBusy != other.UnBusy) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnServerID != 0) hash ^= UnServerID.GetHashCode();
      if (SzName.Length != 0) hash ^= SzName.GetHashCode();
      if (UnMaintain != 0) hash ^= UnMaintain.GetHashCode();
      if (UnBusy != 0) hash ^= UnBusy.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnServerID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnServerID);
      }
      if (SzName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SzName);
      }
      if (UnMaintain != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnMaintain);
      }
      if (UnBusy != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UnBusy);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnServerID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnServerID);
      }
      if (SzName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzName);
      }
      if (UnMaintain != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnMaintain);
      }
      if (UnBusy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnBusy);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerInfo other) {
      if (other == null) {
        return;
      }
      if (other.UnServerID != 0) {
        UnServerID = other.UnServerID;
      }
      if (other.SzName.Length != 0) {
        SzName = other.SzName;
      }
      if (other.UnMaintain != 0) {
        UnMaintain = other.UnMaintain;
      }
      if (other.UnBusy != 0) {
        UnBusy = other.UnBusy;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnServerID = input.ReadInt32();
            break;
          }
          case 18: {
            SzName = input.ReadString();
            break;
          }
          case 24: {
            UnMaintain = input.ReadInt32();
            break;
          }
          case 32: {
            UnBusy = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：请求服务器列表返回
  /// _MSG_SERVER_LIST_S
  /// </summary>
  public sealed partial class PMsgServerListS : pb::IMessage<PMsgServerListS> {
    private static readonly pb::MessageParser<PMsgServerListS> _parser = new pb::MessageParser<PMsgServerListS>(() => new PMsgServerListS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgServerListS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGlobalReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgServerListS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgServerListS(PMsgServerListS other) : this() {
      cServerInfo_ = other.cServerInfo_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgServerListS Clone() {
      return new PMsgServerListS(this);
    }

    /// <summary>Field number for the "cServerInfo" field.</summary>
    public const int CServerInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Sw.ServerInfo> _repeated_cServerInfo_codec
        = pb::FieldCodec.ForMessage(10, global::Sw.ServerInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.ServerInfo> cServerInfo_ = new pbc::RepeatedField<global::Sw.ServerInfo>();
    /// <summary>
    /// 服务器列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.ServerInfo> CServerInfo {
      get { return cServerInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgServerListS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgServerListS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!cServerInfo_.Equals(other.cServerInfo_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= cServerInfo_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      cServerInfo_.WriteTo(output, _repeated_cServerInfo_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += cServerInfo_.CalculateSize(_repeated_cServerInfo_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgServerListS other) {
      if (other == null) {
        return;
      }
      cServerInfo_.Add(other.cServerInfo_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            cServerInfo_.AddEntriesFrom(input, _repeated_cServerInfo_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：请求生成Guest帐号
  /// _MSG_GENERATE_ACCOUNTID_C
  /// </summary>
  public sealed partial class PMsgGenerateAccountIdC : pb::IMessage<PMsgGenerateAccountIdC> {
    private static readonly pb::MessageParser<PMsgGenerateAccountIdC> _parser = new pb::MessageParser<PMsgGenerateAccountIdC>(() => new PMsgGenerateAccountIdC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgGenerateAccountIdC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGlobalReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGenerateAccountIdC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGenerateAccountIdC(PMsgGenerateAccountIdC other) : this() {
      unReserved_ = other.unReserved_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGenerateAccountIdC Clone() {
      return new PMsgGenerateAccountIdC(this);
    }

    /// <summary>Field number for the "unReserved" field.</summary>
    public const int UnReservedFieldNumber = 1;
    private int unReserved_;
    /// <summary>
    /// 保留字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnReserved {
      get { return unReserved_; }
      set {
        unReserved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgGenerateAccountIdC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgGenerateAccountIdC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnReserved != other.UnReserved) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnReserved != 0) hash ^= UnReserved.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnReserved != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnReserved);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnReserved != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnReserved);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgGenerateAccountIdC other) {
      if (other == null) {
        return;
      }
      if (other.UnReserved != 0) {
        UnReserved = other.UnReserved;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnReserved = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：请求生成Guest帐号回复
  /// _MSG_GENERATE_ACCOUNTID_S
  /// </summary>
  public sealed partial class PMsgGenerateAccountIdS : pb::IMessage<PMsgGenerateAccountIdS> {
    private static readonly pb::MessageParser<PMsgGenerateAccountIdS> _parser = new pb::MessageParser<PMsgGenerateAccountIdS>(() => new PMsgGenerateAccountIdS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgGenerateAccountIdS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGlobalReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGenerateAccountIdS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGenerateAccountIdS(PMsgGenerateAccountIdS other) : this() {
      szAccountId_ = other.szAccountId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGenerateAccountIdS Clone() {
      return new PMsgGenerateAccountIdS(this);
    }

    /// <summary>Field number for the "szAccountId" field.</summary>
    public const int SzAccountIdFieldNumber = 1;
    private string szAccountId_ = "";
    /// <summary>
    /// 帐号id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzAccountId {
      get { return szAccountId_; }
      set {
        szAccountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgGenerateAccountIdS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgGenerateAccountIdS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SzAccountId != other.SzAccountId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SzAccountId.Length != 0) hash ^= SzAccountId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SzAccountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SzAccountId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SzAccountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzAccountId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgGenerateAccountIdS other) {
      if (other == null) {
        return;
      }
      if (other.SzAccountId.Length != 0) {
        SzAccountId = other.SzAccountId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SzAccountId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：请求帐号认证（loginserver）
  /// _MSG_ACCOUNT_CERTIFY_C
  /// </summary>
  public sealed partial class PMsgAccountCertifyC : pb::IMessage<PMsgAccountCertifyC> {
    private static readonly pb::MessageParser<PMsgAccountCertifyC> _parser = new pb::MessageParser<PMsgAccountCertifyC>(() => new PMsgAccountCertifyC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgAccountCertifyC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGlobalReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgAccountCertifyC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgAccountCertifyC(PMsgAccountCertifyC other) : this() {
      unPlatformType_ = other.unPlatformType_;
      szMachineKey_ = other.szMachineKey_;
      unApplId_ = other.unApplId_;
      unChannelId_ = other.unChannelId_;
      szChannelAccountId_ = other.szChannelAccountId_;
      szChannelAccountName_ = other.szChannelAccountName_;
      szChannelToken_ = other.szChannelToken_;
      szChannelData_ = other.szChannelData_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgAccountCertifyC Clone() {
      return new PMsgAccountCertifyC(this);
    }

    /// <summary>Field number for the "unPlatformType" field.</summary>
    public const int UnPlatformTypeFieldNumber = 1;
    private int unPlatformType_;
    /// <summary>
    /// 平台类型（sw::PLATFORM_TYPE）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnPlatformType {
      get { return unPlatformType_; }
      set {
        unPlatformType_ = value;
      }
    }

    /// <summary>Field number for the "szMachineKey" field.</summary>
    public const int SzMachineKeyFieldNumber = 2;
    private string szMachineKey_ = "";
    /// <summary>
    /// 机器码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzMachineKey {
      get { return szMachineKey_; }
      set {
        szMachineKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unApplId" field.</summary>
    public const int UnApplIdFieldNumber = 3;
    private int unApplId_;
    /// <summary>
    /// 游戏代码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnApplId {
      get { return unApplId_; }
      set {
        unApplId_ = value;
      }
    }

    /// <summary>Field number for the "unChannelId" field.</summary>
    public const int UnChannelIdFieldNumber = 4;
    private int unChannelId_;
    /// <summary>
    /// 渠道类型（sw::CHANNEL_TYPE）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnChannelId {
      get { return unChannelId_; }
      set {
        unChannelId_ = value;
      }
    }

    /// <summary>Field number for the "szChannelAccountId" field.</summary>
    public const int SzChannelAccountIdFieldNumber = 5;
    private string szChannelAccountId_ = "";
    /// <summary>
    /// 渠道帐号id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzChannelAccountId {
      get { return szChannelAccountId_; }
      set {
        szChannelAccountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "szChannelAccountName" field.</summary>
    public const int SzChannelAccountNameFieldNumber = 6;
    private string szChannelAccountName_ = "";
    /// <summary>
    /// 渠道帐号名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzChannelAccountName {
      get { return szChannelAccountName_; }
      set {
        szChannelAccountName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "szChannelToken" field.</summary>
    public const int SzChannelTokenFieldNumber = 7;
    private string szChannelToken_ = "";
    /// <summary>
    /// 渠道Token
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzChannelToken {
      get { return szChannelToken_; }
      set {
        szChannelToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "szChannelData" field.</summary>
    public const int SzChannelDataFieldNumber = 8;
    private string szChannelData_ = "";
    /// <summary>
    /// 附加信息，根据渠道不同含义不同，并非必传
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzChannelData {
      get { return szChannelData_; }
      set {
        szChannelData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgAccountCertifyC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgAccountCertifyC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnPlatformType != other.UnPlatformType) return false;
      if (SzMachineKey != other.SzMachineKey) return false;
      if (UnApplId != other.UnApplId) return false;
      if (UnChannelId != other.UnChannelId) return false;
      if (SzChannelAccountId != other.SzChannelAccountId) return false;
      if (SzChannelAccountName != other.SzChannelAccountName) return false;
      if (SzChannelToken != other.SzChannelToken) return false;
      if (SzChannelData != other.SzChannelData) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnPlatformType != 0) hash ^= UnPlatformType.GetHashCode();
      if (SzMachineKey.Length != 0) hash ^= SzMachineKey.GetHashCode();
      if (UnApplId != 0) hash ^= UnApplId.GetHashCode();
      if (UnChannelId != 0) hash ^= UnChannelId.GetHashCode();
      if (SzChannelAccountId.Length != 0) hash ^= SzChannelAccountId.GetHashCode();
      if (SzChannelAccountName.Length != 0) hash ^= SzChannelAccountName.GetHashCode();
      if (SzChannelToken.Length != 0) hash ^= SzChannelToken.GetHashCode();
      if (SzChannelData.Length != 0) hash ^= SzChannelData.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnPlatformType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnPlatformType);
      }
      if (SzMachineKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SzMachineKey);
      }
      if (UnApplId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnApplId);
      }
      if (UnChannelId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UnChannelId);
      }
      if (SzChannelAccountId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SzChannelAccountId);
      }
      if (SzChannelAccountName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SzChannelAccountName);
      }
      if (SzChannelToken.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(SzChannelToken);
      }
      if (SzChannelData.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(SzChannelData);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnPlatformType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnPlatformType);
      }
      if (SzMachineKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzMachineKey);
      }
      if (UnApplId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnApplId);
      }
      if (UnChannelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnChannelId);
      }
      if (SzChannelAccountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzChannelAccountId);
      }
      if (SzChannelAccountName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzChannelAccountName);
      }
      if (SzChannelToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzChannelToken);
      }
      if (SzChannelData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzChannelData);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgAccountCertifyC other) {
      if (other == null) {
        return;
      }
      if (other.UnPlatformType != 0) {
        UnPlatformType = other.UnPlatformType;
      }
      if (other.SzMachineKey.Length != 0) {
        SzMachineKey = other.SzMachineKey;
      }
      if (other.UnApplId != 0) {
        UnApplId = other.UnApplId;
      }
      if (other.UnChannelId != 0) {
        UnChannelId = other.UnChannelId;
      }
      if (other.SzChannelAccountId.Length != 0) {
        SzChannelAccountId = other.SzChannelAccountId;
      }
      if (other.SzChannelAccountName.Length != 0) {
        SzChannelAccountName = other.SzChannelAccountName;
      }
      if (other.SzChannelToken.Length != 0) {
        SzChannelToken = other.SzChannelToken;
      }
      if (other.SzChannelData.Length != 0) {
        SzChannelData = other.SzChannelData;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnPlatformType = input.ReadInt32();
            break;
          }
          case 18: {
            SzMachineKey = input.ReadString();
            break;
          }
          case 24: {
            UnApplId = input.ReadInt32();
            break;
          }
          case 32: {
            UnChannelId = input.ReadInt32();
            break;
          }
          case 42: {
            SzChannelAccountId = input.ReadString();
            break;
          }
          case 50: {
            SzChannelAccountName = input.ReadString();
            break;
          }
          case 58: {
            SzChannelToken = input.ReadString();
            break;
          }
          case 66: {
            SzChannelData = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：请求帐号认证返回（loginserver）
  /// _MSG_ACCOUNT_CERTIFY_S
  /// </summary>
  public sealed partial class PMsgAccountCertifyS : pb::IMessage<PMsgAccountCertifyS> {
    private static readonly pb::MessageParser<PMsgAccountCertifyS> _parser = new pb::MessageParser<PMsgAccountCertifyS>(() => new PMsgAccountCertifyS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgAccountCertifyS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGlobalReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgAccountCertifyS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgAccountCertifyS(PMsgAccountCertifyS other) : this() {
      unPlatformType_ = other.unPlatformType_;
      szMachineKey_ = other.szMachineKey_;
      unApplId_ = other.unApplId_;
      unChannelId_ = other.unChannelId_;
      szChannelAccountId_ = other.szChannelAccountId_;
      szChannelAccountName_ = other.szChannelAccountName_;
      szChannelToken_ = other.szChannelToken_;
      szChannelData_ = other.szChannelData_;
      ullUserId_ = other.ullUserId_;
      unSignedKey_ = other.unSignedKey_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgAccountCertifyS Clone() {
      return new PMsgAccountCertifyS(this);
    }

    /// <summary>Field number for the "unPlatformType" field.</summary>
    public const int UnPlatformTypeFieldNumber = 1;
    private int unPlatformType_;
    /// <summary>
    /// 平台类型（sw::PLATFORM_TYPE）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnPlatformType {
      get { return unPlatformType_; }
      set {
        unPlatformType_ = value;
      }
    }

    /// <summary>Field number for the "szMachineKey" field.</summary>
    public const int SzMachineKeyFieldNumber = 2;
    private string szMachineKey_ = "";
    /// <summary>
    /// 机器码（自营平台专用）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzMachineKey {
      get { return szMachineKey_; }
      set {
        szMachineKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unApplId" field.</summary>
    public const int UnApplIdFieldNumber = 3;
    private int unApplId_;
    /// <summary>
    /// 游戏代码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnApplId {
      get { return unApplId_; }
      set {
        unApplId_ = value;
      }
    }

    /// <summary>Field number for the "unChannelId" field.</summary>
    public const int UnChannelIdFieldNumber = 4;
    private int unChannelId_;
    /// <summary>
    /// 渠道类型（sw::CHANNEL_TYPE）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnChannelId {
      get { return unChannelId_; }
      set {
        unChannelId_ = value;
      }
    }

    /// <summary>Field number for the "szChannelAccountId" field.</summary>
    public const int SzChannelAccountIdFieldNumber = 5;
    private string szChannelAccountId_ = "";
    /// <summary>
    /// 渠道帐号id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzChannelAccountId {
      get { return szChannelAccountId_; }
      set {
        szChannelAccountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "szChannelAccountName" field.</summary>
    public const int SzChannelAccountNameFieldNumber = 6;
    private string szChannelAccountName_ = "";
    /// <summary>
    /// 渠道帐号名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzChannelAccountName {
      get { return szChannelAccountName_; }
      set {
        szChannelAccountName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "szChannelToken" field.</summary>
    public const int SzChannelTokenFieldNumber = 7;
    private string szChannelToken_ = "";
    /// <summary>
    /// 渠道Token
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzChannelToken {
      get { return szChannelToken_; }
      set {
        szChannelToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "szChannelData" field.</summary>
    public const int SzChannelDataFieldNumber = 8;
    private string szChannelData_ = "";
    /// <summary>
    /// 附加信息，根据渠道不同含义不同，并非必传
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzChannelData {
      get { return szChannelData_; }
      set {
        szChannelData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ullUserId" field.</summary>
    public const int UllUserIdFieldNumber = 10;
    private long ullUserId_;
    /// <summary>
    /// 玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllUserId {
      get { return ullUserId_; }
      set {
        ullUserId_ = value;
      }
    }

    /// <summary>Field number for the "unSignedKey" field.</summary>
    public const int UnSignedKeyFieldNumber = 11;
    private int unSignedKey_;
    /// <summary>
    /// 登陆验证码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnSignedKey {
      get { return unSignedKey_; }
      set {
        unSignedKey_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgAccountCertifyS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgAccountCertifyS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnPlatformType != other.UnPlatformType) return false;
      if (SzMachineKey != other.SzMachineKey) return false;
      if (UnApplId != other.UnApplId) return false;
      if (UnChannelId != other.UnChannelId) return false;
      if (SzChannelAccountId != other.SzChannelAccountId) return false;
      if (SzChannelAccountName != other.SzChannelAccountName) return false;
      if (SzChannelToken != other.SzChannelToken) return false;
      if (SzChannelData != other.SzChannelData) return false;
      if (UllUserId != other.UllUserId) return false;
      if (UnSignedKey != other.UnSignedKey) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnPlatformType != 0) hash ^= UnPlatformType.GetHashCode();
      if (SzMachineKey.Length != 0) hash ^= SzMachineKey.GetHashCode();
      if (UnApplId != 0) hash ^= UnApplId.GetHashCode();
      if (UnChannelId != 0) hash ^= UnChannelId.GetHashCode();
      if (SzChannelAccountId.Length != 0) hash ^= SzChannelAccountId.GetHashCode();
      if (SzChannelAccountName.Length != 0) hash ^= SzChannelAccountName.GetHashCode();
      if (SzChannelToken.Length != 0) hash ^= SzChannelToken.GetHashCode();
      if (SzChannelData.Length != 0) hash ^= SzChannelData.GetHashCode();
      if (UllUserId != 0L) hash ^= UllUserId.GetHashCode();
      if (UnSignedKey != 0) hash ^= UnSignedKey.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnPlatformType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnPlatformType);
      }
      if (SzMachineKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SzMachineKey);
      }
      if (UnApplId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnApplId);
      }
      if (UnChannelId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UnChannelId);
      }
      if (SzChannelAccountId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SzChannelAccountId);
      }
      if (SzChannelAccountName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SzChannelAccountName);
      }
      if (SzChannelToken.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(SzChannelToken);
      }
      if (SzChannelData.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(SzChannelData);
      }
      if (UllUserId != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(UllUserId);
      }
      if (UnSignedKey != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(UnSignedKey);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnPlatformType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnPlatformType);
      }
      if (SzMachineKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzMachineKey);
      }
      if (UnApplId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnApplId);
      }
      if (UnChannelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnChannelId);
      }
      if (SzChannelAccountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzChannelAccountId);
      }
      if (SzChannelAccountName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzChannelAccountName);
      }
      if (SzChannelToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzChannelToken);
      }
      if (SzChannelData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzChannelData);
      }
      if (UllUserId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllUserId);
      }
      if (UnSignedKey != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnSignedKey);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgAccountCertifyS other) {
      if (other == null) {
        return;
      }
      if (other.UnPlatformType != 0) {
        UnPlatformType = other.UnPlatformType;
      }
      if (other.SzMachineKey.Length != 0) {
        SzMachineKey = other.SzMachineKey;
      }
      if (other.UnApplId != 0) {
        UnApplId = other.UnApplId;
      }
      if (other.UnChannelId != 0) {
        UnChannelId = other.UnChannelId;
      }
      if (other.SzChannelAccountId.Length != 0) {
        SzChannelAccountId = other.SzChannelAccountId;
      }
      if (other.SzChannelAccountName.Length != 0) {
        SzChannelAccountName = other.SzChannelAccountName;
      }
      if (other.SzChannelToken.Length != 0) {
        SzChannelToken = other.SzChannelToken;
      }
      if (other.SzChannelData.Length != 0) {
        SzChannelData = other.SzChannelData;
      }
      if (other.UllUserId != 0L) {
        UllUserId = other.UllUserId;
      }
      if (other.UnSignedKey != 0) {
        UnSignedKey = other.UnSignedKey;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnPlatformType = input.ReadInt32();
            break;
          }
          case 18: {
            SzMachineKey = input.ReadString();
            break;
          }
          case 24: {
            UnApplId = input.ReadInt32();
            break;
          }
          case 32: {
            UnChannelId = input.ReadInt32();
            break;
          }
          case 42: {
            SzChannelAccountId = input.ReadString();
            break;
          }
          case 50: {
            SzChannelAccountName = input.ReadString();
            break;
          }
          case 58: {
            SzChannelToken = input.ReadString();
            break;
          }
          case 66: {
            SzChannelData = input.ReadString();
            break;
          }
          case 80: {
            UllUserId = input.ReadInt64();
            break;
          }
          case 88: {
            UnSignedKey = input.ReadInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：手机号登陆认证（loginserver）
  /// _MSG_PHONE_CERTIFY_C
  /// </summary>
  public sealed partial class PMsgPhoneCertifyC : pb::IMessage<PMsgPhoneCertifyC> {
    private static readonly pb::MessageParser<PMsgPhoneCertifyC> _parser = new pb::MessageParser<PMsgPhoneCertifyC>(() => new PMsgPhoneCertifyC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgPhoneCertifyC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGlobalReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgPhoneCertifyC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgPhoneCertifyC(PMsgPhoneCertifyC other) : this() {
      szPhone_ = other.szPhone_;
      szPassword_ = other.szPassword_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgPhoneCertifyC Clone() {
      return new PMsgPhoneCertifyC(this);
    }

    /// <summary>Field number for the "szPhone" field.</summary>
    public const int SzPhoneFieldNumber = 1;
    private string szPhone_ = "";
    /// <summary>
    /// 手机号码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzPhone {
      get { return szPhone_; }
      set {
        szPhone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "szPassword" field.</summary>
    public const int SzPasswordFieldNumber = 2;
    private string szPassword_ = "";
    /// <summary>
    /// 密码（MD5（手机号码|psw|1001））
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzPassword {
      get { return szPassword_; }
      set {
        szPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgPhoneCertifyC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgPhoneCertifyC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SzPhone != other.SzPhone) return false;
      if (SzPassword != other.SzPassword) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SzPhone.Length != 0) hash ^= SzPhone.GetHashCode();
      if (SzPassword.Length != 0) hash ^= SzPassword.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SzPhone.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SzPhone);
      }
      if (SzPassword.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SzPassword);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SzPhone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzPhone);
      }
      if (SzPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzPassword);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgPhoneCertifyC other) {
      if (other == null) {
        return;
      }
      if (other.SzPhone.Length != 0) {
        SzPhone = other.SzPhone;
      }
      if (other.SzPassword.Length != 0) {
        SzPassword = other.SzPassword;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SzPhone = input.ReadString();
            break;
          }
          case 18: {
            SzPassword = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：手机号登陆认证（loginserver）
  /// _MSG_PHONE_CERTIFY_S
  /// </summary>
  public sealed partial class PMsgPhoneCertifyS : pb::IMessage<PMsgPhoneCertifyS> {
    private static readonly pb::MessageParser<PMsgPhoneCertifyS> _parser = new pb::MessageParser<PMsgPhoneCertifyS>(() => new PMsgPhoneCertifyS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgPhoneCertifyS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGlobalReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgPhoneCertifyS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgPhoneCertifyS(PMsgPhoneCertifyS other) : this() {
      szPhone_ = other.szPhone_;
      ullUserId_ = other.ullUserId_;
      unSignedKey_ = other.unSignedKey_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgPhoneCertifyS Clone() {
      return new PMsgPhoneCertifyS(this);
    }

    /// <summary>Field number for the "szPhone" field.</summary>
    public const int SzPhoneFieldNumber = 1;
    private string szPhone_ = "";
    /// <summary>
    /// 手机号码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzPhone {
      get { return szPhone_; }
      set {
        szPhone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ullUserId" field.</summary>
    public const int UllUserIdFieldNumber = 2;
    private long ullUserId_;
    /// <summary>
    /// 玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllUserId {
      get { return ullUserId_; }
      set {
        ullUserId_ = value;
      }
    }

    /// <summary>Field number for the "unSignedKey" field.</summary>
    public const int UnSignedKeyFieldNumber = 3;
    private int unSignedKey_;
    /// <summary>
    /// 登陆验证码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnSignedKey {
      get { return unSignedKey_; }
      set {
        unSignedKey_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgPhoneCertifyS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgPhoneCertifyS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SzPhone != other.SzPhone) return false;
      if (UllUserId != other.UllUserId) return false;
      if (UnSignedKey != other.UnSignedKey) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SzPhone.Length != 0) hash ^= SzPhone.GetHashCode();
      if (UllUserId != 0L) hash ^= UllUserId.GetHashCode();
      if (UnSignedKey != 0) hash ^= UnSignedKey.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SzPhone.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SzPhone);
      }
      if (UllUserId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UllUserId);
      }
      if (UnSignedKey != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnSignedKey);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SzPhone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzPhone);
      }
      if (UllUserId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllUserId);
      }
      if (UnSignedKey != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnSignedKey);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgPhoneCertifyS other) {
      if (other == null) {
        return;
      }
      if (other.SzPhone.Length != 0) {
        SzPhone = other.SzPhone;
      }
      if (other.UllUserId != 0L) {
        UllUserId = other.UllUserId;
      }
      if (other.UnSignedKey != 0) {
        UnSignedKey = other.UnSignedKey;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SzPhone = input.ReadString();
            break;
          }
          case 16: {
            UllUserId = input.ReadInt64();
            break;
          }
          case 24: {
            UnSignedKey = input.ReadInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：玩家登陆请求（loginserver）
  /// _MSG_LOGIN_C
  /// </summary>
  public sealed partial class PMsgLoginC : pb::IMessage<PMsgLoginC> {
    private static readonly pb::MessageParser<PMsgLoginC> _parser = new pb::MessageParser<PMsgLoginC>(() => new PMsgLoginC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgLoginC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGlobalReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLoginC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLoginC(PMsgLoginC other) : this() {
      ullUserId_ = other.ullUserId_;
      unSignedKey_ = other.unSignedKey_;
      unServerId_ = other.unServerId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLoginC Clone() {
      return new PMsgLoginC(this);
    }

    /// <summary>Field number for the "ullUserId" field.</summary>
    public const int UllUserIdFieldNumber = 1;
    private long ullUserId_;
    /// <summary>
    /// 玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllUserId {
      get { return ullUserId_; }
      set {
        ullUserId_ = value;
      }
    }

    /// <summary>Field number for the "unSignedKey" field.</summary>
    public const int UnSignedKeyFieldNumber = 2;
    private int unSignedKey_;
    /// <summary>
    /// 登陆验证字符串	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnSignedKey {
      get { return unSignedKey_; }
      set {
        unSignedKey_ = value;
      }
    }

    /// <summary>Field number for the "unServerId" field.</summary>
    public const int UnServerIdFieldNumber = 3;
    private int unServerId_;
    /// <summary>
    /// 服务器编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnServerId {
      get { return unServerId_; }
      set {
        unServerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgLoginC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgLoginC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllUserId != other.UllUserId) return false;
      if (UnSignedKey != other.UnSignedKey) return false;
      if (UnServerId != other.UnServerId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllUserId != 0L) hash ^= UllUserId.GetHashCode();
      if (UnSignedKey != 0) hash ^= UnSignedKey.GetHashCode();
      if (UnServerId != 0) hash ^= UnServerId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllUserId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UllUserId);
      }
      if (UnSignedKey != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnSignedKey);
      }
      if (UnServerId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnServerId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllUserId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllUserId);
      }
      if (UnSignedKey != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnSignedKey);
      }
      if (UnServerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnServerId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgLoginC other) {
      if (other == null) {
        return;
      }
      if (other.UllUserId != 0L) {
        UllUserId = other.UllUserId;
      }
      if (other.UnSignedKey != 0) {
        UnSignedKey = other.UnSignedKey;
      }
      if (other.UnServerId != 0) {
        UnServerId = other.UnServerId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllUserId = input.ReadInt64();
            break;
          }
          case 16: {
            UnSignedKey = input.ReadInt32();
            break;
          }
          case 24: {
            UnServerId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：玩家登陆请求（loginserver）回复
  /// _MSG_LOGIN_S
  /// </summary>
  public sealed partial class PMsgLoginS : pb::IMessage<PMsgLoginS> {
    private static readonly pb::MessageParser<PMsgLoginS> _parser = new pb::MessageParser<PMsgLoginS>(() => new PMsgLoginS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgLoginS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGlobalReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLoginS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLoginS(PMsgLoginS other) : this() {
      ullUserId_ = other.ullUserId_;
      unServerId_ = other.unServerId_;
      unIP_ = other.unIP_;
      unPort_ = other.unPort_;
      unCode_ = other.unCode_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLoginS Clone() {
      return new PMsgLoginS(this);
    }

    /// <summary>Field number for the "ullUserId" field.</summary>
    public const int UllUserIdFieldNumber = 1;
    private long ullUserId_;
    /// <summary>
    /// 玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllUserId {
      get { return ullUserId_; }
      set {
        ullUserId_ = value;
      }
    }

    /// <summary>Field number for the "unServerId" field.</summary>
    public const int UnServerIdFieldNumber = 2;
    private int unServerId_;
    /// <summary>
    /// 服务器编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnServerId {
      get { return unServerId_; }
      set {
        unServerId_ = value;
      }
    }

    /// <summary>Field number for the "unIP" field.</summary>
    public const int UnIPFieldNumber = 3;
    private int unIP_;
    /// <summary>
    /// gameserver服务器IP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnIP {
      get { return unIP_; }
      set {
        unIP_ = value;
      }
    }

    /// <summary>Field number for the "unPort" field.</summary>
    public const int UnPortFieldNumber = 4;
    private int unPort_;
    /// <summary>
    /// gameserver服务器端口
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnPort {
      get { return unPort_; }
      set {
        unPort_ = value;
      }
    }

    /// <summary>Field number for the "unCode" field.</summary>
    public const int UnCodeFieldNumber = 5;
    private int unCode_;
    /// <summary>
    /// 登陆gameserver的验证码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnCode {
      get { return unCode_; }
      set {
        unCode_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgLoginS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgLoginS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllUserId != other.UllUserId) return false;
      if (UnServerId != other.UnServerId) return false;
      if (UnIP != other.UnIP) return false;
      if (UnPort != other.UnPort) return false;
      if (UnCode != other.UnCode) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllUserId != 0L) hash ^= UllUserId.GetHashCode();
      if (UnServerId != 0) hash ^= UnServerId.GetHashCode();
      if (UnIP != 0) hash ^= UnIP.GetHashCode();
      if (UnPort != 0) hash ^= UnPort.GetHashCode();
      if (UnCode != 0) hash ^= UnCode.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllUserId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UllUserId);
      }
      if (UnServerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnServerId);
      }
      if (UnIP != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnIP);
      }
      if (UnPort != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UnPort);
      }
      if (UnCode != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(UnCode);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllUserId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllUserId);
      }
      if (UnServerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnServerId);
      }
      if (UnIP != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnIP);
      }
      if (UnPort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnPort);
      }
      if (UnCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnCode);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgLoginS other) {
      if (other == null) {
        return;
      }
      if (other.UllUserId != 0L) {
        UllUserId = other.UllUserId;
      }
      if (other.UnServerId != 0) {
        UnServerId = other.UnServerId;
      }
      if (other.UnIP != 0) {
        UnIP = other.UnIP;
      }
      if (other.UnPort != 0) {
        UnPort = other.UnPort;
      }
      if (other.UnCode != 0) {
        UnCode = other.UnCode;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllUserId = input.ReadInt64();
            break;
          }
          case 16: {
            UnServerId = input.ReadInt32();
            break;
          }
          case 24: {
            UnIP = input.ReadInt32();
            break;
          }
          case 32: {
            UnPort = input.ReadInt32();
            break;
          }
          case 40: {
            UnCode = input.ReadInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：获取重置密码短信验证码
  /// _MSG_RESET_PSW_GET_CODE_C
  /// </summary>
  public sealed partial class PMsgResetPswGetCodeC : pb::IMessage<PMsgResetPswGetCodeC> {
    private static readonly pb::MessageParser<PMsgResetPswGetCodeC> _parser = new pb::MessageParser<PMsgResetPswGetCodeC>(() => new PMsgResetPswGetCodeC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgResetPswGetCodeC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGlobalReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgResetPswGetCodeC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgResetPswGetCodeC(PMsgResetPswGetCodeC other) : this() {
      szPhone_ = other.szPhone_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgResetPswGetCodeC Clone() {
      return new PMsgResetPswGetCodeC(this);
    }

    /// <summary>Field number for the "szPhone" field.</summary>
    public const int SzPhoneFieldNumber = 1;
    private string szPhone_ = "";
    /// <summary>
    /// 手机号码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzPhone {
      get { return szPhone_; }
      set {
        szPhone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgResetPswGetCodeC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgResetPswGetCodeC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SzPhone != other.SzPhone) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SzPhone.Length != 0) hash ^= SzPhone.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SzPhone.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SzPhone);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SzPhone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzPhone);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgResetPswGetCodeC other) {
      if (other == null) {
        return;
      }
      if (other.SzPhone.Length != 0) {
        SzPhone = other.SzPhone;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SzPhone = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：获取重置密码短信验证码回复
  /// _MSG_RESET_PSW_GET_CODE_S
  /// </summary>
  public sealed partial class PMsgResetPswGetCodeS : pb::IMessage<PMsgResetPswGetCodeS> {
    private static readonly pb::MessageParser<PMsgResetPswGetCodeS> _parser = new pb::MessageParser<PMsgResetPswGetCodeS>(() => new PMsgResetPswGetCodeS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgResetPswGetCodeS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGlobalReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgResetPswGetCodeS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgResetPswGetCodeS(PMsgResetPswGetCodeS other) : this() {
      szPhone_ = other.szPhone_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgResetPswGetCodeS Clone() {
      return new PMsgResetPswGetCodeS(this);
    }

    /// <summary>Field number for the "szPhone" field.</summary>
    public const int SzPhoneFieldNumber = 1;
    private string szPhone_ = "";
    /// <summary>
    /// 手机号码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzPhone {
      get { return szPhone_; }
      set {
        szPhone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgResetPswGetCodeS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgResetPswGetCodeS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SzPhone != other.SzPhone) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SzPhone.Length != 0) hash ^= SzPhone.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SzPhone.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SzPhone);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SzPhone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzPhone);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgResetPswGetCodeS other) {
      if (other == null) {
        return;
      }
      if (other.SzPhone.Length != 0) {
        SzPhone = other.SzPhone;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SzPhone = input.ReadString();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：重置密码
  /// _MSG_RESET_PSW_C
  /// </summary>
  public sealed partial class PMsgResetPswC : pb::IMessage<PMsgResetPswC> {
    private static readonly pb::MessageParser<PMsgResetPswC> _parser = new pb::MessageParser<PMsgResetPswC>(() => new PMsgResetPswC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgResetPswC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGlobalReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgResetPswC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgResetPswC(PMsgResetPswC other) : this() {
      szPhone_ = other.szPhone_;
      szCode_ = other.szCode_;
      szPassword_ = other.szPassword_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgResetPswC Clone() {
      return new PMsgResetPswC(this);
    }

    /// <summary>Field number for the "szPhone" field.</summary>
    public const int SzPhoneFieldNumber = 1;
    private string szPhone_ = "";
    /// <summary>
    /// 手机号码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzPhone {
      get { return szPhone_; }
      set {
        szPhone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "szCode" field.</summary>
    public const int SzCodeFieldNumber = 2;
    private string szCode_ = "";
    /// <summary>
    /// 手机短信验证码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzCode {
      get { return szCode_; }
      set {
        szCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "szPassword" field.</summary>
    public const int SzPasswordFieldNumber = 3;
    private string szPassword_ = "";
    /// <summary>
    /// 密码（MD5（手机号码|psw|1001））
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzPassword {
      get { return szPassword_; }
      set {
        szPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgResetPswC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgResetPswC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SzPhone != other.SzPhone) return false;
      if (SzCode != other.SzCode) return false;
      if (SzPassword != other.SzPassword) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SzPhone.Length != 0) hash ^= SzPhone.GetHashCode();
      if (SzCode.Length != 0) hash ^= SzCode.GetHashCode();
      if (SzPassword.Length != 0) hash ^= SzPassword.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SzPhone.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SzPhone);
      }
      if (SzCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SzCode);
      }
      if (SzPassword.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SzPassword);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SzPhone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzPhone);
      }
      if (SzCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzCode);
      }
      if (SzPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzPassword);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgResetPswC other) {
      if (other == null) {
        return;
      }
      if (other.SzPhone.Length != 0) {
        SzPhone = other.SzPhone;
      }
      if (other.SzCode.Length != 0) {
        SzCode = other.SzCode;
      }
      if (other.SzPassword.Length != 0) {
        SzPassword = other.SzPassword;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SzPhone = input.ReadString();
            break;
          }
          case 18: {
            SzCode = input.ReadString();
            break;
          }
          case 26: {
            SzPassword = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：重置密码回复
  /// _MSG_RESET_PSW_S
  /// </summary>
  public sealed partial class PMsgResetPswS : pb::IMessage<PMsgResetPswS> {
    private static readonly pb::MessageParser<PMsgResetPswS> _parser = new pb::MessageParser<PMsgResetPswS>(() => new PMsgResetPswS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgResetPswS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGlobalReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgResetPswS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgResetPswS(PMsgResetPswS other) : this() {
      szPhone_ = other.szPhone_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgResetPswS Clone() {
      return new PMsgResetPswS(this);
    }

    /// <summary>Field number for the "szPhone" field.</summary>
    public const int SzPhoneFieldNumber = 1;
    private string szPhone_ = "";
    /// <summary>
    /// 手机号码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzPhone {
      get { return szPhone_; }
      set {
        szPhone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgResetPswS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgResetPswS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SzPhone != other.SzPhone) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SzPhone.Length != 0) hash ^= SzPhone.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SzPhone.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SzPhone);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SzPhone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzPhone);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgResetPswS other) {
      if (other == null) {
        return;
      }
      if (other.SzPhone.Length != 0) {
        SzPhone = other.SzPhone;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SzPhone = input.ReadString();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：谷歌登陆认证（loginserver）
  /// _MSG_GOOGLE_CERTIFY_C
  /// </summary>
  public sealed partial class PMsgGoogleCertifyC : pb::IMessage<PMsgGoogleCertifyC> {
    private static readonly pb::MessageParser<PMsgGoogleCertifyC> _parser = new pb::MessageParser<PMsgGoogleCertifyC>(() => new PMsgGoogleCertifyC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgGoogleCertifyC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGlobalReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGoogleCertifyC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGoogleCertifyC(PMsgGoogleCertifyC other) : this() {
      szGoogleAccount_ = other.szGoogleAccount_;
      szToken_ = other.szToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGoogleCertifyC Clone() {
      return new PMsgGoogleCertifyC(this);
    }

    /// <summary>Field number for the "szGoogleAccount" field.</summary>
    public const int SzGoogleAccountFieldNumber = 1;
    private string szGoogleAccount_ = "";
    /// <summary>
    /// 谷歌帐号（gmail）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzGoogleAccount {
      get { return szGoogleAccount_; }
      set {
        szGoogleAccount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "szToken" field.</summary>
    public const int SzTokenFieldNumber = 2;
    private string szToken_ = "";
    /// <summary>
    /// 谷歌token
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzToken {
      get { return szToken_; }
      set {
        szToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgGoogleCertifyC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgGoogleCertifyC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SzGoogleAccount != other.SzGoogleAccount) return false;
      if (SzToken != other.SzToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SzGoogleAccount.Length != 0) hash ^= SzGoogleAccount.GetHashCode();
      if (SzToken.Length != 0) hash ^= SzToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SzGoogleAccount.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SzGoogleAccount);
      }
      if (SzToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SzToken);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SzGoogleAccount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzGoogleAccount);
      }
      if (SzToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgGoogleCertifyC other) {
      if (other == null) {
        return;
      }
      if (other.SzGoogleAccount.Length != 0) {
        SzGoogleAccount = other.SzGoogleAccount;
      }
      if (other.SzToken.Length != 0) {
        SzToken = other.SzToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SzGoogleAccount = input.ReadString();
            break;
          }
          case 18: {
            SzToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：谷歌登陆认证回复（loginserver）
  /// _MSG_GOOGLE_CERTIFY_S
  /// </summary>
  public sealed partial class PMsgGoogleCertifyS : pb::IMessage<PMsgGoogleCertifyS> {
    private static readonly pb::MessageParser<PMsgGoogleCertifyS> _parser = new pb::MessageParser<PMsgGoogleCertifyS>(() => new PMsgGoogleCertifyS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgGoogleCertifyS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGlobalReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGoogleCertifyS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGoogleCertifyS(PMsgGoogleCertifyS other) : this() {
      szGoogleAccount_ = other.szGoogleAccount_;
      ullUserId_ = other.ullUserId_;
      unSignedKey_ = other.unSignedKey_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGoogleCertifyS Clone() {
      return new PMsgGoogleCertifyS(this);
    }

    /// <summary>Field number for the "szGoogleAccount" field.</summary>
    public const int SzGoogleAccountFieldNumber = 1;
    private string szGoogleAccount_ = "";
    /// <summary>
    /// 谷歌帐号（gmail）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzGoogleAccount {
      get { return szGoogleAccount_; }
      set {
        szGoogleAccount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ullUserId" field.</summary>
    public const int UllUserIdFieldNumber = 2;
    private long ullUserId_;
    /// <summary>
    /// 玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllUserId {
      get { return ullUserId_; }
      set {
        ullUserId_ = value;
      }
    }

    /// <summary>Field number for the "unSignedKey" field.</summary>
    public const int UnSignedKeyFieldNumber = 3;
    private int unSignedKey_;
    /// <summary>
    /// 登陆验证码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnSignedKey {
      get { return unSignedKey_; }
      set {
        unSignedKey_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgGoogleCertifyS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgGoogleCertifyS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SzGoogleAccount != other.SzGoogleAccount) return false;
      if (UllUserId != other.UllUserId) return false;
      if (UnSignedKey != other.UnSignedKey) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SzGoogleAccount.Length != 0) hash ^= SzGoogleAccount.GetHashCode();
      if (UllUserId != 0L) hash ^= UllUserId.GetHashCode();
      if (UnSignedKey != 0) hash ^= UnSignedKey.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SzGoogleAccount.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SzGoogleAccount);
      }
      if (UllUserId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UllUserId);
      }
      if (UnSignedKey != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnSignedKey);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SzGoogleAccount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzGoogleAccount);
      }
      if (UllUserId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllUserId);
      }
      if (UnSignedKey != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnSignedKey);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgGoogleCertifyS other) {
      if (other == null) {
        return;
      }
      if (other.SzGoogleAccount.Length != 0) {
        SzGoogleAccount = other.SzGoogleAccount;
      }
      if (other.UllUserId != 0L) {
        UllUserId = other.UllUserId;
      }
      if (other.UnSignedKey != 0) {
        UnSignedKey = other.UnSignedKey;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SzGoogleAccount = input.ReadString();
            break;
          }
          case 16: {
            UllUserId = input.ReadInt64();
            break;
          }
          case 24: {
            UnSignedKey = input.ReadInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：facebook登陆认证（loginserver）
  /// _MSG_FACEBOOK_CERTIFY_C
  /// </summary>
  public sealed partial class PMsgFacebookCertifyC : pb::IMessage<PMsgFacebookCertifyC> {
    private static readonly pb::MessageParser<PMsgFacebookCertifyC> _parser = new pb::MessageParser<PMsgFacebookCertifyC>(() => new PMsgFacebookCertifyC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFacebookCertifyC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGlobalReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFacebookCertifyC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFacebookCertifyC(PMsgFacebookCertifyC other) : this() {
      szFacebookAccount_ = other.szFacebookAccount_;
      szToken_ = other.szToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFacebookCertifyC Clone() {
      return new PMsgFacebookCertifyC(this);
    }

    /// <summary>Field number for the "szFacebookAccount" field.</summary>
    public const int SzFacebookAccountFieldNumber = 1;
    private string szFacebookAccount_ = "";
    /// <summary>
    /// facebook帐号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzFacebookAccount {
      get { return szFacebookAccount_; }
      set {
        szFacebookAccount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "szToken" field.</summary>
    public const int SzTokenFieldNumber = 2;
    private string szToken_ = "";
    /// <summary>
    /// facebook token
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzToken {
      get { return szToken_; }
      set {
        szToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFacebookCertifyC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFacebookCertifyC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SzFacebookAccount != other.SzFacebookAccount) return false;
      if (SzToken != other.SzToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SzFacebookAccount.Length != 0) hash ^= SzFacebookAccount.GetHashCode();
      if (SzToken.Length != 0) hash ^= SzToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SzFacebookAccount.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SzFacebookAccount);
      }
      if (SzToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SzToken);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SzFacebookAccount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzFacebookAccount);
      }
      if (SzToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFacebookCertifyC other) {
      if (other == null) {
        return;
      }
      if (other.SzFacebookAccount.Length != 0) {
        SzFacebookAccount = other.SzFacebookAccount;
      }
      if (other.SzToken.Length != 0) {
        SzToken = other.SzToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SzFacebookAccount = input.ReadString();
            break;
          }
          case 18: {
            SzToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：facebook登陆认证回复（loginserver）
  /// _MSG_FACEBOOK_CERTIFY_S
  /// </summary>
  public sealed partial class PMsgFacebookCertifyS : pb::IMessage<PMsgFacebookCertifyS> {
    private static readonly pb::MessageParser<PMsgFacebookCertifyS> _parser = new pb::MessageParser<PMsgFacebookCertifyS>(() => new PMsgFacebookCertifyS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFacebookCertifyS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGlobalReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFacebookCertifyS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFacebookCertifyS(PMsgFacebookCertifyS other) : this() {
      szFacebookAccount_ = other.szFacebookAccount_;
      ullUserId_ = other.ullUserId_;
      unSignedKey_ = other.unSignedKey_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFacebookCertifyS Clone() {
      return new PMsgFacebookCertifyS(this);
    }

    /// <summary>Field number for the "szFacebookAccount" field.</summary>
    public const int SzFacebookAccountFieldNumber = 1;
    private string szFacebookAccount_ = "";
    /// <summary>
    /// facebook帐号（gmail）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzFacebookAccount {
      get { return szFacebookAccount_; }
      set {
        szFacebookAccount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ullUserId" field.</summary>
    public const int UllUserIdFieldNumber = 2;
    private long ullUserId_;
    /// <summary>
    /// 玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllUserId {
      get { return ullUserId_; }
      set {
        ullUserId_ = value;
      }
    }

    /// <summary>Field number for the "unSignedKey" field.</summary>
    public const int UnSignedKeyFieldNumber = 3;
    private int unSignedKey_;
    /// <summary>
    /// 登陆验证码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnSignedKey {
      get { return unSignedKey_; }
      set {
        unSignedKey_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFacebookCertifyS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFacebookCertifyS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SzFacebookAccount != other.SzFacebookAccount) return false;
      if (UllUserId != other.UllUserId) return false;
      if (UnSignedKey != other.UnSignedKey) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SzFacebookAccount.Length != 0) hash ^= SzFacebookAccount.GetHashCode();
      if (UllUserId != 0L) hash ^= UllUserId.GetHashCode();
      if (UnSignedKey != 0) hash ^= UnSignedKey.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SzFacebookAccount.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SzFacebookAccount);
      }
      if (UllUserId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UllUserId);
      }
      if (UnSignedKey != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnSignedKey);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SzFacebookAccount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzFacebookAccount);
      }
      if (UllUserId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllUserId);
      }
      if (UnSignedKey != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnSignedKey);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFacebookCertifyS other) {
      if (other == null) {
        return;
      }
      if (other.SzFacebookAccount.Length != 0) {
        SzFacebookAccount = other.SzFacebookAccount;
      }
      if (other.UllUserId != 0L) {
        UllUserId = other.UllUserId;
      }
      if (other.UnSignedKey != 0) {
        UnSignedKey = other.UnSignedKey;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SzFacebookAccount = input.ReadString();
            break;
          }
          case 16: {
            UllUserId = input.ReadInt64();
            break;
          }
          case 24: {
            UnSignedKey = input.ReadInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
