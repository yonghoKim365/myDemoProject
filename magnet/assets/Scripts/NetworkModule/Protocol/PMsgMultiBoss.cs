// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/PMsgMultiBoss.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Sw {

  /// <summary>Holder for reflection information generated from protos/PMsgMultiBoss.proto</summary>
  public static partial class PMsgMultiBossReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/PMsgMultiBoss.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PMsgMultiBossReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chpwcm90b3MvUE1zZ011bHRpQm9zcy5wcm90bxICc3ciKQoTUE1zZ011bHRp",
            "Qm9zc1F1ZXJ5QxISCgp1blJlc2VydmVkGAEgASgFIkoKE1BNc2dNdWx0aUJv",
            "c3NRdWVyeVMSFwoPdW5EYWlseUNvbXBsZXRlGAEgASgFEhoKEnVuTWF4RGFp",
            "bHlDb21wbGV0ZRgCIAEoBSIyChhQTXNnTXVsdGlCb3NzQ3JlYXRlUm9vbUMS",
            "FgoOdW5Cb3NzQmF0dGxlSWQYASABKAUiWgoYUE1zZ011bHRpQm9zc0NyZWF0",
            "ZVJvb21TEhYKDnVuQm9zc0JhdHRsZUlkGAEgASgFEhEKCXVsbFJvb21JZBgC",
            "IAEoAxITCgt1bkVycm9yQ29kZRhjIAEoBSI/ChRQTXNnTXVsdGlCb3NzSW52",
            "aXRlQxIUCgx1bkdsb2JhbEZsYWcYASABKAUSEQoJdWxsUm9sZUlkGAIgAygD",
            "IlQKFFBNc2dNdWx0aUJvc3NJbnZpdGVTEhQKDHVuR2xvYmFsRmxhZxgBIAEo",
            "BRIRCgl1bGxSb2xlSWQYAiADKAMSEwoLdW5FcnJvckNvZGUYYyABKAUikgEK",
            "GFBNc2dNdWx0aUJvc3NJbnZpdGVSZWN2UxIUCgx1bkdsb2JhbEZsYWcYASAB",
            "KAUSEQoJdWxsUm9sZUlkGAIgASgDEhIKCnVuUm9sZVR5cGUYAyABKAUSDgoG",
            "c3pOYW1lGAQgASgJEhYKDnVuQm9zc0JhdHRsZUlkGAUgASgFEhEKCXVsbFJv",
            "b21JZBgGIAEoAyIwChZQTXNnTXVsdGlCb3NzUm9vbUxpc3RDEhYKDnVuQm9z",
            "c0JhdHRsZUlkGAEgASgFIm0KFU11bHRpQm9zc1Jvb21Sb2xlSW5mbxIRCgl1",
            "bGxSb2xlSWQYASABKAMSDgoGdW5UeXBlGAIgASgFEg8KB3VubGV2ZWwYAyAB",
            "KAUSDgoGc3pOYW1lGAQgASgJEhAKCHVuQXR0YWNrGAUgASgFIo8BChFNdWx0",
            "aUJvc3NSb29tSW5mbxIRCgl1bGxSb29tSWQYASABKAMSFgoOdW5Cb3NzQmF0",
            "dGxlSWQYAiABKAUSEgoKdWxsT3duZXJJZBgDIAEoAxIRCgl1bk1heFJvbGUY",
            "BCABKAUSKAoFY0luZm8YBSADKAsyGS5zdy5NdWx0aUJvc3NSb29tUm9sZUlu",
            "Zm8iawoWUE1zZ011bHRpQm9zc1Jvb21MaXN0UxIWCg51bkJvc3NCYXR0bGVJ",
            "ZBgBIAEoBRITCgt1blJvb21Db3VudBgCIAEoBRIkCgVjSW5mbxgDIAMoCzIV",
            "LnN3Lk11bHRpQm9zc1Jvb21JbmZvIisKFlBNc2dNdWx0aUJvc3NSb29tSW5m",
            "b0MSEQoJdWxsUm9vbUlkGAEgASgDIlMKFlBNc2dNdWx0aUJvc3NSb29tSW5m",
            "b1MSEwoLdW5Sb29tQ291bnQYASABKAUSJAoFY0luZm8YAiADKAsyFS5zdy5N",
            "dWx0aUJvc3NSb29tSW5mbyIsChdQTXNnTXVsdGlCb3NzRW50ZXJSb29tQxIR",
            "Cgl1bGxSb29tSWQYASABKAMiQQoXUE1zZ011bHRpQm9zc0VudGVyUm9vbVMS",
            "EQoJdWxsUm9vbUlkGAEgASgDEhMKC3VuRXJyb3JDb2RlGGMgASgFIloKG1BN",
            "c2dNdWx0aUJvc3NFbnRlclJvb21SZWN2UxIRCgl1bGxSb29tSWQYASABKAMS",
            "KAoFY0luZm8YAiADKAsyGS5zdy5NdWx0aUJvc3NSb29tUm9sZUluZm8iLAoX",
            "UE1zZ011bHRpQm9zc0xlYXZlUm9vbUMSEQoJdWxsUm9vbUlkGAEgASgDIkEK",
            "F1BNc2dNdWx0aUJvc3NMZWF2ZVJvb21TEhEKCXVsbFJvb21JZBgBIAEoAxIT",
            "Cgt1bkVycm9yQ29kZRhjIAEoBSJDChtQTXNnTXVsdGlCb3NzTGVhdmVSb29t",
            "UmVjdlMSEQoJdWxsUm9vbUlkGAEgASgDEhEKCXVsbFJvbGVJZBgCIAEoAyIr",
            "ChZQTXNnTXVsdGlCb3NzS2lja1Jvb21DEhEKCXVsbFJvbGVJZBgBIAEoAyJA",
            "ChZQTXNnTXVsdGlCb3NzS2lja1Jvb21TEhEKCXVsbFJvbGVJZBgBIAEoAxIT",
            "Cgt1bkVycm9yQ29kZRhjIAEoBSJCChpQTXNnTXVsdGlCb3NzS2lja1Jvb21S",
            "ZWN2UxIRCgl1bGxSb29tSWQYASABKAMSEQoJdWxsUm9sZUlkGAIgASgDIi0K",
            "E1BNc2dNdWx0aUJvc3NTdGFydEMSFgoOdW5Cb3NzQmF0dGxlSWQYASABKAUi",
            "SAoRTXVsdGlCb3NzRHJvcEl0ZW0SDgoGdW5UeXBlGAEgASgFEhAKCHVuSXRl",
            "bUlkGAIgASgFEhEKCXVuSXRlbU51bRgDIAEoBSKiAQoTUE1zZ011bHRpQm9z",
            "c1N0YXJ0UxIRCgl1bGxSb29tSWQYASABKAMSFgoOdW5Cb3NzQmF0dGxlSWQY",
            "AiABKAUSEgoKdW5Ecm9wQ29pbhgDIAEoBRIRCgl1bkRyb3BFeHAYBCABKAUS",
            "JAoFY0Ryb3AYBSADKAsyFS5zdy5NdWx0aUJvc3NEcm9wSXRlbRITCgt1bkVy",
            "cm9yQ29kZRhjIAEoBSJXChZQTXNnTXVsdGlCb3NzQ29tcGxldGVDEhYKDnVu",
            "Qm9zc0JhdHRsZUlkGAEgASgFEhEKCXVuVmljdG9yeRgCIAEoBRISCgp1bkV4",
            "cFRvdGFsGAMgASgFIlgKFlBNc2dNdWx0aUJvc3NDb21wbGV0ZVMSFgoOdW5C",
            "b3NzQmF0dGxlSWQYASABKAUSEQoJdW5WaWN0b3J5GAIgASgFEhMKC3VuRXJy",
            "b3JDb2RlGGMgASgFYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMultiBossQueryC), global::Sw.PMsgMultiBossQueryC.Parser, new[]{ "UnReserved" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMultiBossQueryS), global::Sw.PMsgMultiBossQueryS.Parser, new[]{ "UnDailyComplete", "UnMaxDailyComplete" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMultiBossCreateRoomC), global::Sw.PMsgMultiBossCreateRoomC.Parser, new[]{ "UnBossBattleId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMultiBossCreateRoomS), global::Sw.PMsgMultiBossCreateRoomS.Parser, new[]{ "UnBossBattleId", "UllRoomId", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMultiBossInviteC), global::Sw.PMsgMultiBossInviteC.Parser, new[]{ "UnGlobalFlag", "UllRoleId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMultiBossInviteS), global::Sw.PMsgMultiBossInviteS.Parser, new[]{ "UnGlobalFlag", "UllRoleId", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMultiBossInviteRecvS), global::Sw.PMsgMultiBossInviteRecvS.Parser, new[]{ "UnGlobalFlag", "UllRoleId", "UnRoleType", "SzName", "UnBossBattleId", "UllRoomId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMultiBossRoomListC), global::Sw.PMsgMultiBossRoomListC.Parser, new[]{ "UnBossBattleId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.MultiBossRoomRoleInfo), global::Sw.MultiBossRoomRoleInfo.Parser, new[]{ "UllRoleId", "UnType", "Unlevel", "SzName", "UnAttack" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.MultiBossRoomInfo), global::Sw.MultiBossRoomInfo.Parser, new[]{ "UllRoomId", "UnBossBattleId", "UllOwnerId", "UnMaxRole", "CInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMultiBossRoomListS), global::Sw.PMsgMultiBossRoomListS.Parser, new[]{ "UnBossBattleId", "UnRoomCount", "CInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMultiBossRoomInfoC), global::Sw.PMsgMultiBossRoomInfoC.Parser, new[]{ "UllRoomId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMultiBossRoomInfoS), global::Sw.PMsgMultiBossRoomInfoS.Parser, new[]{ "UnRoomCount", "CInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMultiBossEnterRoomC), global::Sw.PMsgMultiBossEnterRoomC.Parser, new[]{ "UllRoomId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMultiBossEnterRoomS), global::Sw.PMsgMultiBossEnterRoomS.Parser, new[]{ "UllRoomId", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMultiBossEnterRoomRecvS), global::Sw.PMsgMultiBossEnterRoomRecvS.Parser, new[]{ "UllRoomId", "CInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMultiBossLeaveRoomC), global::Sw.PMsgMultiBossLeaveRoomC.Parser, new[]{ "UllRoomId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMultiBossLeaveRoomS), global::Sw.PMsgMultiBossLeaveRoomS.Parser, new[]{ "UllRoomId", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMultiBossLeaveRoomRecvS), global::Sw.PMsgMultiBossLeaveRoomRecvS.Parser, new[]{ "UllRoomId", "UllRoleId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMultiBossKickRoomC), global::Sw.PMsgMultiBossKickRoomC.Parser, new[]{ "UllRoleId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMultiBossKickRoomS), global::Sw.PMsgMultiBossKickRoomS.Parser, new[]{ "UllRoleId", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMultiBossKickRoomRecvS), global::Sw.PMsgMultiBossKickRoomRecvS.Parser, new[]{ "UllRoomId", "UllRoleId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMultiBossStartC), global::Sw.PMsgMultiBossStartC.Parser, new[]{ "UnBossBattleId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.MultiBossDropItem), global::Sw.MultiBossDropItem.Parser, new[]{ "UnType", "UnItemId", "UnItemNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMultiBossStartS), global::Sw.PMsgMultiBossStartS.Parser, new[]{ "UllRoomId", "UnBossBattleId", "UnDropCoin", "UnDropExp", "CDrop", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMultiBossCompleteC), global::Sw.PMsgMultiBossCompleteC.Parser, new[]{ "UnBossBattleId", "UnVictory", "UnExpTotal" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMultiBossCompleteS), global::Sw.PMsgMultiBossCompleteS.Parser, new[]{ "UnBossBattleId", "UnVictory", "UnErrorCode" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 客户端：查询多人Boss副本信息（本人）
  /// _MSG_MULTI_BOSS_QUERY_C
  /// </summary>
  public sealed partial class PMsgMultiBossQueryC : pb::IMessage<PMsgMultiBossQueryC> {
    private static readonly pb::MessageParser<PMsgMultiBossQueryC> _parser = new pb::MessageParser<PMsgMultiBossQueryC>(() => new PMsgMultiBossQueryC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMultiBossQueryC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMultiBossReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossQueryC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossQueryC(PMsgMultiBossQueryC other) : this() {
      unReserved_ = other.unReserved_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossQueryC Clone() {
      return new PMsgMultiBossQueryC(this);
    }

    /// <summary>Field number for the "unReserved" field.</summary>
    public const int UnReservedFieldNumber = 1;
    private int unReserved_;
    /// <summary>
    /// 保留字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnReserved {
      get { return unReserved_; }
      set {
        unReserved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMultiBossQueryC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMultiBossQueryC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnReserved != other.UnReserved) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnReserved != 0) hash ^= UnReserved.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnReserved != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnReserved);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnReserved != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnReserved);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMultiBossQueryC other) {
      if (other == null) {
        return;
      }
      if (other.UnReserved != 0) {
        UnReserved = other.UnReserved;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnReserved = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：查询多人Boss副本信息回复
  /// _MSG_MULTI_BOSS_QUERY_S
  /// </summary>
  public sealed partial class PMsgMultiBossQueryS : pb::IMessage<PMsgMultiBossQueryS> {
    private static readonly pb::MessageParser<PMsgMultiBossQueryS> _parser = new pb::MessageParser<PMsgMultiBossQueryS>(() => new PMsgMultiBossQueryS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMultiBossQueryS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMultiBossReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossQueryS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossQueryS(PMsgMultiBossQueryS other) : this() {
      unDailyComplete_ = other.unDailyComplete_;
      unMaxDailyComplete_ = other.unMaxDailyComplete_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossQueryS Clone() {
      return new PMsgMultiBossQueryS(this);
    }

    /// <summary>Field number for the "unDailyComplete" field.</summary>
    public const int UnDailyCompleteFieldNumber = 1;
    private int unDailyComplete_;
    /// <summary>
    /// 当日完成次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnDailyComplete {
      get { return unDailyComplete_; }
      set {
        unDailyComplete_ = value;
      }
    }

    /// <summary>Field number for the "unMaxDailyComplete" field.</summary>
    public const int UnMaxDailyCompleteFieldNumber = 2;
    private int unMaxDailyComplete_;
    /// <summary>
    /// 当日完成次数上限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnMaxDailyComplete {
      get { return unMaxDailyComplete_; }
      set {
        unMaxDailyComplete_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMultiBossQueryS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMultiBossQueryS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnDailyComplete != other.UnDailyComplete) return false;
      if (UnMaxDailyComplete != other.UnMaxDailyComplete) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnDailyComplete != 0) hash ^= UnDailyComplete.GetHashCode();
      if (UnMaxDailyComplete != 0) hash ^= UnMaxDailyComplete.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnDailyComplete != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnDailyComplete);
      }
      if (UnMaxDailyComplete != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnMaxDailyComplete);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnDailyComplete != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnDailyComplete);
      }
      if (UnMaxDailyComplete != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnMaxDailyComplete);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMultiBossQueryS other) {
      if (other == null) {
        return;
      }
      if (other.UnDailyComplete != 0) {
        UnDailyComplete = other.UnDailyComplete;
      }
      if (other.UnMaxDailyComplete != 0) {
        UnMaxDailyComplete = other.UnMaxDailyComplete;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnDailyComplete = input.ReadInt32();
            break;
          }
          case 16: {
            UnMaxDailyComplete = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：多人Boss副本开新房间
  /// _MSG_MULTI_BOSS_CREATE_ROOM_C
  /// </summary>
  public sealed partial class PMsgMultiBossCreateRoomC : pb::IMessage<PMsgMultiBossCreateRoomC> {
    private static readonly pb::MessageParser<PMsgMultiBossCreateRoomC> _parser = new pb::MessageParser<PMsgMultiBossCreateRoomC>(() => new PMsgMultiBossCreateRoomC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMultiBossCreateRoomC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMultiBossReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossCreateRoomC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossCreateRoomC(PMsgMultiBossCreateRoomC other) : this() {
      unBossBattleId_ = other.unBossBattleId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossCreateRoomC Clone() {
      return new PMsgMultiBossCreateRoomC(this);
    }

    /// <summary>Field number for the "unBossBattleId" field.</summary>
    public const int UnBossBattleIdFieldNumber = 1;
    private int unBossBattleId_;
    /// <summary>
    /// Boss副本id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnBossBattleId {
      get { return unBossBattleId_; }
      set {
        unBossBattleId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMultiBossCreateRoomC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMultiBossCreateRoomC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnBossBattleId != other.UnBossBattleId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnBossBattleId != 0) hash ^= UnBossBattleId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnBossBattleId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnBossBattleId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnBossBattleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnBossBattleId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMultiBossCreateRoomC other) {
      if (other == null) {
        return;
      }
      if (other.UnBossBattleId != 0) {
        UnBossBattleId = other.UnBossBattleId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnBossBattleId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：多人Boss副本开新房间回复
  /// _MSG_MULTI_BOSS_CREATE_ROOM_S
  /// </summary>
  public sealed partial class PMsgMultiBossCreateRoomS : pb::IMessage<PMsgMultiBossCreateRoomS> {
    private static readonly pb::MessageParser<PMsgMultiBossCreateRoomS> _parser = new pb::MessageParser<PMsgMultiBossCreateRoomS>(() => new PMsgMultiBossCreateRoomS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMultiBossCreateRoomS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMultiBossReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossCreateRoomS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossCreateRoomS(PMsgMultiBossCreateRoomS other) : this() {
      unBossBattleId_ = other.unBossBattleId_;
      ullRoomId_ = other.ullRoomId_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossCreateRoomS Clone() {
      return new PMsgMultiBossCreateRoomS(this);
    }

    /// <summary>Field number for the "unBossBattleId" field.</summary>
    public const int UnBossBattleIdFieldNumber = 1;
    private int unBossBattleId_;
    /// <summary>
    /// Boss副本id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnBossBattleId {
      get { return unBossBattleId_; }
      set {
        unBossBattleId_ = value;
      }
    }

    /// <summary>Field number for the "ullRoomId" field.</summary>
    public const int UllRoomIdFieldNumber = 2;
    private long ullRoomId_;
    /// <summary>
    /// 房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllRoomId {
      get { return ullRoomId_; }
      set {
        ullRoomId_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMultiBossCreateRoomS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMultiBossCreateRoomS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnBossBattleId != other.UnBossBattleId) return false;
      if (UllRoomId != other.UllRoomId) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnBossBattleId != 0) hash ^= UnBossBattleId.GetHashCode();
      if (UllRoomId != 0L) hash ^= UllRoomId.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnBossBattleId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnBossBattleId);
      }
      if (UllRoomId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UllRoomId);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnBossBattleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnBossBattleId);
      }
      if (UllRoomId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllRoomId);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMultiBossCreateRoomS other) {
      if (other == null) {
        return;
      }
      if (other.UnBossBattleId != 0) {
        UnBossBattleId = other.UnBossBattleId;
      }
      if (other.UllRoomId != 0L) {
        UllRoomId = other.UllRoomId;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnBossBattleId = input.ReadInt32();
            break;
          }
          case 16: {
            UllRoomId = input.ReadInt64();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：多人Boss副本组队邀请
  /// _MSG_MULTI_BOSS_INVITE_C
  /// </summary>
  public sealed partial class PMsgMultiBossInviteC : pb::IMessage<PMsgMultiBossInviteC> {
    private static readonly pb::MessageParser<PMsgMultiBossInviteC> _parser = new pb::MessageParser<PMsgMultiBossInviteC>(() => new PMsgMultiBossInviteC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMultiBossInviteC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMultiBossReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossInviteC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossInviteC(PMsgMultiBossInviteC other) : this() {
      unGlobalFlag_ = other.unGlobalFlag_;
      ullRoleId_ = other.ullRoleId_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossInviteC Clone() {
      return new PMsgMultiBossInviteC(this);
    }

    /// <summary>Field number for the "unGlobalFlag" field.</summary>
    public const int UnGlobalFlagFieldNumber = 1;
    private int unGlobalFlag_;
    /// <summary>
    /// 全服邀请标志位：0-邀请指定角色，1-全服邀请
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnGlobalFlag {
      get { return unGlobalFlag_; }
      set {
        unGlobalFlag_ = value;
      }
    }

    /// <summary>Field number for the "ullRoleId" field.</summary>
    public const int UllRoleIdFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_ullRoleId_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> ullRoleId_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 被邀请的角色列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> UllRoleId {
      get { return ullRoleId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMultiBossInviteC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMultiBossInviteC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnGlobalFlag != other.UnGlobalFlag) return false;
      if(!ullRoleId_.Equals(other.ullRoleId_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnGlobalFlag != 0) hash ^= UnGlobalFlag.GetHashCode();
      hash ^= ullRoleId_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnGlobalFlag != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnGlobalFlag);
      }
      ullRoleId_.WriteTo(output, _repeated_ullRoleId_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnGlobalFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnGlobalFlag);
      }
      size += ullRoleId_.CalculateSize(_repeated_ullRoleId_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMultiBossInviteC other) {
      if (other == null) {
        return;
      }
      if (other.UnGlobalFlag != 0) {
        UnGlobalFlag = other.UnGlobalFlag;
      }
      ullRoleId_.Add(other.ullRoleId_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnGlobalFlag = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            ullRoleId_.AddEntriesFrom(input, _repeated_ullRoleId_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：多人Boss副本组队邀请回复
  /// _MSG_MULTI_BOSS_INVITE_S
  /// </summary>
  public sealed partial class PMsgMultiBossInviteS : pb::IMessage<PMsgMultiBossInviteS> {
    private static readonly pb::MessageParser<PMsgMultiBossInviteS> _parser = new pb::MessageParser<PMsgMultiBossInviteS>(() => new PMsgMultiBossInviteS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMultiBossInviteS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMultiBossReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossInviteS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossInviteS(PMsgMultiBossInviteS other) : this() {
      unGlobalFlag_ = other.unGlobalFlag_;
      ullRoleId_ = other.ullRoleId_.Clone();
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossInviteS Clone() {
      return new PMsgMultiBossInviteS(this);
    }

    /// <summary>Field number for the "unGlobalFlag" field.</summary>
    public const int UnGlobalFlagFieldNumber = 1;
    private int unGlobalFlag_;
    /// <summary>
    /// 全服邀请标志位：0-邀请指定角色，1-全服邀请
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnGlobalFlag {
      get { return unGlobalFlag_; }
      set {
        unGlobalFlag_ = value;
      }
    }

    /// <summary>Field number for the "ullRoleId" field.</summary>
    public const int UllRoleIdFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_ullRoleId_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> ullRoleId_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 被邀请的角色列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> UllRoleId {
      get { return ullRoleId_; }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMultiBossInviteS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMultiBossInviteS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnGlobalFlag != other.UnGlobalFlag) return false;
      if(!ullRoleId_.Equals(other.ullRoleId_)) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnGlobalFlag != 0) hash ^= UnGlobalFlag.GetHashCode();
      hash ^= ullRoleId_.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnGlobalFlag != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnGlobalFlag);
      }
      ullRoleId_.WriteTo(output, _repeated_ullRoleId_codec);
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnGlobalFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnGlobalFlag);
      }
      size += ullRoleId_.CalculateSize(_repeated_ullRoleId_codec);
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMultiBossInviteS other) {
      if (other == null) {
        return;
      }
      if (other.UnGlobalFlag != 0) {
        UnGlobalFlag = other.UnGlobalFlag;
      }
      ullRoleId_.Add(other.ullRoleId_);
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnGlobalFlag = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            ullRoleId_.AddEntriesFrom(input, _repeated_ullRoleId_codec);
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：收到多人Boss副本组队邀请
  /// _MSG_MULTI_BOSS_INVITE_RECV_S
  /// </summary>
  public sealed partial class PMsgMultiBossInviteRecvS : pb::IMessage<PMsgMultiBossInviteRecvS> {
    private static readonly pb::MessageParser<PMsgMultiBossInviteRecvS> _parser = new pb::MessageParser<PMsgMultiBossInviteRecvS>(() => new PMsgMultiBossInviteRecvS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMultiBossInviteRecvS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMultiBossReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossInviteRecvS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossInviteRecvS(PMsgMultiBossInviteRecvS other) : this() {
      unGlobalFlag_ = other.unGlobalFlag_;
      ullRoleId_ = other.ullRoleId_;
      unRoleType_ = other.unRoleType_;
      szName_ = other.szName_;
      unBossBattleId_ = other.unBossBattleId_;
      ullRoomId_ = other.ullRoomId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossInviteRecvS Clone() {
      return new PMsgMultiBossInviteRecvS(this);
    }

    /// <summary>Field number for the "unGlobalFlag" field.</summary>
    public const int UnGlobalFlagFieldNumber = 1;
    private int unGlobalFlag_;
    /// <summary>
    /// 全服邀请标志位：0-邀请指定角色，1-全服邀请
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnGlobalFlag {
      get { return unGlobalFlag_; }
      set {
        unGlobalFlag_ = value;
      }
    }

    /// <summary>Field number for the "ullRoleId" field.</summary>
    public const int UllRoleIdFieldNumber = 2;
    private long ullRoleId_;
    /// <summary>
    /// 邀请人角色id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllRoleId {
      get { return ullRoleId_; }
      set {
        ullRoleId_ = value;
      }
    }

    /// <summary>Field number for the "unRoleType" field.</summary>
    public const int UnRoleTypeFieldNumber = 3;
    private int unRoleType_;
    /// <summary>
    /// 邀请人角色类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnRoleType {
      get { return unRoleType_; }
      set {
        unRoleType_ = value;
      }
    }

    /// <summary>Field number for the "szName" field.</summary>
    public const int SzNameFieldNumber = 4;
    private string szName_ = "";
    /// <summary>
    /// 邀请人名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzName {
      get { return szName_; }
      set {
        szName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unBossBattleId" field.</summary>
    public const int UnBossBattleIdFieldNumber = 5;
    private int unBossBattleId_;
    /// <summary>
    /// Boss副本id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnBossBattleId {
      get { return unBossBattleId_; }
      set {
        unBossBattleId_ = value;
      }
    }

    /// <summary>Field number for the "ullRoomId" field.</summary>
    public const int UllRoomIdFieldNumber = 6;
    private long ullRoomId_;
    /// <summary>
    /// 房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllRoomId {
      get { return ullRoomId_; }
      set {
        ullRoomId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMultiBossInviteRecvS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMultiBossInviteRecvS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnGlobalFlag != other.UnGlobalFlag) return false;
      if (UllRoleId != other.UllRoleId) return false;
      if (UnRoleType != other.UnRoleType) return false;
      if (SzName != other.SzName) return false;
      if (UnBossBattleId != other.UnBossBattleId) return false;
      if (UllRoomId != other.UllRoomId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnGlobalFlag != 0) hash ^= UnGlobalFlag.GetHashCode();
      if (UllRoleId != 0L) hash ^= UllRoleId.GetHashCode();
      if (UnRoleType != 0) hash ^= UnRoleType.GetHashCode();
      if (SzName.Length != 0) hash ^= SzName.GetHashCode();
      if (UnBossBattleId != 0) hash ^= UnBossBattleId.GetHashCode();
      if (UllRoomId != 0L) hash ^= UllRoomId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnGlobalFlag != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnGlobalFlag);
      }
      if (UllRoleId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UllRoleId);
      }
      if (UnRoleType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnRoleType);
      }
      if (SzName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SzName);
      }
      if (UnBossBattleId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(UnBossBattleId);
      }
      if (UllRoomId != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(UllRoomId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnGlobalFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnGlobalFlag);
      }
      if (UllRoleId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllRoleId);
      }
      if (UnRoleType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnRoleType);
      }
      if (SzName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzName);
      }
      if (UnBossBattleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnBossBattleId);
      }
      if (UllRoomId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllRoomId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMultiBossInviteRecvS other) {
      if (other == null) {
        return;
      }
      if (other.UnGlobalFlag != 0) {
        UnGlobalFlag = other.UnGlobalFlag;
      }
      if (other.UllRoleId != 0L) {
        UllRoleId = other.UllRoleId;
      }
      if (other.UnRoleType != 0) {
        UnRoleType = other.UnRoleType;
      }
      if (other.SzName.Length != 0) {
        SzName = other.SzName;
      }
      if (other.UnBossBattleId != 0) {
        UnBossBattleId = other.UnBossBattleId;
      }
      if (other.UllRoomId != 0L) {
        UllRoomId = other.UllRoomId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnGlobalFlag = input.ReadInt32();
            break;
          }
          case 16: {
            UllRoleId = input.ReadInt64();
            break;
          }
          case 24: {
            UnRoleType = input.ReadInt32();
            break;
          }
          case 34: {
            SzName = input.ReadString();
            break;
          }
          case 40: {
            UnBossBattleId = input.ReadInt32();
            break;
          }
          case 48: {
            UllRoomId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：查询多人Boss房间列表
  /// _MSG_MULTI_BOSS_ROOM_LIST_C
  /// </summary>
  public sealed partial class PMsgMultiBossRoomListC : pb::IMessage<PMsgMultiBossRoomListC> {
    private static readonly pb::MessageParser<PMsgMultiBossRoomListC> _parser = new pb::MessageParser<PMsgMultiBossRoomListC>(() => new PMsgMultiBossRoomListC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMultiBossRoomListC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMultiBossReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossRoomListC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossRoomListC(PMsgMultiBossRoomListC other) : this() {
      unBossBattleId_ = other.unBossBattleId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossRoomListC Clone() {
      return new PMsgMultiBossRoomListC(this);
    }

    /// <summary>Field number for the "unBossBattleId" field.</summary>
    public const int UnBossBattleIdFieldNumber = 1;
    private int unBossBattleId_;
    /// <summary>
    /// Boss副本id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnBossBattleId {
      get { return unBossBattleId_; }
      set {
        unBossBattleId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMultiBossRoomListC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMultiBossRoomListC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnBossBattleId != other.UnBossBattleId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnBossBattleId != 0) hash ^= UnBossBattleId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnBossBattleId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnBossBattleId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnBossBattleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnBossBattleId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMultiBossRoomListC other) {
      if (other == null) {
        return;
      }
      if (other.UnBossBattleId != 0) {
        UnBossBattleId = other.UnBossBattleId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnBossBattleId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 多人Boss副本房间角色信息
  /// </summary>
  public sealed partial class MultiBossRoomRoleInfo : pb::IMessage<MultiBossRoomRoleInfo> {
    private static readonly pb::MessageParser<MultiBossRoomRoleInfo> _parser = new pb::MessageParser<MultiBossRoomRoleInfo>(() => new MultiBossRoomRoleInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiBossRoomRoleInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMultiBossReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiBossRoomRoleInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiBossRoomRoleInfo(MultiBossRoomRoleInfo other) : this() {
      ullRoleId_ = other.ullRoleId_;
      unType_ = other.unType_;
      unlevel_ = other.unlevel_;
      szName_ = other.szName_;
      unAttack_ = other.unAttack_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiBossRoomRoleInfo Clone() {
      return new MultiBossRoomRoleInfo(this);
    }

    /// <summary>Field number for the "ullRoleId" field.</summary>
    public const int UllRoleIdFieldNumber = 1;
    private long ullRoleId_;
    /// <summary>
    /// 角色id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllRoleId {
      get { return ullRoleId_; }
      set {
        ullRoleId_ = value;
      }
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 2;
    private int unType_;
    /// <summary>
    /// 角色类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    /// <summary>Field number for the "unlevel" field.</summary>
    public const int UnlevelFieldNumber = 3;
    private int unlevel_;
    /// <summary>
    /// 角色等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Unlevel {
      get { return unlevel_; }
      set {
        unlevel_ = value;
      }
    }

    /// <summary>Field number for the "szName" field.</summary>
    public const int SzNameFieldNumber = 4;
    private string szName_ = "";
    /// <summary>
    /// 角色名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzName {
      get { return szName_; }
      set {
        szName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unAttack" field.</summary>
    public const int UnAttackFieldNumber = 5;
    private int unAttack_;
    /// <summary>
    /// 角色战斗力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnAttack {
      get { return unAttack_; }
      set {
        unAttack_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiBossRoomRoleInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiBossRoomRoleInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoleId != other.UllRoleId) return false;
      if (UnType != other.UnType) return false;
      if (Unlevel != other.Unlevel) return false;
      if (SzName != other.SzName) return false;
      if (UnAttack != other.UnAttack) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoleId != 0L) hash ^= UllRoleId.GetHashCode();
      if (UnType != 0) hash ^= UnType.GetHashCode();
      if (Unlevel != 0) hash ^= Unlevel.GetHashCode();
      if (SzName.Length != 0) hash ^= SzName.GetHashCode();
      if (UnAttack != 0) hash ^= UnAttack.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoleId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UllRoleId);
      }
      if (UnType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnType);
      }
      if (Unlevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Unlevel);
      }
      if (SzName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SzName);
      }
      if (UnAttack != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(UnAttack);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoleId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllRoleId);
      }
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      if (Unlevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Unlevel);
      }
      if (SzName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzName);
      }
      if (UnAttack != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnAttack);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiBossRoomRoleInfo other) {
      if (other == null) {
        return;
      }
      if (other.UllRoleId != 0L) {
        UllRoleId = other.UllRoleId;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
      if (other.Unlevel != 0) {
        Unlevel = other.Unlevel;
      }
      if (other.SzName.Length != 0) {
        SzName = other.SzName;
      }
      if (other.UnAttack != 0) {
        UnAttack = other.UnAttack;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoleId = input.ReadInt64();
            break;
          }
          case 16: {
            UnType = input.ReadInt32();
            break;
          }
          case 24: {
            Unlevel = input.ReadInt32();
            break;
          }
          case 34: {
            SzName = input.ReadString();
            break;
          }
          case 40: {
            UnAttack = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 多人Boss副本房间信息
  /// </summary>
  public sealed partial class MultiBossRoomInfo : pb::IMessage<MultiBossRoomInfo> {
    private static readonly pb::MessageParser<MultiBossRoomInfo> _parser = new pb::MessageParser<MultiBossRoomInfo>(() => new MultiBossRoomInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiBossRoomInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMultiBossReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiBossRoomInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiBossRoomInfo(MultiBossRoomInfo other) : this() {
      ullRoomId_ = other.ullRoomId_;
      unBossBattleId_ = other.unBossBattleId_;
      ullOwnerId_ = other.ullOwnerId_;
      unMaxRole_ = other.unMaxRole_;
      cInfo_ = other.cInfo_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiBossRoomInfo Clone() {
      return new MultiBossRoomInfo(this);
    }

    /// <summary>Field number for the "ullRoomId" field.</summary>
    public const int UllRoomIdFieldNumber = 1;
    private long ullRoomId_;
    /// <summary>
    /// 房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllRoomId {
      get { return ullRoomId_; }
      set {
        ullRoomId_ = value;
      }
    }

    /// <summary>Field number for the "unBossBattleId" field.</summary>
    public const int UnBossBattleIdFieldNumber = 2;
    private int unBossBattleId_;
    /// <summary>
    /// Boss副本id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnBossBattleId {
      get { return unBossBattleId_; }
      set {
        unBossBattleId_ = value;
      }
    }

    /// <summary>Field number for the "ullOwnerId" field.</summary>
    public const int UllOwnerIdFieldNumber = 3;
    private long ullOwnerId_;
    /// <summary>
    /// 房主角色id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllOwnerId {
      get { return ullOwnerId_; }
      set {
        ullOwnerId_ = value;
      }
    }

    /// <summary>Field number for the "unMaxRole" field.</summary>
    public const int UnMaxRoleFieldNumber = 4;
    private int unMaxRole_;
    /// <summary>
    /// 房间人数上限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnMaxRole {
      get { return unMaxRole_; }
      set {
        unMaxRole_ = value;
      }
    }

    /// <summary>Field number for the "cInfo" field.</summary>
    public const int CInfoFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Sw.MultiBossRoomRoleInfo> _repeated_cInfo_codec
        = pb::FieldCodec.ForMessage(42, global::Sw.MultiBossRoomRoleInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.MultiBossRoomRoleInfo> cInfo_ = new pbc::RepeatedField<global::Sw.MultiBossRoomRoleInfo>();
    /// <summary>
    /// 多人Boss副本房间角色信息列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.MultiBossRoomRoleInfo> CInfo {
      get { return cInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiBossRoomInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiBossRoomInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoomId != other.UllRoomId) return false;
      if (UnBossBattleId != other.UnBossBattleId) return false;
      if (UllOwnerId != other.UllOwnerId) return false;
      if (UnMaxRole != other.UnMaxRole) return false;
      if(!cInfo_.Equals(other.cInfo_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoomId != 0L) hash ^= UllRoomId.GetHashCode();
      if (UnBossBattleId != 0) hash ^= UnBossBattleId.GetHashCode();
      if (UllOwnerId != 0L) hash ^= UllOwnerId.GetHashCode();
      if (UnMaxRole != 0) hash ^= UnMaxRole.GetHashCode();
      hash ^= cInfo_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoomId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UllRoomId);
      }
      if (UnBossBattleId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnBossBattleId);
      }
      if (UllOwnerId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(UllOwnerId);
      }
      if (UnMaxRole != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UnMaxRole);
      }
      cInfo_.WriteTo(output, _repeated_cInfo_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoomId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllRoomId);
      }
      if (UnBossBattleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnBossBattleId);
      }
      if (UllOwnerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllOwnerId);
      }
      if (UnMaxRole != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnMaxRole);
      }
      size += cInfo_.CalculateSize(_repeated_cInfo_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiBossRoomInfo other) {
      if (other == null) {
        return;
      }
      if (other.UllRoomId != 0L) {
        UllRoomId = other.UllRoomId;
      }
      if (other.UnBossBattleId != 0) {
        UnBossBattleId = other.UnBossBattleId;
      }
      if (other.UllOwnerId != 0L) {
        UllOwnerId = other.UllOwnerId;
      }
      if (other.UnMaxRole != 0) {
        UnMaxRole = other.UnMaxRole;
      }
      cInfo_.Add(other.cInfo_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoomId = input.ReadInt64();
            break;
          }
          case 16: {
            UnBossBattleId = input.ReadInt32();
            break;
          }
          case 24: {
            UllOwnerId = input.ReadInt64();
            break;
          }
          case 32: {
            UnMaxRole = input.ReadInt32();
            break;
          }
          case 42: {
            cInfo_.AddEntriesFrom(input, _repeated_cInfo_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：查询多人Boss房间列表回复
  /// _MSG_MULTI_BOSS_ROOM_LIST_S
  /// </summary>
  public sealed partial class PMsgMultiBossRoomListS : pb::IMessage<PMsgMultiBossRoomListS> {
    private static readonly pb::MessageParser<PMsgMultiBossRoomListS> _parser = new pb::MessageParser<PMsgMultiBossRoomListS>(() => new PMsgMultiBossRoomListS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMultiBossRoomListS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMultiBossReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossRoomListS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossRoomListS(PMsgMultiBossRoomListS other) : this() {
      unBossBattleId_ = other.unBossBattleId_;
      unRoomCount_ = other.unRoomCount_;
      cInfo_ = other.cInfo_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossRoomListS Clone() {
      return new PMsgMultiBossRoomListS(this);
    }

    /// <summary>Field number for the "unBossBattleId" field.</summary>
    public const int UnBossBattleIdFieldNumber = 1;
    private int unBossBattleId_;
    /// <summary>
    /// Boss副本id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnBossBattleId {
      get { return unBossBattleId_; }
      set {
        unBossBattleId_ = value;
      }
    }

    /// <summary>Field number for the "unRoomCount" field.</summary>
    public const int UnRoomCountFieldNumber = 2;
    private int unRoomCount_;
    /// <summary>
    /// 房间数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnRoomCount {
      get { return unRoomCount_; }
      set {
        unRoomCount_ = value;
      }
    }

    /// <summary>Field number for the "cInfo" field.</summary>
    public const int CInfoFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Sw.MultiBossRoomInfo> _repeated_cInfo_codec
        = pb::FieldCodec.ForMessage(26, global::Sw.MultiBossRoomInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.MultiBossRoomInfo> cInfo_ = new pbc::RepeatedField<global::Sw.MultiBossRoomInfo>();
    /// <summary>
    /// 多人Boss副本房间信息列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.MultiBossRoomInfo> CInfo {
      get { return cInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMultiBossRoomListS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMultiBossRoomListS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnBossBattleId != other.UnBossBattleId) return false;
      if (UnRoomCount != other.UnRoomCount) return false;
      if(!cInfo_.Equals(other.cInfo_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnBossBattleId != 0) hash ^= UnBossBattleId.GetHashCode();
      if (UnRoomCount != 0) hash ^= UnRoomCount.GetHashCode();
      hash ^= cInfo_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnBossBattleId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnBossBattleId);
      }
      if (UnRoomCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnRoomCount);
      }
      cInfo_.WriteTo(output, _repeated_cInfo_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnBossBattleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnBossBattleId);
      }
      if (UnRoomCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnRoomCount);
      }
      size += cInfo_.CalculateSize(_repeated_cInfo_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMultiBossRoomListS other) {
      if (other == null) {
        return;
      }
      if (other.UnBossBattleId != 0) {
        UnBossBattleId = other.UnBossBattleId;
      }
      if (other.UnRoomCount != 0) {
        UnRoomCount = other.UnRoomCount;
      }
      cInfo_.Add(other.cInfo_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnBossBattleId = input.ReadInt32();
            break;
          }
          case 16: {
            UnRoomCount = input.ReadInt32();
            break;
          }
          case 26: {
            cInfo_.AddEntriesFrom(input, _repeated_cInfo_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：多人Boss副本房间信息
  /// _MSG_MULTI_BOSS_ROOM_INFO_C
  /// </summary>
  public sealed partial class PMsgMultiBossRoomInfoC : pb::IMessage<PMsgMultiBossRoomInfoC> {
    private static readonly pb::MessageParser<PMsgMultiBossRoomInfoC> _parser = new pb::MessageParser<PMsgMultiBossRoomInfoC>(() => new PMsgMultiBossRoomInfoC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMultiBossRoomInfoC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMultiBossReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossRoomInfoC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossRoomInfoC(PMsgMultiBossRoomInfoC other) : this() {
      ullRoomId_ = other.ullRoomId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossRoomInfoC Clone() {
      return new PMsgMultiBossRoomInfoC(this);
    }

    /// <summary>Field number for the "ullRoomId" field.</summary>
    public const int UllRoomIdFieldNumber = 1;
    private long ullRoomId_;
    /// <summary>
    /// 房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllRoomId {
      get { return ullRoomId_; }
      set {
        ullRoomId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMultiBossRoomInfoC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMultiBossRoomInfoC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoomId != other.UllRoomId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoomId != 0L) hash ^= UllRoomId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoomId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UllRoomId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoomId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllRoomId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMultiBossRoomInfoC other) {
      if (other == null) {
        return;
      }
      if (other.UllRoomId != 0L) {
        UllRoomId = other.UllRoomId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoomId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：多人Boss副本房间信息回复
  /// _MSG_MULTI_BOSS_ROOM_INFO_S
  /// </summary>
  public sealed partial class PMsgMultiBossRoomInfoS : pb::IMessage<PMsgMultiBossRoomInfoS> {
    private static readonly pb::MessageParser<PMsgMultiBossRoomInfoS> _parser = new pb::MessageParser<PMsgMultiBossRoomInfoS>(() => new PMsgMultiBossRoomInfoS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMultiBossRoomInfoS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMultiBossReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossRoomInfoS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossRoomInfoS(PMsgMultiBossRoomInfoS other) : this() {
      unRoomCount_ = other.unRoomCount_;
      cInfo_ = other.cInfo_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossRoomInfoS Clone() {
      return new PMsgMultiBossRoomInfoS(this);
    }

    /// <summary>Field number for the "unRoomCount" field.</summary>
    public const int UnRoomCountFieldNumber = 1;
    private int unRoomCount_;
    /// <summary>
    /// 房间数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnRoomCount {
      get { return unRoomCount_; }
      set {
        unRoomCount_ = value;
      }
    }

    /// <summary>Field number for the "cInfo" field.</summary>
    public const int CInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Sw.MultiBossRoomInfo> _repeated_cInfo_codec
        = pb::FieldCodec.ForMessage(18, global::Sw.MultiBossRoomInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.MultiBossRoomInfo> cInfo_ = new pbc::RepeatedField<global::Sw.MultiBossRoomInfo>();
    /// <summary>
    /// 多人Boss副本房间信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.MultiBossRoomInfo> CInfo {
      get { return cInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMultiBossRoomInfoS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMultiBossRoomInfoS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnRoomCount != other.UnRoomCount) return false;
      if(!cInfo_.Equals(other.cInfo_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnRoomCount != 0) hash ^= UnRoomCount.GetHashCode();
      hash ^= cInfo_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnRoomCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnRoomCount);
      }
      cInfo_.WriteTo(output, _repeated_cInfo_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnRoomCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnRoomCount);
      }
      size += cInfo_.CalculateSize(_repeated_cInfo_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMultiBossRoomInfoS other) {
      if (other == null) {
        return;
      }
      if (other.UnRoomCount != 0) {
        UnRoomCount = other.UnRoomCount;
      }
      cInfo_.Add(other.cInfo_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnRoomCount = input.ReadInt32();
            break;
          }
          case 18: {
            cInfo_.AddEntriesFrom(input, _repeated_cInfo_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：多人Boss副本进入房间
  /// _MSG_MULTI_BOSS_ENTER_ROOM_C
  /// </summary>
  public sealed partial class PMsgMultiBossEnterRoomC : pb::IMessage<PMsgMultiBossEnterRoomC> {
    private static readonly pb::MessageParser<PMsgMultiBossEnterRoomC> _parser = new pb::MessageParser<PMsgMultiBossEnterRoomC>(() => new PMsgMultiBossEnterRoomC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMultiBossEnterRoomC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMultiBossReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossEnterRoomC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossEnterRoomC(PMsgMultiBossEnterRoomC other) : this() {
      ullRoomId_ = other.ullRoomId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossEnterRoomC Clone() {
      return new PMsgMultiBossEnterRoomC(this);
    }

    /// <summary>Field number for the "ullRoomId" field.</summary>
    public const int UllRoomIdFieldNumber = 1;
    private long ullRoomId_;
    /// <summary>
    /// 房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllRoomId {
      get { return ullRoomId_; }
      set {
        ullRoomId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMultiBossEnterRoomC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMultiBossEnterRoomC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoomId != other.UllRoomId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoomId != 0L) hash ^= UllRoomId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoomId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UllRoomId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoomId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllRoomId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMultiBossEnterRoomC other) {
      if (other == null) {
        return;
      }
      if (other.UllRoomId != 0L) {
        UllRoomId = other.UllRoomId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoomId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：多人Boss副本进入房间回复
  /// _MSG_MULTI_BOSS_ENTER_ROOM_S
  /// </summary>
  public sealed partial class PMsgMultiBossEnterRoomS : pb::IMessage<PMsgMultiBossEnterRoomS> {
    private static readonly pb::MessageParser<PMsgMultiBossEnterRoomS> _parser = new pb::MessageParser<PMsgMultiBossEnterRoomS>(() => new PMsgMultiBossEnterRoomS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMultiBossEnterRoomS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMultiBossReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossEnterRoomS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossEnterRoomS(PMsgMultiBossEnterRoomS other) : this() {
      ullRoomId_ = other.ullRoomId_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossEnterRoomS Clone() {
      return new PMsgMultiBossEnterRoomS(this);
    }

    /// <summary>Field number for the "ullRoomId" field.</summary>
    public const int UllRoomIdFieldNumber = 1;
    private long ullRoomId_;
    /// <summary>
    /// 房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllRoomId {
      get { return ullRoomId_; }
      set {
        ullRoomId_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMultiBossEnterRoomS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMultiBossEnterRoomS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoomId != other.UllRoomId) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoomId != 0L) hash ^= UllRoomId.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoomId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UllRoomId);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoomId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllRoomId);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMultiBossEnterRoomS other) {
      if (other == null) {
        return;
      }
      if (other.UllRoomId != 0L) {
        UllRoomId = other.UllRoomId;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoomId = input.ReadInt64();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：多人Boss副本进入房间广播
  /// _MSG_MULTI_BOSS_ENTER_ROOM_RECV_S
  /// </summary>
  public sealed partial class PMsgMultiBossEnterRoomRecvS : pb::IMessage<PMsgMultiBossEnterRoomRecvS> {
    private static readonly pb::MessageParser<PMsgMultiBossEnterRoomRecvS> _parser = new pb::MessageParser<PMsgMultiBossEnterRoomRecvS>(() => new PMsgMultiBossEnterRoomRecvS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMultiBossEnterRoomRecvS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMultiBossReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossEnterRoomRecvS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossEnterRoomRecvS(PMsgMultiBossEnterRoomRecvS other) : this() {
      ullRoomId_ = other.ullRoomId_;
      cInfo_ = other.cInfo_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossEnterRoomRecvS Clone() {
      return new PMsgMultiBossEnterRoomRecvS(this);
    }

    /// <summary>Field number for the "ullRoomId" field.</summary>
    public const int UllRoomIdFieldNumber = 1;
    private long ullRoomId_;
    /// <summary>
    /// 房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllRoomId {
      get { return ullRoomId_; }
      set {
        ullRoomId_ = value;
      }
    }

    /// <summary>Field number for the "cInfo" field.</summary>
    public const int CInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Sw.MultiBossRoomRoleInfo> _repeated_cInfo_codec
        = pb::FieldCodec.ForMessage(18, global::Sw.MultiBossRoomRoleInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.MultiBossRoomRoleInfo> cInfo_ = new pbc::RepeatedField<global::Sw.MultiBossRoomRoleInfo>();
    /// <summary>
    /// 进入房间的新人角色信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.MultiBossRoomRoleInfo> CInfo {
      get { return cInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMultiBossEnterRoomRecvS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMultiBossEnterRoomRecvS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoomId != other.UllRoomId) return false;
      if(!cInfo_.Equals(other.cInfo_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoomId != 0L) hash ^= UllRoomId.GetHashCode();
      hash ^= cInfo_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoomId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UllRoomId);
      }
      cInfo_.WriteTo(output, _repeated_cInfo_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoomId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllRoomId);
      }
      size += cInfo_.CalculateSize(_repeated_cInfo_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMultiBossEnterRoomRecvS other) {
      if (other == null) {
        return;
      }
      if (other.UllRoomId != 0L) {
        UllRoomId = other.UllRoomId;
      }
      cInfo_.Add(other.cInfo_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoomId = input.ReadInt64();
            break;
          }
          case 18: {
            cInfo_.AddEntriesFrom(input, _repeated_cInfo_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：多人Boss副本离开房间
  /// _MSG_MULTI_BOSS_LEAVE_ROOM_C
  /// </summary>
  public sealed partial class PMsgMultiBossLeaveRoomC : pb::IMessage<PMsgMultiBossLeaveRoomC> {
    private static readonly pb::MessageParser<PMsgMultiBossLeaveRoomC> _parser = new pb::MessageParser<PMsgMultiBossLeaveRoomC>(() => new PMsgMultiBossLeaveRoomC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMultiBossLeaveRoomC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMultiBossReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossLeaveRoomC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossLeaveRoomC(PMsgMultiBossLeaveRoomC other) : this() {
      ullRoomId_ = other.ullRoomId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossLeaveRoomC Clone() {
      return new PMsgMultiBossLeaveRoomC(this);
    }

    /// <summary>Field number for the "ullRoomId" field.</summary>
    public const int UllRoomIdFieldNumber = 1;
    private long ullRoomId_;
    /// <summary>
    /// 房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllRoomId {
      get { return ullRoomId_; }
      set {
        ullRoomId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMultiBossLeaveRoomC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMultiBossLeaveRoomC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoomId != other.UllRoomId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoomId != 0L) hash ^= UllRoomId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoomId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UllRoomId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoomId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllRoomId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMultiBossLeaveRoomC other) {
      if (other == null) {
        return;
      }
      if (other.UllRoomId != 0L) {
        UllRoomId = other.UllRoomId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoomId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：多人Boss副本离开房间回复
  /// _MSG_MULTI_BOSS_LEAVE_ROOM_S
  /// </summary>
  public sealed partial class PMsgMultiBossLeaveRoomS : pb::IMessage<PMsgMultiBossLeaveRoomS> {
    private static readonly pb::MessageParser<PMsgMultiBossLeaveRoomS> _parser = new pb::MessageParser<PMsgMultiBossLeaveRoomS>(() => new PMsgMultiBossLeaveRoomS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMultiBossLeaveRoomS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMultiBossReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossLeaveRoomS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossLeaveRoomS(PMsgMultiBossLeaveRoomS other) : this() {
      ullRoomId_ = other.ullRoomId_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossLeaveRoomS Clone() {
      return new PMsgMultiBossLeaveRoomS(this);
    }

    /// <summary>Field number for the "ullRoomId" field.</summary>
    public const int UllRoomIdFieldNumber = 1;
    private long ullRoomId_;
    /// <summary>
    /// 房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllRoomId {
      get { return ullRoomId_; }
      set {
        ullRoomId_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMultiBossLeaveRoomS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMultiBossLeaveRoomS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoomId != other.UllRoomId) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoomId != 0L) hash ^= UllRoomId.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoomId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UllRoomId);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoomId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllRoomId);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMultiBossLeaveRoomS other) {
      if (other == null) {
        return;
      }
      if (other.UllRoomId != 0L) {
        UllRoomId = other.UllRoomId;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoomId = input.ReadInt64();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：多人Boss副本离开房间广播
  /// _MSG_MULTI_BOSS_LEAVE_ROOM_RECV_S
  /// </summary>
  public sealed partial class PMsgMultiBossLeaveRoomRecvS : pb::IMessage<PMsgMultiBossLeaveRoomRecvS> {
    private static readonly pb::MessageParser<PMsgMultiBossLeaveRoomRecvS> _parser = new pb::MessageParser<PMsgMultiBossLeaveRoomRecvS>(() => new PMsgMultiBossLeaveRoomRecvS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMultiBossLeaveRoomRecvS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMultiBossReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossLeaveRoomRecvS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossLeaveRoomRecvS(PMsgMultiBossLeaveRoomRecvS other) : this() {
      ullRoomId_ = other.ullRoomId_;
      ullRoleId_ = other.ullRoleId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossLeaveRoomRecvS Clone() {
      return new PMsgMultiBossLeaveRoomRecvS(this);
    }

    /// <summary>Field number for the "ullRoomId" field.</summary>
    public const int UllRoomIdFieldNumber = 1;
    private long ullRoomId_;
    /// <summary>
    /// 房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllRoomId {
      get { return ullRoomId_; }
      set {
        ullRoomId_ = value;
      }
    }

    /// <summary>Field number for the "ullRoleId" field.</summary>
    public const int UllRoleIdFieldNumber = 2;
    private long ullRoleId_;
    /// <summary>
    /// 离开房间的角色id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllRoleId {
      get { return ullRoleId_; }
      set {
        ullRoleId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMultiBossLeaveRoomRecvS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMultiBossLeaveRoomRecvS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoomId != other.UllRoomId) return false;
      if (UllRoleId != other.UllRoleId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoomId != 0L) hash ^= UllRoomId.GetHashCode();
      if (UllRoleId != 0L) hash ^= UllRoleId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoomId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UllRoomId);
      }
      if (UllRoleId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UllRoleId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoomId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllRoomId);
      }
      if (UllRoleId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllRoleId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMultiBossLeaveRoomRecvS other) {
      if (other == null) {
        return;
      }
      if (other.UllRoomId != 0L) {
        UllRoomId = other.UllRoomId;
      }
      if (other.UllRoleId != 0L) {
        UllRoleId = other.UllRoleId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoomId = input.ReadInt64();
            break;
          }
          case 16: {
            UllRoleId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：多人Boss副本踢出房间
  /// _MSG_MULTI_BOSS_KICK_ROOM_C
  /// </summary>
  public sealed partial class PMsgMultiBossKickRoomC : pb::IMessage<PMsgMultiBossKickRoomC> {
    private static readonly pb::MessageParser<PMsgMultiBossKickRoomC> _parser = new pb::MessageParser<PMsgMultiBossKickRoomC>(() => new PMsgMultiBossKickRoomC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMultiBossKickRoomC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMultiBossReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossKickRoomC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossKickRoomC(PMsgMultiBossKickRoomC other) : this() {
      ullRoleId_ = other.ullRoleId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossKickRoomC Clone() {
      return new PMsgMultiBossKickRoomC(this);
    }

    /// <summary>Field number for the "ullRoleId" field.</summary>
    public const int UllRoleIdFieldNumber = 1;
    private long ullRoleId_;
    /// <summary>
    /// 将被踢出房间的角色id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllRoleId {
      get { return ullRoleId_; }
      set {
        ullRoleId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMultiBossKickRoomC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMultiBossKickRoomC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoleId != other.UllRoleId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoleId != 0L) hash ^= UllRoleId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoleId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UllRoleId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoleId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllRoleId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMultiBossKickRoomC other) {
      if (other == null) {
        return;
      }
      if (other.UllRoleId != 0L) {
        UllRoleId = other.UllRoleId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoleId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：多人Boss副本踢出房间回复
  /// _MSG_MULTI_BOSS_KICK_ROOM_S
  /// </summary>
  public sealed partial class PMsgMultiBossKickRoomS : pb::IMessage<PMsgMultiBossKickRoomS> {
    private static readonly pb::MessageParser<PMsgMultiBossKickRoomS> _parser = new pb::MessageParser<PMsgMultiBossKickRoomS>(() => new PMsgMultiBossKickRoomS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMultiBossKickRoomS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMultiBossReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossKickRoomS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossKickRoomS(PMsgMultiBossKickRoomS other) : this() {
      ullRoleId_ = other.ullRoleId_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossKickRoomS Clone() {
      return new PMsgMultiBossKickRoomS(this);
    }

    /// <summary>Field number for the "ullRoleId" field.</summary>
    public const int UllRoleIdFieldNumber = 1;
    private long ullRoleId_;
    /// <summary>
    /// 将被踢出房间的角色id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllRoleId {
      get { return ullRoleId_; }
      set {
        ullRoleId_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMultiBossKickRoomS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMultiBossKickRoomS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoleId != other.UllRoleId) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoleId != 0L) hash ^= UllRoleId.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoleId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UllRoleId);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoleId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllRoleId);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMultiBossKickRoomS other) {
      if (other == null) {
        return;
      }
      if (other.UllRoleId != 0L) {
        UllRoleId = other.UllRoleId;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoleId = input.ReadInt64();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：多人Boss副本踢出房间广播
  /// _MSG_MULTI_BOSS_KICK_ROOM_RECV_S
  /// </summary>
  public sealed partial class PMsgMultiBossKickRoomRecvS : pb::IMessage<PMsgMultiBossKickRoomRecvS> {
    private static readonly pb::MessageParser<PMsgMultiBossKickRoomRecvS> _parser = new pb::MessageParser<PMsgMultiBossKickRoomRecvS>(() => new PMsgMultiBossKickRoomRecvS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMultiBossKickRoomRecvS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMultiBossReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossKickRoomRecvS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossKickRoomRecvS(PMsgMultiBossKickRoomRecvS other) : this() {
      ullRoomId_ = other.ullRoomId_;
      ullRoleId_ = other.ullRoleId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossKickRoomRecvS Clone() {
      return new PMsgMultiBossKickRoomRecvS(this);
    }

    /// <summary>Field number for the "ullRoomId" field.</summary>
    public const int UllRoomIdFieldNumber = 1;
    private long ullRoomId_;
    /// <summary>
    /// 房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllRoomId {
      get { return ullRoomId_; }
      set {
        ullRoomId_ = value;
      }
    }

    /// <summary>Field number for the "ullRoleId" field.</summary>
    public const int UllRoleIdFieldNumber = 2;
    private long ullRoleId_;
    /// <summary>
    /// 将被踢出房间的角色id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllRoleId {
      get { return ullRoleId_; }
      set {
        ullRoleId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMultiBossKickRoomRecvS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMultiBossKickRoomRecvS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoomId != other.UllRoomId) return false;
      if (UllRoleId != other.UllRoleId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoomId != 0L) hash ^= UllRoomId.GetHashCode();
      if (UllRoleId != 0L) hash ^= UllRoleId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoomId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UllRoomId);
      }
      if (UllRoleId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UllRoleId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoomId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllRoomId);
      }
      if (UllRoleId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllRoleId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMultiBossKickRoomRecvS other) {
      if (other == null) {
        return;
      }
      if (other.UllRoomId != 0L) {
        UllRoomId = other.UllRoomId;
      }
      if (other.UllRoleId != 0L) {
        UllRoleId = other.UllRoleId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoomId = input.ReadInt64();
            break;
          }
          case 16: {
            UllRoleId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：开始Boss副本
  /// _MSG_MULTI_BOSS_START_C
  /// </summary>
  public sealed partial class PMsgMultiBossStartC : pb::IMessage<PMsgMultiBossStartC> {
    private static readonly pb::MessageParser<PMsgMultiBossStartC> _parser = new pb::MessageParser<PMsgMultiBossStartC>(() => new PMsgMultiBossStartC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMultiBossStartC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMultiBossReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossStartC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossStartC(PMsgMultiBossStartC other) : this() {
      unBossBattleId_ = other.unBossBattleId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossStartC Clone() {
      return new PMsgMultiBossStartC(this);
    }

    /// <summary>Field number for the "unBossBattleId" field.</summary>
    public const int UnBossBattleIdFieldNumber = 1;
    private int unBossBattleId_;
    /// <summary>
    /// Boss副本id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnBossBattleId {
      get { return unBossBattleId_; }
      set {
        unBossBattleId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMultiBossStartC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMultiBossStartC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnBossBattleId != other.UnBossBattleId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnBossBattleId != 0) hash ^= UnBossBattleId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnBossBattleId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnBossBattleId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnBossBattleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnBossBattleId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMultiBossStartC other) {
      if (other == null) {
        return;
      }
      if (other.UnBossBattleId != 0) {
        UnBossBattleId = other.UnBossBattleId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnBossBattleId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 掉落物品
  /// </summary>
  public sealed partial class MultiBossDropItem : pb::IMessage<MultiBossDropItem> {
    private static readonly pb::MessageParser<MultiBossDropItem> _parser = new pb::MessageParser<MultiBossDropItem>(() => new MultiBossDropItem());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiBossDropItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMultiBossReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiBossDropItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiBossDropItem(MultiBossDropItem other) : this() {
      unType_ = other.unType_;
      unItemId_ = other.unItemId_;
      unItemNum_ = other.unItemNum_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiBossDropItem Clone() {
      return new MultiBossDropItem(this);
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 1;
    private int unType_;
    /// <summary>
    /// 掉落物品类型(UNITE_TYPE)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    /// <summary>Field number for the "unItemId" field.</summary>
    public const int UnItemIdFieldNumber = 2;
    private int unItemId_;
    /// <summary>
    /// 掉落物品ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnItemId {
      get { return unItemId_; }
      set {
        unItemId_ = value;
      }
    }

    /// <summary>Field number for the "unItemNum" field.</summary>
    public const int UnItemNumFieldNumber = 3;
    private int unItemNum_;
    /// <summary>
    /// 掉落物品数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnItemNum {
      get { return unItemNum_; }
      set {
        unItemNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiBossDropItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiBossDropItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnType != other.UnType) return false;
      if (UnItemId != other.UnItemId) return false;
      if (UnItemNum != other.UnItemNum) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnType != 0) hash ^= UnType.GetHashCode();
      if (UnItemId != 0) hash ^= UnItemId.GetHashCode();
      if (UnItemNum != 0) hash ^= UnItemNum.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnType);
      }
      if (UnItemId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnItemId);
      }
      if (UnItemNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnItemNum);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      if (UnItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnItemId);
      }
      if (UnItemNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnItemNum);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiBossDropItem other) {
      if (other == null) {
        return;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
      if (other.UnItemId != 0) {
        UnItemId = other.UnItemId;
      }
      if (other.UnItemNum != 0) {
        UnItemNum = other.UnItemNum;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnType = input.ReadInt32();
            break;
          }
          case 16: {
            UnItemId = input.ReadInt32();
            break;
          }
          case 24: {
            UnItemNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：开始Boss副本回复
  /// _MSG_MULTI_BOSS_START_S
  /// </summary>
  public sealed partial class PMsgMultiBossStartS : pb::IMessage<PMsgMultiBossStartS> {
    private static readonly pb::MessageParser<PMsgMultiBossStartS> _parser = new pb::MessageParser<PMsgMultiBossStartS>(() => new PMsgMultiBossStartS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMultiBossStartS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMultiBossReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossStartS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossStartS(PMsgMultiBossStartS other) : this() {
      ullRoomId_ = other.ullRoomId_;
      unBossBattleId_ = other.unBossBattleId_;
      unDropCoin_ = other.unDropCoin_;
      unDropExp_ = other.unDropExp_;
      cDrop_ = other.cDrop_.Clone();
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossStartS Clone() {
      return new PMsgMultiBossStartS(this);
    }

    /// <summary>Field number for the "ullRoomId" field.</summary>
    public const int UllRoomIdFieldNumber = 1;
    private long ullRoomId_;
    /// <summary>
    /// 房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllRoomId {
      get { return ullRoomId_; }
      set {
        ullRoomId_ = value;
      }
    }

    /// <summary>Field number for the "unBossBattleId" field.</summary>
    public const int UnBossBattleIdFieldNumber = 2;
    private int unBossBattleId_;
    /// <summary>
    /// Boss副本id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnBossBattleId {
      get { return unBossBattleId_; }
      set {
        unBossBattleId_ = value;
      }
    }

    /// <summary>Field number for the "unDropCoin" field.</summary>
    public const int UnDropCoinFieldNumber = 3;
    private int unDropCoin_;
    /// <summary>
    /// 掉落铜币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnDropCoin {
      get { return unDropCoin_; }
      set {
        unDropCoin_ = value;
      }
    }

    /// <summary>Field number for the "unDropExp" field.</summary>
    public const int UnDropExpFieldNumber = 4;
    private int unDropExp_;
    /// <summary>
    /// 掉落经验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnDropExp {
      get { return unDropExp_; }
      set {
        unDropExp_ = value;
      }
    }

    /// <summary>Field number for the "cDrop" field.</summary>
    public const int CDropFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Sw.MultiBossDropItem> _repeated_cDrop_codec
        = pb::FieldCodec.ForMessage(42, global::Sw.MultiBossDropItem.Parser);
    private readonly pbc::RepeatedField<global::Sw.MultiBossDropItem> cDrop_ = new pbc::RepeatedField<global::Sw.MultiBossDropItem>();
    /// <summary>
    /// 掉落信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.MultiBossDropItem> CDrop {
      get { return cDrop_; }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMultiBossStartS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMultiBossStartS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoomId != other.UllRoomId) return false;
      if (UnBossBattleId != other.UnBossBattleId) return false;
      if (UnDropCoin != other.UnDropCoin) return false;
      if (UnDropExp != other.UnDropExp) return false;
      if(!cDrop_.Equals(other.cDrop_)) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoomId != 0L) hash ^= UllRoomId.GetHashCode();
      if (UnBossBattleId != 0) hash ^= UnBossBattleId.GetHashCode();
      if (UnDropCoin != 0) hash ^= UnDropCoin.GetHashCode();
      if (UnDropExp != 0) hash ^= UnDropExp.GetHashCode();
      hash ^= cDrop_.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoomId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UllRoomId);
      }
      if (UnBossBattleId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnBossBattleId);
      }
      if (UnDropCoin != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnDropCoin);
      }
      if (UnDropExp != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UnDropExp);
      }
      cDrop_.WriteTo(output, _repeated_cDrop_codec);
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoomId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllRoomId);
      }
      if (UnBossBattleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnBossBattleId);
      }
      if (UnDropCoin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnDropCoin);
      }
      if (UnDropExp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnDropExp);
      }
      size += cDrop_.CalculateSize(_repeated_cDrop_codec);
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMultiBossStartS other) {
      if (other == null) {
        return;
      }
      if (other.UllRoomId != 0L) {
        UllRoomId = other.UllRoomId;
      }
      if (other.UnBossBattleId != 0) {
        UnBossBattleId = other.UnBossBattleId;
      }
      if (other.UnDropCoin != 0) {
        UnDropCoin = other.UnDropCoin;
      }
      if (other.UnDropExp != 0) {
        UnDropExp = other.UnDropExp;
      }
      cDrop_.Add(other.cDrop_);
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoomId = input.ReadInt64();
            break;
          }
          case 16: {
            UnBossBattleId = input.ReadInt32();
            break;
          }
          case 24: {
            UnDropCoin = input.ReadInt32();
            break;
          }
          case 32: {
            UnDropExp = input.ReadInt32();
            break;
          }
          case 42: {
            cDrop_.AddEntriesFrom(input, _repeated_cDrop_codec);
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：Boss副本完成
  /// _MSG_MULTI_BOSS_COMPLETE_C
  /// </summary>
  public sealed partial class PMsgMultiBossCompleteC : pb::IMessage<PMsgMultiBossCompleteC> {
    private static readonly pb::MessageParser<PMsgMultiBossCompleteC> _parser = new pb::MessageParser<PMsgMultiBossCompleteC>(() => new PMsgMultiBossCompleteC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMultiBossCompleteC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMultiBossReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossCompleteC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossCompleteC(PMsgMultiBossCompleteC other) : this() {
      unBossBattleId_ = other.unBossBattleId_;
      unVictory_ = other.unVictory_;
      unExpTotal_ = other.unExpTotal_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossCompleteC Clone() {
      return new PMsgMultiBossCompleteC(this);
    }

    /// <summary>Field number for the "unBossBattleId" field.</summary>
    public const int UnBossBattleIdFieldNumber = 1;
    private int unBossBattleId_;
    /// <summary>
    /// Boss副本id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnBossBattleId {
      get { return unBossBattleId_; }
      set {
        unBossBattleId_ = value;
      }
    }

    /// <summary>Field number for the "unVictory" field.</summary>
    public const int UnVictoryFieldNumber = 2;
    private int unVictory_;
    /// <summary>
    /// 胜利标志：0-战斗失败，1-战斗胜利
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnVictory {
      get { return unVictory_; }
      set {
        unVictory_ = value;
      }
    }

    /// <summary>Field number for the "unExpTotal" field.</summary>
    public const int UnExpTotalFieldNumber = 3;
    private int unExpTotal_;
    /// <summary>
    /// 掉落的经验总数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnExpTotal {
      get { return unExpTotal_; }
      set {
        unExpTotal_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMultiBossCompleteC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMultiBossCompleteC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnBossBattleId != other.UnBossBattleId) return false;
      if (UnVictory != other.UnVictory) return false;
      if (UnExpTotal != other.UnExpTotal) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnBossBattleId != 0) hash ^= UnBossBattleId.GetHashCode();
      if (UnVictory != 0) hash ^= UnVictory.GetHashCode();
      if (UnExpTotal != 0) hash ^= UnExpTotal.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnBossBattleId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnBossBattleId);
      }
      if (UnVictory != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnVictory);
      }
      if (UnExpTotal != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnExpTotal);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnBossBattleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnBossBattleId);
      }
      if (UnVictory != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnVictory);
      }
      if (UnExpTotal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnExpTotal);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMultiBossCompleteC other) {
      if (other == null) {
        return;
      }
      if (other.UnBossBattleId != 0) {
        UnBossBattleId = other.UnBossBattleId;
      }
      if (other.UnVictory != 0) {
        UnVictory = other.UnVictory;
      }
      if (other.UnExpTotal != 0) {
        UnExpTotal = other.UnExpTotal;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnBossBattleId = input.ReadInt32();
            break;
          }
          case 16: {
            UnVictory = input.ReadInt32();
            break;
          }
          case 24: {
            UnExpTotal = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：Boss副本完成回复
  /// _MSG_MULTI_BOSS_COMPLETE_S
  /// </summary>
  public sealed partial class PMsgMultiBossCompleteS : pb::IMessage<PMsgMultiBossCompleteS> {
    private static readonly pb::MessageParser<PMsgMultiBossCompleteS> _parser = new pb::MessageParser<PMsgMultiBossCompleteS>(() => new PMsgMultiBossCompleteS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMultiBossCompleteS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMultiBossReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossCompleteS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossCompleteS(PMsgMultiBossCompleteS other) : this() {
      unBossBattleId_ = other.unBossBattleId_;
      unVictory_ = other.unVictory_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMultiBossCompleteS Clone() {
      return new PMsgMultiBossCompleteS(this);
    }

    /// <summary>Field number for the "unBossBattleId" field.</summary>
    public const int UnBossBattleIdFieldNumber = 1;
    private int unBossBattleId_;
    /// <summary>
    /// Boss副本id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnBossBattleId {
      get { return unBossBattleId_; }
      set {
        unBossBattleId_ = value;
      }
    }

    /// <summary>Field number for the "unVictory" field.</summary>
    public const int UnVictoryFieldNumber = 2;
    private int unVictory_;
    /// <summary>
    /// 胜利标志：0-战斗失败，1-战斗胜利
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnVictory {
      get { return unVictory_; }
      set {
        unVictory_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMultiBossCompleteS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMultiBossCompleteS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnBossBattleId != other.UnBossBattleId) return false;
      if (UnVictory != other.UnVictory) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnBossBattleId != 0) hash ^= UnBossBattleId.GetHashCode();
      if (UnVictory != 0) hash ^= UnVictory.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnBossBattleId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnBossBattleId);
      }
      if (UnVictory != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnVictory);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnBossBattleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnBossBattleId);
      }
      if (UnVictory != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnVictory);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMultiBossCompleteS other) {
      if (other == null) {
        return;
      }
      if (other.UnBossBattleId != 0) {
        UnBossBattleId = other.UnBossBattleId;
      }
      if (other.UnVictory != 0) {
        UnVictory = other.UnVictory;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnBossBattleId = input.ReadInt32();
            break;
          }
          case 16: {
            UnVictory = input.ReadInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
