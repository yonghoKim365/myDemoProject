// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/PMsgFriend.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Sw {

  /// <summary>Holder for reflection information generated from protos/PMsgFriend.proto</summary>
  public static partial class PMsgFriendReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/PMsgFriend.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PMsgFriendReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chdwcm90b3MvUE1zZ0ZyaWVuZC5wcm90bxICc3ciKgoUUE1zZ0ZyaWVuZFF1",
            "ZXJ5TGlzdEMSEgoKdW5SZXNlcnZlZBgBIAEoBSKyAQoORnJpZW5kQmFzZUlu",
            "Zm8SEQoJdWxsUm9sZUlkGAEgASgEEg4KBnN6TmFtZRgCIAEoCRIPCgd1bkxl",
            "dmVsGAMgASgNEhIKCnVuUm9sZVR5cGUYBCABKA0SFAoMdWxsTG9naW5UaW1l",
            "GAUgASgEEhgKEHVsbFNlbmRQb3dlclRpbWUYBiABKAQSEAoIdW5BdHRhY2sY",
            "ByABKA0SFgoOdW5PbkxpbmVTdGF0dXMYCCABKA0iawoUUE1zZ0ZyaWVuZFF1",
            "ZXJ5TGlzdFMSFQoNdW5GcmllbmRDb3VudBgBIAEoBRInCgtjRnJpZW5kSW5m",
            "bxgCIAMoCzISLnN3LkZyaWVuZEJhc2VJbmZvEhMKC3VuRXJyb3JDb2RlGGMg",
            "ASgFIiMKEVBNc2dGcmllbmRTZWFyY2hDEg4KBnN6TmFtZRgBIAEoCSJoChFQ",
            "TXNnRnJpZW5kU2VhcmNoUxIVCg11bkZyaWVuZENvdW50GAEgASgNEicKC2NG",
            "cmllbmRJbmZvGAIgAygLMhIuc3cuRnJpZW5kQmFzZUluZm8SEwoLdW5FcnJv",
            "ckNvZGUYYyABKAUiLgoYUE1zZ0ZyaWVuZFJlY29tbWVuZExpc3RDEhIKCnVu",
            "UmVzZXJ2ZWQYASABKAUibwoYUE1zZ0ZyaWVuZFJlY29tbWVuZExpc3RTEhUK",
            "DXVuRnJpZW5kQ291bnQYASABKA0SJwoLY0ZyaWVuZEluZm8YAiADKAsyEi5z",
            "dy5GcmllbmRCYXNlSW5mbxITCgt1bkVycm9yQ29kZRhjIAEoBSIjCg5QTXNn",
            "RnJpZW5kQWRkQxIRCgl1bGxSb2xlSWQYASABKAQiggEKDlBNc2dGcmllbmRB",
            "ZGRTEhEKCXVsbFJvbGVJZBgBIAEoBBIOCgZzek5hbWUYAiABKAkSDgoGbkxl",
            "dmVsGAMgASgNEhIKCnVuUm9sZVR5cGUYBCABKA0SFAoMdWxsQXBwbHlUaW1l",
            "GAUgASgEEhMKC3VuRXJyb3JDb2RlGAYgASgFInMKFFBNc2dGcmllbmROb3Rp",
            "ZnlBZGRTEhEKCXVsbFJvbGVJZBgBIAEoBBIOCgZzek5hbWUYAiABKAkSDgoG",
            "bkxldmVsGAMgASgNEhIKCnVuUm9sZVR5cGUYBCABKA0SFAoMdWxsQXBwbHlU",
            "aW1lGAUgASgEIikKFFBNc2dGcmllbmRDYW5jbGVBZGRDEhEKCXVsbFJvbGVJ",
            "ZBgBIAEoBCI+ChRQTXNnRnJpZW5kQ2FuY2xlQWRkUxIRCgl1bGxSb2xlSWQY",
            "ASABKAQSEwoLdW5FcnJvckNvZGUYAiABKAUiLwoaUE1zZ0ZyaWVuZE5vdGlm",
            "eUNhbmNsZUFkZFMSEQoJdWxsUm9sZUlkGAEgASgEInYKFUZyaWVuZFJlcXVl",
            "c3RCYXNlSW5mbxIRCgl1bGxSb2xlSWQYASABKAQSDgoGc3pOYW1lGAIgASgJ",
            "Eg4KBm5MZXZlbBgDIAEoDRISCgp1blJvbGVUeXBlGAQgASgNEhYKDnVsbFJl",
            "cXVlc3RUaW1lGAUgASgEIjIKHFBNc2dGcmllbmRSZXF1ZXN0RnJpZW5kTGlz",
            "dEMSEgoKdW5SZXNlcnZlZBgBIAEoBSJ+ChxQTXNnRnJpZW5kUmVxdWVzdEZy",
            "aWVuZExpc3RTEhgKEHVuQXBwbGljYW50Q291bnQYASABKA0SLwoMY1JlcXVl",
            "c3RJbmZvGAIgAygLMhkuc3cuRnJpZW5kUmVxdWVzdEJhc2VJbmZvEhMKC3Vu",
            "RXJyb3JDb2RlGGMgASgFIjYKIFBNc2dGcmllbmRTZWxmUmVxdWVzdEZyaWVu",
            "ZExpc3RDEhIKCnVuUmVzZXJ2ZWQYASABKAUigAEKIFBNc2dGcmllbmRTZWxm",
            "UmVxdWVzdEZyaWVuZExpc3RTEhYKDnVuQmVBcHBseUNvdW50GAEgASgNEi8K",
            "DGNSZXF1ZXN0SW5mbxgCIAMoCzIZLnN3LkZyaWVuZFJlcXVlc3RCYXNlSW5m",
            "bxITCgt1bkVycm9yQ29kZRhjIAEoBSI7ChRQTXNnRnJpZW5kQXBwbGljYW50",
            "QxIRCgl1bGxSb2xlSWQYASABKAQSEAoIdW5BY2NlZGUYAiABKAUiUAoUUE1z",
            "Z0ZyaWVuZEFwcGxpY2FudFMSEQoJdWxsUm9sZUlkGAEgASgEEhAKCHVuQWNj",
            "ZWRlGAIgASgNEhMKC3VuRXJyb3JDb2RlGGMgASgFIkEKGlBNc2dGcmllbmRO",
            "b3RpZnlBcHBsaWNhbnRTEhEKCXVsbFJvbGVJZBgBIAEoBBIQCgh1bkFjY2Vk",
            "ZRgCIAEoDSIpChRQTXNnRnJpZW5kRGVsRnJpZW5kQxIRCgl1bGxSb2xlSWQY",
            "ASABKAQiPgoUUE1zZ0ZyaWVuZERlbEZyaWVuZFMSEQoJdWxsUm9sZUlkGAEg",
            "ASgEEhMKC3VuRXJyb3JDb2RlGGMgASgFIikKFFBNc2dGcmllbmRHaXZlUG93",
            "ZXJDEhEKCXVsbFJvbGVJZBgBIAEoBCJYChRQTXNnRnJpZW5kR2l2ZVBvd2Vy",
            "UxIRCgl1bGxSb2xlSWQYASABKAQSGAoQdWxsU2VuZFBvd2VyVGltZRgCIAEo",
            "BBITCgt1bkVycm9yQ29kZRhjIAEoBWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFriendQueryListC), global::Sw.PMsgFriendQueryListC.Parser, new[]{ "UnReserved" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.FriendBaseInfo), global::Sw.FriendBaseInfo.Parser, new[]{ "UllRoleId", "SzName", "UnLevel", "UnRoleType", "UllLoginTime", "UllSendPowerTime", "UnAttack", "UnOnLineStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFriendQueryListS), global::Sw.PMsgFriendQueryListS.Parser, new[]{ "UnFriendCount", "CFriendInfo", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFriendSearchC), global::Sw.PMsgFriendSearchC.Parser, new[]{ "SzName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFriendSearchS), global::Sw.PMsgFriendSearchS.Parser, new[]{ "UnFriendCount", "CFriendInfo", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFriendRecommendListC), global::Sw.PMsgFriendRecommendListC.Parser, new[]{ "UnReserved" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFriendRecommendListS), global::Sw.PMsgFriendRecommendListS.Parser, new[]{ "UnFriendCount", "CFriendInfo", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFriendAddC), global::Sw.PMsgFriendAddC.Parser, new[]{ "UllRoleId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFriendAddS), global::Sw.PMsgFriendAddS.Parser, new[]{ "UllRoleId", "SzName", "NLevel", "UnRoleType", "UllApplyTime", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFriendNotifyAddS), global::Sw.PMsgFriendNotifyAddS.Parser, new[]{ "UllRoleId", "SzName", "NLevel", "UnRoleType", "UllApplyTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFriendCancleAddC), global::Sw.PMsgFriendCancleAddC.Parser, new[]{ "UllRoleId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFriendCancleAddS), global::Sw.PMsgFriendCancleAddS.Parser, new[]{ "UllRoleId", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFriendNotifyCancleAddS), global::Sw.PMsgFriendNotifyCancleAddS.Parser, new[]{ "UllRoleId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.FriendRequestBaseInfo), global::Sw.FriendRequestBaseInfo.Parser, new[]{ "UllRoleId", "SzName", "NLevel", "UnRoleType", "UllRequestTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFriendRequestFriendListC), global::Sw.PMsgFriendRequestFriendListC.Parser, new[]{ "UnReserved" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFriendRequestFriendListS), global::Sw.PMsgFriendRequestFriendListS.Parser, new[]{ "UnApplicantCount", "CRequestInfo", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFriendSelfRequestFriendListC), global::Sw.PMsgFriendSelfRequestFriendListC.Parser, new[]{ "UnReserved" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFriendSelfRequestFriendListS), global::Sw.PMsgFriendSelfRequestFriendListS.Parser, new[]{ "UnBeApplyCount", "CRequestInfo", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFriendApplicantC), global::Sw.PMsgFriendApplicantC.Parser, new[]{ "UllRoleId", "UnAccede" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFriendApplicantS), global::Sw.PMsgFriendApplicantS.Parser, new[]{ "UllRoleId", "UnAccede", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFriendNotifyApplicantS), global::Sw.PMsgFriendNotifyApplicantS.Parser, new[]{ "UllRoleId", "UnAccede" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFriendDelFriendC), global::Sw.PMsgFriendDelFriendC.Parser, new[]{ "UllRoleId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFriendDelFriendS), global::Sw.PMsgFriendDelFriendS.Parser, new[]{ "UllRoleId", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFriendGivePowerC), global::Sw.PMsgFriendGivePowerC.Parser, new[]{ "UllRoleId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFriendGivePowerS), global::Sw.PMsgFriendGivePowerS.Parser, new[]{ "UllRoleId", "UllSendPowerTime", "UnErrorCode" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 客户端：查询好友列表请求
  /// _MSG_FRIEND_QUERY_LIST_C
  /// </summary>
  public sealed partial class PMsgFriendQueryListC : pb::IMessage<PMsgFriendQueryListC> {
    private static readonly pb::MessageParser<PMsgFriendQueryListC> _parser = new pb::MessageParser<PMsgFriendQueryListC>(() => new PMsgFriendQueryListC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFriendQueryListC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgFriendReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendQueryListC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendQueryListC(PMsgFriendQueryListC other) : this() {
      unReserved_ = other.unReserved_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendQueryListC Clone() {
      return new PMsgFriendQueryListC(this);
    }

    /// <summary>Field number for the "unReserved" field.</summary>
    public const int UnReservedFieldNumber = 1;
    private int unReserved_;
    /// <summary>
    /// 保留字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnReserved {
      get { return unReserved_; }
      set {
        unReserved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFriendQueryListC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFriendQueryListC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnReserved != other.UnReserved) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnReserved != 0) hash ^= UnReserved.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnReserved != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnReserved);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnReserved != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnReserved);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFriendQueryListC other) {
      if (other == null) {
        return;
      }
      if (other.UnReserved != 0) {
        UnReserved = other.UnReserved;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnReserved = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 好友基本信息
  /// </summary>
  public sealed partial class FriendBaseInfo : pb::IMessage<FriendBaseInfo> {
    private static readonly pb::MessageParser<FriendBaseInfo> _parser = new pb::MessageParser<FriendBaseInfo>(() => new FriendBaseInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendBaseInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgFriendReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendBaseInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendBaseInfo(FriendBaseInfo other) : this() {
      ullRoleId_ = other.ullRoleId_;
      szName_ = other.szName_;
      unLevel_ = other.unLevel_;
      unRoleType_ = other.unRoleType_;
      ullLoginTime_ = other.ullLoginTime_;
      ullSendPowerTime_ = other.ullSendPowerTime_;
      unAttack_ = other.unAttack_;
      unOnLineStatus_ = other.unOnLineStatus_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendBaseInfo Clone() {
      return new FriendBaseInfo(this);
    }

    /// <summary>Field number for the "ullRoleId" field.</summary>
    public const int UllRoleIdFieldNumber = 1;
    private ulong ullRoleId_;
    /// <summary>
    /// 好友角色id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UllRoleId {
      get { return ullRoleId_; }
      set {
        ullRoleId_ = value;
      }
    }

    /// <summary>Field number for the "szName" field.</summary>
    public const int SzNameFieldNumber = 2;
    private string szName_ = "";
    /// <summary>
    /// 好友名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzName {
      get { return szName_; }
      set {
        szName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unLevel" field.</summary>
    public const int UnLevelFieldNumber = 3;
    private uint unLevel_;
    /// <summary>
    /// 好友等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnLevel {
      get { return unLevel_; }
      set {
        unLevel_ = value;
      }
    }

    /// <summary>Field number for the "unRoleType" field.</summary>
    public const int UnRoleTypeFieldNumber = 4;
    private uint unRoleType_;
    /// <summary>
    /// 好友角色类型ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnRoleType {
      get { return unRoleType_; }
      set {
        unRoleType_ = value;
      }
    }

    /// <summary>Field number for the "ullLoginTime" field.</summary>
    public const int UllLoginTimeFieldNumber = 5;
    private ulong ullLoginTime_;
    /// <summary>
    /// 角色最后登录时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UllLoginTime {
      get { return ullLoginTime_; }
      set {
        ullLoginTime_ = value;
      }
    }

    /// <summary>Field number for the "ullSendPowerTime" field.</summary>
    public const int UllSendPowerTimeFieldNumber = 6;
    private ulong ullSendPowerTime_;
    /// <summary>
    /// 初始值是0,之后每次赋值YYYYMMDD,表示最近一次赠送体力时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UllSendPowerTime {
      get { return ullSendPowerTime_; }
      set {
        ullSendPowerTime_ = value;
      }
    }

    /// <summary>Field number for the "unAttack" field.</summary>
    public const int UnAttackFieldNumber = 7;
    private uint unAttack_;
    /// <summary>
    /// 好友战斗力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnAttack {
      get { return unAttack_; }
      set {
        unAttack_ = value;
      }
    }

    /// <summary>Field number for the "unOnLineStatus" field.</summary>
    public const int UnOnLineStatusFieldNumber = 8;
    private uint unOnLineStatus_;
    /// <summary>
    /// 好友在线状态 sw::eGuildMemberOnLineStatus
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnOnLineStatus {
      get { return unOnLineStatus_; }
      set {
        unOnLineStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendBaseInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendBaseInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoleId != other.UllRoleId) return false;
      if (SzName != other.SzName) return false;
      if (UnLevel != other.UnLevel) return false;
      if (UnRoleType != other.UnRoleType) return false;
      if (UllLoginTime != other.UllLoginTime) return false;
      if (UllSendPowerTime != other.UllSendPowerTime) return false;
      if (UnAttack != other.UnAttack) return false;
      if (UnOnLineStatus != other.UnOnLineStatus) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoleId != 0UL) hash ^= UllRoleId.GetHashCode();
      if (SzName.Length != 0) hash ^= SzName.GetHashCode();
      if (UnLevel != 0) hash ^= UnLevel.GetHashCode();
      if (UnRoleType != 0) hash ^= UnRoleType.GetHashCode();
      if (UllLoginTime != 0UL) hash ^= UllLoginTime.GetHashCode();
      if (UllSendPowerTime != 0UL) hash ^= UllSendPowerTime.GetHashCode();
      if (UnAttack != 0) hash ^= UnAttack.GetHashCode();
      if (UnOnLineStatus != 0) hash ^= UnOnLineStatus.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoleId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UllRoleId);
      }
      if (SzName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SzName);
      }
      if (UnLevel != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(UnLevel);
      }
      if (UnRoleType != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(UnRoleType);
      }
      if (UllLoginTime != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(UllLoginTime);
      }
      if (UllSendPowerTime != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(UllSendPowerTime);
      }
      if (UnAttack != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(UnAttack);
      }
      if (UnOnLineStatus != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(UnOnLineStatus);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoleId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UllRoleId);
      }
      if (SzName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzName);
      }
      if (UnLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnLevel);
      }
      if (UnRoleType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnRoleType);
      }
      if (UllLoginTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UllLoginTime);
      }
      if (UllSendPowerTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UllSendPowerTime);
      }
      if (UnAttack != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnAttack);
      }
      if (UnOnLineStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnOnLineStatus);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendBaseInfo other) {
      if (other == null) {
        return;
      }
      if (other.UllRoleId != 0UL) {
        UllRoleId = other.UllRoleId;
      }
      if (other.SzName.Length != 0) {
        SzName = other.SzName;
      }
      if (other.UnLevel != 0) {
        UnLevel = other.UnLevel;
      }
      if (other.UnRoleType != 0) {
        UnRoleType = other.UnRoleType;
      }
      if (other.UllLoginTime != 0UL) {
        UllLoginTime = other.UllLoginTime;
      }
      if (other.UllSendPowerTime != 0UL) {
        UllSendPowerTime = other.UllSendPowerTime;
      }
      if (other.UnAttack != 0) {
        UnAttack = other.UnAttack;
      }
      if (other.UnOnLineStatus != 0) {
        UnOnLineStatus = other.UnOnLineStatus;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoleId = input.ReadUInt64();
            break;
          }
          case 18: {
            SzName = input.ReadString();
            break;
          }
          case 24: {
            UnLevel = input.ReadUInt32();
            break;
          }
          case 32: {
            UnRoleType = input.ReadUInt32();
            break;
          }
          case 40: {
            UllLoginTime = input.ReadUInt64();
            break;
          }
          case 48: {
            UllSendPowerTime = input.ReadUInt64();
            break;
          }
          case 56: {
            UnAttack = input.ReadUInt32();
            break;
          }
          case 64: {
            UnOnLineStatus = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：查询好友列表回复
  /// _MSG_FRIEND_QUERY_LIST_S
  /// </summary>
  public sealed partial class PMsgFriendQueryListS : pb::IMessage<PMsgFriendQueryListS> {
    private static readonly pb::MessageParser<PMsgFriendQueryListS> _parser = new pb::MessageParser<PMsgFriendQueryListS>(() => new PMsgFriendQueryListS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFriendQueryListS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgFriendReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendQueryListS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendQueryListS(PMsgFriendQueryListS other) : this() {
      unFriendCount_ = other.unFriendCount_;
      cFriendInfo_ = other.cFriendInfo_.Clone();
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendQueryListS Clone() {
      return new PMsgFriendQueryListS(this);
    }

    /// <summary>Field number for the "unFriendCount" field.</summary>
    public const int UnFriendCountFieldNumber = 1;
    private int unFriendCount_;
    /// <summary>
    /// 好友数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnFriendCount {
      get { return unFriendCount_; }
      set {
        unFriendCount_ = value;
      }
    }

    /// <summary>Field number for the "cFriendInfo" field.</summary>
    public const int CFriendInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Sw.FriendBaseInfo> _repeated_cFriendInfo_codec
        = pb::FieldCodec.ForMessage(18, global::Sw.FriendBaseInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.FriendBaseInfo> cFriendInfo_ = new pbc::RepeatedField<global::Sw.FriendBaseInfo>();
    /// <summary>
    /// 好友基本信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.FriendBaseInfo> CFriendInfo {
      get { return cFriendInfo_; }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFriendQueryListS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFriendQueryListS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnFriendCount != other.UnFriendCount) return false;
      if(!cFriendInfo_.Equals(other.cFriendInfo_)) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnFriendCount != 0) hash ^= UnFriendCount.GetHashCode();
      hash ^= cFriendInfo_.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnFriendCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnFriendCount);
      }
      cFriendInfo_.WriteTo(output, _repeated_cFriendInfo_codec);
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnFriendCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnFriendCount);
      }
      size += cFriendInfo_.CalculateSize(_repeated_cFriendInfo_codec);
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFriendQueryListS other) {
      if (other == null) {
        return;
      }
      if (other.UnFriendCount != 0) {
        UnFriendCount = other.UnFriendCount;
      }
      cFriendInfo_.Add(other.cFriendInfo_);
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnFriendCount = input.ReadInt32();
            break;
          }
          case 18: {
            cFriendInfo_.AddEntriesFrom(input, _repeated_cFriendInfo_codec);
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：搜索好友请求
  /// _MSG_FRIEND_SEARCH_C
  /// </summary>
  public sealed partial class PMsgFriendSearchC : pb::IMessage<PMsgFriendSearchC> {
    private static readonly pb::MessageParser<PMsgFriendSearchC> _parser = new pb::MessageParser<PMsgFriendSearchC>(() => new PMsgFriendSearchC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFriendSearchC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgFriendReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendSearchC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendSearchC(PMsgFriendSearchC other) : this() {
      szName_ = other.szName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendSearchC Clone() {
      return new PMsgFriendSearchC(this);
    }

    /// <summary>Field number for the "szName" field.</summary>
    public const int SzNameFieldNumber = 1;
    private string szName_ = "";
    /// <summary>
    /// 角色的昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzName {
      get { return szName_; }
      set {
        szName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFriendSearchC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFriendSearchC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SzName != other.SzName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SzName.Length != 0) hash ^= SzName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SzName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SzName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SzName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFriendSearchC other) {
      if (other == null) {
        return;
      }
      if (other.SzName.Length != 0) {
        SzName = other.SzName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SzName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：搜索好友请求回复
  /// _MSG_FRIEND_SEARCH_S
  /// </summary>
  public sealed partial class PMsgFriendSearchS : pb::IMessage<PMsgFriendSearchS> {
    private static readonly pb::MessageParser<PMsgFriendSearchS> _parser = new pb::MessageParser<PMsgFriendSearchS>(() => new PMsgFriendSearchS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFriendSearchS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgFriendReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendSearchS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendSearchS(PMsgFriendSearchS other) : this() {
      unFriendCount_ = other.unFriendCount_;
      cFriendInfo_ = other.cFriendInfo_.Clone();
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendSearchS Clone() {
      return new PMsgFriendSearchS(this);
    }

    /// <summary>Field number for the "unFriendCount" field.</summary>
    public const int UnFriendCountFieldNumber = 1;
    private uint unFriendCount_;
    /// <summary>
    /// 搜索结果中好友数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnFriendCount {
      get { return unFriendCount_; }
      set {
        unFriendCount_ = value;
      }
    }

    /// <summary>Field number for the "cFriendInfo" field.</summary>
    public const int CFriendInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Sw.FriendBaseInfo> _repeated_cFriendInfo_codec
        = pb::FieldCodec.ForMessage(18, global::Sw.FriendBaseInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.FriendBaseInfo> cFriendInfo_ = new pbc::RepeatedField<global::Sw.FriendBaseInfo>();
    /// <summary>
    /// 好友基本信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.FriendBaseInfo> CFriendInfo {
      get { return cFriendInfo_; }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFriendSearchS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFriendSearchS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnFriendCount != other.UnFriendCount) return false;
      if(!cFriendInfo_.Equals(other.cFriendInfo_)) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnFriendCount != 0) hash ^= UnFriendCount.GetHashCode();
      hash ^= cFriendInfo_.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnFriendCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnFriendCount);
      }
      cFriendInfo_.WriteTo(output, _repeated_cFriendInfo_codec);
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnFriendCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnFriendCount);
      }
      size += cFriendInfo_.CalculateSize(_repeated_cFriendInfo_codec);
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFriendSearchS other) {
      if (other == null) {
        return;
      }
      if (other.UnFriendCount != 0) {
        UnFriendCount = other.UnFriendCount;
      }
      cFriendInfo_.Add(other.cFriendInfo_);
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnFriendCount = input.ReadUInt32();
            break;
          }
          case 18: {
            cFriendInfo_.AddEntriesFrom(input, _repeated_cFriendInfo_codec);
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：请求推荐好友列表
  /// _MSG_FRIEND_RECOMMEND_LISTC
  /// </summary>
  public sealed partial class PMsgFriendRecommendListC : pb::IMessage<PMsgFriendRecommendListC> {
    private static readonly pb::MessageParser<PMsgFriendRecommendListC> _parser = new pb::MessageParser<PMsgFriendRecommendListC>(() => new PMsgFriendRecommendListC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFriendRecommendListC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgFriendReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendRecommendListC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendRecommendListC(PMsgFriendRecommendListC other) : this() {
      unReserved_ = other.unReserved_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendRecommendListC Clone() {
      return new PMsgFriendRecommendListC(this);
    }

    /// <summary>Field number for the "unReserved" field.</summary>
    public const int UnReservedFieldNumber = 1;
    private int unReserved_;
    /// <summary>
    /// 保留字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnReserved {
      get { return unReserved_; }
      set {
        unReserved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFriendRecommendListC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFriendRecommendListC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnReserved != other.UnReserved) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnReserved != 0) hash ^= UnReserved.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnReserved != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnReserved);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnReserved != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnReserved);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFriendRecommendListC other) {
      if (other == null) {
        return;
      }
      if (other.UnReserved != 0) {
        UnReserved = other.UnReserved;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnReserved = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：回复推荐好友列表请求
  /// _MSG_FRIEND_RECOMMEND_LIST_S
  /// </summary>
  public sealed partial class PMsgFriendRecommendListS : pb::IMessage<PMsgFriendRecommendListS> {
    private static readonly pb::MessageParser<PMsgFriendRecommendListS> _parser = new pb::MessageParser<PMsgFriendRecommendListS>(() => new PMsgFriendRecommendListS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFriendRecommendListS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgFriendReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendRecommendListS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendRecommendListS(PMsgFriendRecommendListS other) : this() {
      unFriendCount_ = other.unFriendCount_;
      cFriendInfo_ = other.cFriendInfo_.Clone();
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendRecommendListS Clone() {
      return new PMsgFriendRecommendListS(this);
    }

    /// <summary>Field number for the "unFriendCount" field.</summary>
    public const int UnFriendCountFieldNumber = 1;
    private uint unFriendCount_;
    /// <summary>
    /// 推荐好友数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnFriendCount {
      get { return unFriendCount_; }
      set {
        unFriendCount_ = value;
      }
    }

    /// <summary>Field number for the "cFriendInfo" field.</summary>
    public const int CFriendInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Sw.FriendBaseInfo> _repeated_cFriendInfo_codec
        = pb::FieldCodec.ForMessage(18, global::Sw.FriendBaseInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.FriendBaseInfo> cFriendInfo_ = new pbc::RepeatedField<global::Sw.FriendBaseInfo>();
    /// <summary>
    /// 好友基本信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.FriendBaseInfo> CFriendInfo {
      get { return cFriendInfo_; }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFriendRecommendListS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFriendRecommendListS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnFriendCount != other.UnFriendCount) return false;
      if(!cFriendInfo_.Equals(other.cFriendInfo_)) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnFriendCount != 0) hash ^= UnFriendCount.GetHashCode();
      hash ^= cFriendInfo_.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnFriendCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnFriendCount);
      }
      cFriendInfo_.WriteTo(output, _repeated_cFriendInfo_codec);
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnFriendCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnFriendCount);
      }
      size += cFriendInfo_.CalculateSize(_repeated_cFriendInfo_codec);
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFriendRecommendListS other) {
      if (other == null) {
        return;
      }
      if (other.UnFriendCount != 0) {
        UnFriendCount = other.UnFriendCount;
      }
      cFriendInfo_.Add(other.cFriendInfo_);
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnFriendCount = input.ReadUInt32();
            break;
          }
          case 18: {
            cFriendInfo_.AddEntriesFrom(input, _repeated_cFriendInfo_codec);
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：申请添加好友
  /// _MSG_FRIEND_ADD_C
  /// </summary>
  public sealed partial class PMsgFriendAddC : pb::IMessage<PMsgFriendAddC> {
    private static readonly pb::MessageParser<PMsgFriendAddC> _parser = new pb::MessageParser<PMsgFriendAddC>(() => new PMsgFriendAddC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFriendAddC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgFriendReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendAddC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendAddC(PMsgFriendAddC other) : this() {
      ullRoleId_ = other.ullRoleId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendAddC Clone() {
      return new PMsgFriendAddC(this);
    }

    /// <summary>Field number for the "ullRoleId" field.</summary>
    public const int UllRoleIdFieldNumber = 1;
    private ulong ullRoleId_;
    /// <summary>
    /// 被申请者的角色id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UllRoleId {
      get { return ullRoleId_; }
      set {
        ullRoleId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFriendAddC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFriendAddC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoleId != other.UllRoleId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoleId != 0UL) hash ^= UllRoleId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoleId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UllRoleId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoleId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UllRoleId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFriendAddC other) {
      if (other == null) {
        return;
      }
      if (other.UllRoleId != 0UL) {
        UllRoleId = other.UllRoleId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoleId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：申请添加好友回复
  /// _MSG_FRIEND_ADD_S
  /// </summary>
  public sealed partial class PMsgFriendAddS : pb::IMessage<PMsgFriendAddS> {
    private static readonly pb::MessageParser<PMsgFriendAddS> _parser = new pb::MessageParser<PMsgFriendAddS>(() => new PMsgFriendAddS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFriendAddS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgFriendReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendAddS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendAddS(PMsgFriendAddS other) : this() {
      ullRoleId_ = other.ullRoleId_;
      szName_ = other.szName_;
      nLevel_ = other.nLevel_;
      unRoleType_ = other.unRoleType_;
      ullApplyTime_ = other.ullApplyTime_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendAddS Clone() {
      return new PMsgFriendAddS(this);
    }

    /// <summary>Field number for the "ullRoleId" field.</summary>
    public const int UllRoleIdFieldNumber = 1;
    private ulong ullRoleId_;
    /// <summary>
    /// 被申请者的角色id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UllRoleId {
      get { return ullRoleId_; }
      set {
        ullRoleId_ = value;
      }
    }

    /// <summary>Field number for the "szName" field.</summary>
    public const int SzNameFieldNumber = 2;
    private string szName_ = "";
    /// <summary>
    /// 被申请者名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzName {
      get { return szName_; }
      set {
        szName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nLevel" field.</summary>
    public const int NLevelFieldNumber = 3;
    private uint nLevel_;
    /// <summary>
    /// 被申请者等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NLevel {
      get { return nLevel_; }
      set {
        nLevel_ = value;
      }
    }

    /// <summary>Field number for the "unRoleType" field.</summary>
    public const int UnRoleTypeFieldNumber = 4;
    private uint unRoleType_;
    /// <summary>
    /// 好友角色类型ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnRoleType {
      get { return unRoleType_; }
      set {
        unRoleType_ = value;
      }
    }

    /// <summary>Field number for the "ullApplyTime" field.</summary>
    public const int UllApplyTimeFieldNumber = 5;
    private ulong ullApplyTime_;
    /// <summary>
    /// 申请时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UllApplyTime {
      get { return ullApplyTime_; }
      set {
        ullApplyTime_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 6;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFriendAddS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFriendAddS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoleId != other.UllRoleId) return false;
      if (SzName != other.SzName) return false;
      if (NLevel != other.NLevel) return false;
      if (UnRoleType != other.UnRoleType) return false;
      if (UllApplyTime != other.UllApplyTime) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoleId != 0UL) hash ^= UllRoleId.GetHashCode();
      if (SzName.Length != 0) hash ^= SzName.GetHashCode();
      if (NLevel != 0) hash ^= NLevel.GetHashCode();
      if (UnRoleType != 0) hash ^= UnRoleType.GetHashCode();
      if (UllApplyTime != 0UL) hash ^= UllApplyTime.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoleId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UllRoleId);
      }
      if (SzName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SzName);
      }
      if (NLevel != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(NLevel);
      }
      if (UnRoleType != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(UnRoleType);
      }
      if (UllApplyTime != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(UllApplyTime);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoleId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UllRoleId);
      }
      if (SzName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzName);
      }
      if (NLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NLevel);
      }
      if (UnRoleType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnRoleType);
      }
      if (UllApplyTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UllApplyTime);
      }
      if (UnErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFriendAddS other) {
      if (other == null) {
        return;
      }
      if (other.UllRoleId != 0UL) {
        UllRoleId = other.UllRoleId;
      }
      if (other.SzName.Length != 0) {
        SzName = other.SzName;
      }
      if (other.NLevel != 0) {
        NLevel = other.NLevel;
      }
      if (other.UnRoleType != 0) {
        UnRoleType = other.UnRoleType;
      }
      if (other.UllApplyTime != 0UL) {
        UllApplyTime = other.UllApplyTime;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoleId = input.ReadUInt64();
            break;
          }
          case 18: {
            SzName = input.ReadString();
            break;
          }
          case 24: {
            NLevel = input.ReadUInt32();
            break;
          }
          case 32: {
            UnRoleType = input.ReadUInt32();
            break;
          }
          case 40: {
            UllApplyTime = input.ReadUInt64();
            break;
          }
          case 48: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：通知被申请者,申请者的申请信息
  /// _MSG_FRIEND_NOTIFY_ADD_S
  /// </summary>
  public sealed partial class PMsgFriendNotifyAddS : pb::IMessage<PMsgFriendNotifyAddS> {
    private static readonly pb::MessageParser<PMsgFriendNotifyAddS> _parser = new pb::MessageParser<PMsgFriendNotifyAddS>(() => new PMsgFriendNotifyAddS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFriendNotifyAddS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgFriendReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendNotifyAddS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendNotifyAddS(PMsgFriendNotifyAddS other) : this() {
      ullRoleId_ = other.ullRoleId_;
      szName_ = other.szName_;
      nLevel_ = other.nLevel_;
      unRoleType_ = other.unRoleType_;
      ullApplyTime_ = other.ullApplyTime_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendNotifyAddS Clone() {
      return new PMsgFriendNotifyAddS(this);
    }

    /// <summary>Field number for the "ullRoleId" field.</summary>
    public const int UllRoleIdFieldNumber = 1;
    private ulong ullRoleId_;
    /// <summary>
    /// 发起申请的角色id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UllRoleId {
      get { return ullRoleId_; }
      set {
        ullRoleId_ = value;
      }
    }

    /// <summary>Field number for the "szName" field.</summary>
    public const int SzNameFieldNumber = 2;
    private string szName_ = "";
    /// <summary>
    /// 好友名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzName {
      get { return szName_; }
      set {
        szName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nLevel" field.</summary>
    public const int NLevelFieldNumber = 3;
    private uint nLevel_;
    /// <summary>
    /// 好友等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NLevel {
      get { return nLevel_; }
      set {
        nLevel_ = value;
      }
    }

    /// <summary>Field number for the "unRoleType" field.</summary>
    public const int UnRoleTypeFieldNumber = 4;
    private uint unRoleType_;
    /// <summary>
    /// 好友角色类型ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnRoleType {
      get { return unRoleType_; }
      set {
        unRoleType_ = value;
      }
    }

    /// <summary>Field number for the "ullApplyTime" field.</summary>
    public const int UllApplyTimeFieldNumber = 5;
    private ulong ullApplyTime_;
    /// <summary>
    /// 申请时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UllApplyTime {
      get { return ullApplyTime_; }
      set {
        ullApplyTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFriendNotifyAddS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFriendNotifyAddS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoleId != other.UllRoleId) return false;
      if (SzName != other.SzName) return false;
      if (NLevel != other.NLevel) return false;
      if (UnRoleType != other.UnRoleType) return false;
      if (UllApplyTime != other.UllApplyTime) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoleId != 0UL) hash ^= UllRoleId.GetHashCode();
      if (SzName.Length != 0) hash ^= SzName.GetHashCode();
      if (NLevel != 0) hash ^= NLevel.GetHashCode();
      if (UnRoleType != 0) hash ^= UnRoleType.GetHashCode();
      if (UllApplyTime != 0UL) hash ^= UllApplyTime.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoleId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UllRoleId);
      }
      if (SzName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SzName);
      }
      if (NLevel != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(NLevel);
      }
      if (UnRoleType != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(UnRoleType);
      }
      if (UllApplyTime != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(UllApplyTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoleId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UllRoleId);
      }
      if (SzName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzName);
      }
      if (NLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NLevel);
      }
      if (UnRoleType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnRoleType);
      }
      if (UllApplyTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UllApplyTime);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFriendNotifyAddS other) {
      if (other == null) {
        return;
      }
      if (other.UllRoleId != 0UL) {
        UllRoleId = other.UllRoleId;
      }
      if (other.SzName.Length != 0) {
        SzName = other.SzName;
      }
      if (other.NLevel != 0) {
        NLevel = other.NLevel;
      }
      if (other.UnRoleType != 0) {
        UnRoleType = other.UnRoleType;
      }
      if (other.UllApplyTime != 0UL) {
        UllApplyTime = other.UllApplyTime;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoleId = input.ReadUInt64();
            break;
          }
          case 18: {
            SzName = input.ReadString();
            break;
          }
          case 24: {
            NLevel = input.ReadUInt32();
            break;
          }
          case 32: {
            UnRoleType = input.ReadUInt32();
            break;
          }
          case 40: {
            UllApplyTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：在添加好友栏中,撤销申请添加他人为好友
  /// _MSG_FRIEND_CANCLE_ADD_C
  /// </summary>
  public sealed partial class PMsgFriendCancleAddC : pb::IMessage<PMsgFriendCancleAddC> {
    private static readonly pb::MessageParser<PMsgFriendCancleAddC> _parser = new pb::MessageParser<PMsgFriendCancleAddC>(() => new PMsgFriendCancleAddC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFriendCancleAddC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgFriendReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendCancleAddC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendCancleAddC(PMsgFriendCancleAddC other) : this() {
      ullRoleId_ = other.ullRoleId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendCancleAddC Clone() {
      return new PMsgFriendCancleAddC(this);
    }

    /// <summary>Field number for the "ullRoleId" field.</summary>
    public const int UllRoleIdFieldNumber = 1;
    private ulong ullRoleId_;
    /// <summary>
    /// 玩家角色id(被申请者)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UllRoleId {
      get { return ullRoleId_; }
      set {
        ullRoleId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFriendCancleAddC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFriendCancleAddC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoleId != other.UllRoleId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoleId != 0UL) hash ^= UllRoleId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoleId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UllRoleId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoleId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UllRoleId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFriendCancleAddC other) {
      if (other == null) {
        return;
      }
      if (other.UllRoleId != 0UL) {
        UllRoleId = other.UllRoleId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoleId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：回复: 在添加好友栏中,撤销申请添加他人为好友
  /// _MSG_FRIEND_CANCLE_ADD_S
  /// </summary>
  public sealed partial class PMsgFriendCancleAddS : pb::IMessage<PMsgFriendCancleAddS> {
    private static readonly pb::MessageParser<PMsgFriendCancleAddS> _parser = new pb::MessageParser<PMsgFriendCancleAddS>(() => new PMsgFriendCancleAddS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFriendCancleAddS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgFriendReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendCancleAddS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendCancleAddS(PMsgFriendCancleAddS other) : this() {
      ullRoleId_ = other.ullRoleId_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendCancleAddS Clone() {
      return new PMsgFriendCancleAddS(this);
    }

    /// <summary>Field number for the "ullRoleId" field.</summary>
    public const int UllRoleIdFieldNumber = 1;
    private ulong ullRoleId_;
    /// <summary>
    /// 玩家角色id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UllRoleId {
      get { return ullRoleId_; }
      set {
        ullRoleId_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 2;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFriendCancleAddS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFriendCancleAddS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoleId != other.UllRoleId) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoleId != 0UL) hash ^= UllRoleId.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoleId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UllRoleId);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoleId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UllRoleId);
      }
      if (UnErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFriendCancleAddS other) {
      if (other == null) {
        return;
      }
      if (other.UllRoleId != 0UL) {
        UllRoleId = other.UllRoleId;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoleId = input.ReadUInt64();
            break;
          }
          case 16: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：通知撤销申请添加好友
  /// _MSG_FRIEND_NOTIFY_CANCLE_ADD_S
  /// </summary>
  public sealed partial class PMsgFriendNotifyCancleAddS : pb::IMessage<PMsgFriendNotifyCancleAddS> {
    private static readonly pb::MessageParser<PMsgFriendNotifyCancleAddS> _parser = new pb::MessageParser<PMsgFriendNotifyCancleAddS>(() => new PMsgFriendNotifyCancleAddS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFriendNotifyCancleAddS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgFriendReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendNotifyCancleAddS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendNotifyCancleAddS(PMsgFriendNotifyCancleAddS other) : this() {
      ullRoleId_ = other.ullRoleId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendNotifyCancleAddS Clone() {
      return new PMsgFriendNotifyCancleAddS(this);
    }

    /// <summary>Field number for the "ullRoleId" field.</summary>
    public const int UllRoleIdFieldNumber = 1;
    private ulong ullRoleId_;
    /// <summary>
    /// 发起撤销的角色id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UllRoleId {
      get { return ullRoleId_; }
      set {
        ullRoleId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFriendNotifyCancleAddS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFriendNotifyCancleAddS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoleId != other.UllRoleId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoleId != 0UL) hash ^= UllRoleId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoleId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UllRoleId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoleId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UllRoleId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFriendNotifyCancleAddS other) {
      if (other == null) {
        return;
      }
      if (other.UllRoleId != 0UL) {
        UllRoleId = other.UllRoleId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoleId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 申请基本信息
  /// </summary>
  public sealed partial class FriendRequestBaseInfo : pb::IMessage<FriendRequestBaseInfo> {
    private static readonly pb::MessageParser<FriendRequestBaseInfo> _parser = new pb::MessageParser<FriendRequestBaseInfo>(() => new FriendRequestBaseInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendRequestBaseInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgFriendReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendRequestBaseInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendRequestBaseInfo(FriendRequestBaseInfo other) : this() {
      ullRoleId_ = other.ullRoleId_;
      szName_ = other.szName_;
      nLevel_ = other.nLevel_;
      unRoleType_ = other.unRoleType_;
      ullRequestTime_ = other.ullRequestTime_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendRequestBaseInfo Clone() {
      return new FriendRequestBaseInfo(this);
    }

    /// <summary>Field number for the "ullRoleId" field.</summary>
    public const int UllRoleIdFieldNumber = 1;
    private ulong ullRoleId_;
    /// <summary>
    /// 角色id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UllRoleId {
      get { return ullRoleId_; }
      set {
        ullRoleId_ = value;
      }
    }

    /// <summary>Field number for the "szName" field.</summary>
    public const int SzNameFieldNumber = 2;
    private string szName_ = "";
    /// <summary>
    /// 角色名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzName {
      get { return szName_; }
      set {
        szName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nLevel" field.</summary>
    public const int NLevelFieldNumber = 3;
    private uint nLevel_;
    /// <summary>
    /// 角色等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NLevel {
      get { return nLevel_; }
      set {
        nLevel_ = value;
      }
    }

    /// <summary>Field number for the "unRoleType" field.</summary>
    public const int UnRoleTypeFieldNumber = 4;
    private uint unRoleType_;
    /// <summary>
    /// 好友角色类型ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnRoleType {
      get { return unRoleType_; }
      set {
        unRoleType_ = value;
      }
    }

    /// <summary>Field number for the "ullRequestTime" field.</summary>
    public const int UllRequestTimeFieldNumber = 5;
    private ulong ullRequestTime_;
    /// <summary>
    /// 角色申请时间	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UllRequestTime {
      get { return ullRequestTime_; }
      set {
        ullRequestTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendRequestBaseInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendRequestBaseInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoleId != other.UllRoleId) return false;
      if (SzName != other.SzName) return false;
      if (NLevel != other.NLevel) return false;
      if (UnRoleType != other.UnRoleType) return false;
      if (UllRequestTime != other.UllRequestTime) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoleId != 0UL) hash ^= UllRoleId.GetHashCode();
      if (SzName.Length != 0) hash ^= SzName.GetHashCode();
      if (NLevel != 0) hash ^= NLevel.GetHashCode();
      if (UnRoleType != 0) hash ^= UnRoleType.GetHashCode();
      if (UllRequestTime != 0UL) hash ^= UllRequestTime.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoleId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UllRoleId);
      }
      if (SzName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SzName);
      }
      if (NLevel != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(NLevel);
      }
      if (UnRoleType != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(UnRoleType);
      }
      if (UllRequestTime != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(UllRequestTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoleId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UllRoleId);
      }
      if (SzName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzName);
      }
      if (NLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NLevel);
      }
      if (UnRoleType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnRoleType);
      }
      if (UllRequestTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UllRequestTime);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendRequestBaseInfo other) {
      if (other == null) {
        return;
      }
      if (other.UllRoleId != 0UL) {
        UllRoleId = other.UllRoleId;
      }
      if (other.SzName.Length != 0) {
        SzName = other.SzName;
      }
      if (other.NLevel != 0) {
        NLevel = other.NLevel;
      }
      if (other.UnRoleType != 0) {
        UnRoleType = other.UnRoleType;
      }
      if (other.UllRequestTime != 0UL) {
        UllRequestTime = other.UllRequestTime;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoleId = input.ReadUInt64();
            break;
          }
          case 18: {
            SzName = input.ReadString();
            break;
          }
          case 24: {
            NLevel = input.ReadUInt32();
            break;
          }
          case 32: {
            UnRoleType = input.ReadUInt32();
            break;
          }
          case 40: {
            UllRequestTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：查询申请者列表
  /// _MSG_FRIEND_REQUEST_FRIEND_LIST_C
  /// </summary>
  public sealed partial class PMsgFriendRequestFriendListC : pb::IMessage<PMsgFriendRequestFriendListC> {
    private static readonly pb::MessageParser<PMsgFriendRequestFriendListC> _parser = new pb::MessageParser<PMsgFriendRequestFriendListC>(() => new PMsgFriendRequestFriendListC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFriendRequestFriendListC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgFriendReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendRequestFriendListC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendRequestFriendListC(PMsgFriendRequestFriendListC other) : this() {
      unReserved_ = other.unReserved_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendRequestFriendListC Clone() {
      return new PMsgFriendRequestFriendListC(this);
    }

    /// <summary>Field number for the "unReserved" field.</summary>
    public const int UnReservedFieldNumber = 1;
    private int unReserved_;
    /// <summary>
    /// 保留字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnReserved {
      get { return unReserved_; }
      set {
        unReserved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFriendRequestFriendListC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFriendRequestFriendListC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnReserved != other.UnReserved) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnReserved != 0) hash ^= UnReserved.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnReserved != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnReserved);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnReserved != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnReserved);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFriendRequestFriendListC other) {
      if (other == null) {
        return;
      }
      if (other.UnReserved != 0) {
        UnReserved = other.UnReserved;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnReserved = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：返回申请者列表
  /// _MSG_FRIEND_REQUEST_FRIEND_LIST_S
  /// </summary>
  public sealed partial class PMsgFriendRequestFriendListS : pb::IMessage<PMsgFriendRequestFriendListS> {
    private static readonly pb::MessageParser<PMsgFriendRequestFriendListS> _parser = new pb::MessageParser<PMsgFriendRequestFriendListS>(() => new PMsgFriendRequestFriendListS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFriendRequestFriendListS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgFriendReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendRequestFriendListS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendRequestFriendListS(PMsgFriendRequestFriendListS other) : this() {
      unApplicantCount_ = other.unApplicantCount_;
      cRequestInfo_ = other.cRequestInfo_.Clone();
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendRequestFriendListS Clone() {
      return new PMsgFriendRequestFriendListS(this);
    }

    /// <summary>Field number for the "unApplicantCount" field.</summary>
    public const int UnApplicantCountFieldNumber = 1;
    private uint unApplicantCount_;
    /// <summary>
    /// 申请者数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnApplicantCount {
      get { return unApplicantCount_; }
      set {
        unApplicantCount_ = value;
      }
    }

    /// <summary>Field number for the "cRequestInfo" field.</summary>
    public const int CRequestInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Sw.FriendRequestBaseInfo> _repeated_cRequestInfo_codec
        = pb::FieldCodec.ForMessage(18, global::Sw.FriendRequestBaseInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.FriendRequestBaseInfo> cRequestInfo_ = new pbc::RepeatedField<global::Sw.FriendRequestBaseInfo>();
    /// <summary>
    /// 申请者基本信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.FriendRequestBaseInfo> CRequestInfo {
      get { return cRequestInfo_; }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFriendRequestFriendListS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFriendRequestFriendListS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnApplicantCount != other.UnApplicantCount) return false;
      if(!cRequestInfo_.Equals(other.cRequestInfo_)) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnApplicantCount != 0) hash ^= UnApplicantCount.GetHashCode();
      hash ^= cRequestInfo_.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnApplicantCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnApplicantCount);
      }
      cRequestInfo_.WriteTo(output, _repeated_cRequestInfo_codec);
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnApplicantCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnApplicantCount);
      }
      size += cRequestInfo_.CalculateSize(_repeated_cRequestInfo_codec);
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFriendRequestFriendListS other) {
      if (other == null) {
        return;
      }
      if (other.UnApplicantCount != 0) {
        UnApplicantCount = other.UnApplicantCount;
      }
      cRequestInfo_.Add(other.cRequestInfo_);
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnApplicantCount = input.ReadUInt32();
            break;
          }
          case 18: {
            cRequestInfo_.AddEntriesFrom(input, _repeated_cRequestInfo_codec);
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：查询自己申请添加他人为好友的列表
  /// _MSG_FRIEND_SELF_REQUEST_FRIEND_LIST_C
  /// </summary>
  public sealed partial class PMsgFriendSelfRequestFriendListC : pb::IMessage<PMsgFriendSelfRequestFriendListC> {
    private static readonly pb::MessageParser<PMsgFriendSelfRequestFriendListC> _parser = new pb::MessageParser<PMsgFriendSelfRequestFriendListC>(() => new PMsgFriendSelfRequestFriendListC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFriendSelfRequestFriendListC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgFriendReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendSelfRequestFriendListC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendSelfRequestFriendListC(PMsgFriendSelfRequestFriendListC other) : this() {
      unReserved_ = other.unReserved_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendSelfRequestFriendListC Clone() {
      return new PMsgFriendSelfRequestFriendListC(this);
    }

    /// <summary>Field number for the "unReserved" field.</summary>
    public const int UnReservedFieldNumber = 1;
    private int unReserved_;
    /// <summary>
    /// 保留字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnReserved {
      get { return unReserved_; }
      set {
        unReserved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFriendSelfRequestFriendListC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFriendSelfRequestFriendListC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnReserved != other.UnReserved) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnReserved != 0) hash ^= UnReserved.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnReserved != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnReserved);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnReserved != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnReserved);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFriendSelfRequestFriendListC other) {
      if (other == null) {
        return;
      }
      if (other.UnReserved != 0) {
        UnReserved = other.UnReserved;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnReserved = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：返回自己申请添加他人为好友的列表
  /// _MSG_FRIEND_SELF_REQUEST_FRIEND_LIST_S
  /// </summary>
  public sealed partial class PMsgFriendSelfRequestFriendListS : pb::IMessage<PMsgFriendSelfRequestFriendListS> {
    private static readonly pb::MessageParser<PMsgFriendSelfRequestFriendListS> _parser = new pb::MessageParser<PMsgFriendSelfRequestFriendListS>(() => new PMsgFriendSelfRequestFriendListS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFriendSelfRequestFriendListS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgFriendReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendSelfRequestFriendListS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendSelfRequestFriendListS(PMsgFriendSelfRequestFriendListS other) : this() {
      unBeApplyCount_ = other.unBeApplyCount_;
      cRequestInfo_ = other.cRequestInfo_.Clone();
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendSelfRequestFriendListS Clone() {
      return new PMsgFriendSelfRequestFriendListS(this);
    }

    /// <summary>Field number for the "unBeApplyCount" field.</summary>
    public const int UnBeApplyCountFieldNumber = 1;
    private uint unBeApplyCount_;
    /// <summary>
    /// 被申请者数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnBeApplyCount {
      get { return unBeApplyCount_; }
      set {
        unBeApplyCount_ = value;
      }
    }

    /// <summary>Field number for the "cRequestInfo" field.</summary>
    public const int CRequestInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Sw.FriendRequestBaseInfo> _repeated_cRequestInfo_codec
        = pb::FieldCodec.ForMessage(18, global::Sw.FriendRequestBaseInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.FriendRequestBaseInfo> cRequestInfo_ = new pbc::RepeatedField<global::Sw.FriendRequestBaseInfo>();
    /// <summary>
    /// 被申请者基本信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.FriendRequestBaseInfo> CRequestInfo {
      get { return cRequestInfo_; }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFriendSelfRequestFriendListS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFriendSelfRequestFriendListS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnBeApplyCount != other.UnBeApplyCount) return false;
      if(!cRequestInfo_.Equals(other.cRequestInfo_)) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnBeApplyCount != 0) hash ^= UnBeApplyCount.GetHashCode();
      hash ^= cRequestInfo_.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnBeApplyCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnBeApplyCount);
      }
      cRequestInfo_.WriteTo(output, _repeated_cRequestInfo_codec);
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnBeApplyCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnBeApplyCount);
      }
      size += cRequestInfo_.CalculateSize(_repeated_cRequestInfo_codec);
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFriendSelfRequestFriendListS other) {
      if (other == null) {
        return;
      }
      if (other.UnBeApplyCount != 0) {
        UnBeApplyCount = other.UnBeApplyCount;
      }
      cRequestInfo_.Add(other.cRequestInfo_);
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnBeApplyCount = input.ReadUInt32();
            break;
          }
          case 18: {
            cRequestInfo_.AddEntriesFrom(input, _repeated_cRequestInfo_codec);
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：处理申请者请求
  /// _MSG_FRIEND_APPLICANT_C
  /// </summary>
  public sealed partial class PMsgFriendApplicantC : pb::IMessage<PMsgFriendApplicantC> {
    private static readonly pb::MessageParser<PMsgFriendApplicantC> _parser = new pb::MessageParser<PMsgFriendApplicantC>(() => new PMsgFriendApplicantC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFriendApplicantC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgFriendReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendApplicantC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendApplicantC(PMsgFriendApplicantC other) : this() {
      ullRoleId_ = other.ullRoleId_;
      unAccede_ = other.unAccede_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendApplicantC Clone() {
      return new PMsgFriendApplicantC(this);
    }

    /// <summary>Field number for the "ullRoleId" field.</summary>
    public const int UllRoleIdFieldNumber = 1;
    private ulong ullRoleId_;
    /// <summary>
    /// 申请者的角色id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UllRoleId {
      get { return ullRoleId_; }
      set {
        ullRoleId_ = value;
      }
    }

    /// <summary>Field number for the "unAccede" field.</summary>
    public const int UnAccedeFieldNumber = 2;
    private int unAccede_;
    /// <summary>
    /// 同意或者拒绝,1同意;2拒绝
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnAccede {
      get { return unAccede_; }
      set {
        unAccede_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFriendApplicantC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFriendApplicantC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoleId != other.UllRoleId) return false;
      if (UnAccede != other.UnAccede) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoleId != 0UL) hash ^= UllRoleId.GetHashCode();
      if (UnAccede != 0) hash ^= UnAccede.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoleId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UllRoleId);
      }
      if (UnAccede != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnAccede);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoleId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UllRoleId);
      }
      if (UnAccede != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnAccede);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFriendApplicantC other) {
      if (other == null) {
        return;
      }
      if (other.UllRoleId != 0UL) {
        UllRoleId = other.UllRoleId;
      }
      if (other.UnAccede != 0) {
        UnAccede = other.UnAccede;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoleId = input.ReadUInt64();
            break;
          }
          case 16: {
            UnAccede = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：处理申请者请求回复
  /// _MSG_FRIEND_APPLICANT_S
  /// </summary>
  public sealed partial class PMsgFriendApplicantS : pb::IMessage<PMsgFriendApplicantS> {
    private static readonly pb::MessageParser<PMsgFriendApplicantS> _parser = new pb::MessageParser<PMsgFriendApplicantS>(() => new PMsgFriendApplicantS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFriendApplicantS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgFriendReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendApplicantS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendApplicantS(PMsgFriendApplicantS other) : this() {
      ullRoleId_ = other.ullRoleId_;
      unAccede_ = other.unAccede_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendApplicantS Clone() {
      return new PMsgFriendApplicantS(this);
    }

    /// <summary>Field number for the "ullRoleId" field.</summary>
    public const int UllRoleIdFieldNumber = 1;
    private ulong ullRoleId_;
    /// <summary>
    /// 申请者的角色id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UllRoleId {
      get { return ullRoleId_; }
      set {
        ullRoleId_ = value;
      }
    }

    /// <summary>Field number for the "unAccede" field.</summary>
    public const int UnAccedeFieldNumber = 2;
    private uint unAccede_;
    /// <summary>
    /// 同意或者拒绝,1同意;2拒绝
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnAccede {
      get { return unAccede_; }
      set {
        unAccede_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFriendApplicantS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFriendApplicantS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoleId != other.UllRoleId) return false;
      if (UnAccede != other.UnAccede) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoleId != 0UL) hash ^= UllRoleId.GetHashCode();
      if (UnAccede != 0) hash ^= UnAccede.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoleId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UllRoleId);
      }
      if (UnAccede != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(UnAccede);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoleId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UllRoleId);
      }
      if (UnAccede != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnAccede);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFriendApplicantS other) {
      if (other == null) {
        return;
      }
      if (other.UllRoleId != 0UL) {
        UllRoleId = other.UllRoleId;
      }
      if (other.UnAccede != 0) {
        UnAccede = other.UnAccede;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoleId = input.ReadUInt64();
            break;
          }
          case 16: {
            UnAccede = input.ReadUInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：通知申请者被处理的结果
  /// _MSG_FRIEND_NOTIFY_APPLICANT_S
  /// </summary>
  public sealed partial class PMsgFriendNotifyApplicantS : pb::IMessage<PMsgFriendNotifyApplicantS> {
    private static readonly pb::MessageParser<PMsgFriendNotifyApplicantS> _parser = new pb::MessageParser<PMsgFriendNotifyApplicantS>(() => new PMsgFriendNotifyApplicantS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFriendNotifyApplicantS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgFriendReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendNotifyApplicantS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendNotifyApplicantS(PMsgFriendNotifyApplicantS other) : this() {
      ullRoleId_ = other.ullRoleId_;
      unAccede_ = other.unAccede_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendNotifyApplicantS Clone() {
      return new PMsgFriendNotifyApplicantS(this);
    }

    /// <summary>Field number for the "ullRoleId" field.</summary>
    public const int UllRoleIdFieldNumber = 1;
    private ulong ullRoleId_;
    /// <summary>
    /// 操作同意或拒绝的玩家的角色id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UllRoleId {
      get { return ullRoleId_; }
      set {
        ullRoleId_ = value;
      }
    }

    /// <summary>Field number for the "unAccede" field.</summary>
    public const int UnAccedeFieldNumber = 2;
    private uint unAccede_;
    /// <summary>
    /// 同意或者拒绝,1同意;2拒绝
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnAccede {
      get { return unAccede_; }
      set {
        unAccede_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFriendNotifyApplicantS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFriendNotifyApplicantS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoleId != other.UllRoleId) return false;
      if (UnAccede != other.UnAccede) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoleId != 0UL) hash ^= UllRoleId.GetHashCode();
      if (UnAccede != 0) hash ^= UnAccede.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoleId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UllRoleId);
      }
      if (UnAccede != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(UnAccede);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoleId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UllRoleId);
      }
      if (UnAccede != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnAccede);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFriendNotifyApplicantS other) {
      if (other == null) {
        return;
      }
      if (other.UllRoleId != 0UL) {
        UllRoleId = other.UllRoleId;
      }
      if (other.UnAccede != 0) {
        UnAccede = other.UnAccede;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoleId = input.ReadUInt64();
            break;
          }
          case 16: {
            UnAccede = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端: 请求删除好友
  /// _MSG_FRIEND_DEL_FRIEND_C
  /// </summary>
  public sealed partial class PMsgFriendDelFriendC : pb::IMessage<PMsgFriendDelFriendC> {
    private static readonly pb::MessageParser<PMsgFriendDelFriendC> _parser = new pb::MessageParser<PMsgFriendDelFriendC>(() => new PMsgFriendDelFriendC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFriendDelFriendC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgFriendReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendDelFriendC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendDelFriendC(PMsgFriendDelFriendC other) : this() {
      ullRoleId_ = other.ullRoleId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendDelFriendC Clone() {
      return new PMsgFriendDelFriendC(this);
    }

    /// <summary>Field number for the "ullRoleId" field.</summary>
    public const int UllRoleIdFieldNumber = 1;
    private ulong ullRoleId_;
    /// <summary>
    /// 好友角色id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UllRoleId {
      get { return ullRoleId_; }
      set {
        ullRoleId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFriendDelFriendC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFriendDelFriendC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoleId != other.UllRoleId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoleId != 0UL) hash ^= UllRoleId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoleId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UllRoleId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoleId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UllRoleId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFriendDelFriendC other) {
      if (other == null) {
        return;
      }
      if (other.UllRoleId != 0UL) {
        UllRoleId = other.UllRoleId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoleId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端: 回复删除好友请求
  /// _MSG_FRIEND_DEL_FRIEND_S
  /// </summary>
  public sealed partial class PMsgFriendDelFriendS : pb::IMessage<PMsgFriendDelFriendS> {
    private static readonly pb::MessageParser<PMsgFriendDelFriendS> _parser = new pb::MessageParser<PMsgFriendDelFriendS>(() => new PMsgFriendDelFriendS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFriendDelFriendS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgFriendReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendDelFriendS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendDelFriendS(PMsgFriendDelFriendS other) : this() {
      ullRoleId_ = other.ullRoleId_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendDelFriendS Clone() {
      return new PMsgFriendDelFriendS(this);
    }

    /// <summary>Field number for the "ullRoleId" field.</summary>
    public const int UllRoleIdFieldNumber = 1;
    private ulong ullRoleId_;
    /// <summary>
    /// 好友角色id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UllRoleId {
      get { return ullRoleId_; }
      set {
        ullRoleId_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFriendDelFriendS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFriendDelFriendS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoleId != other.UllRoleId) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoleId != 0UL) hash ^= UllRoleId.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoleId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UllRoleId);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoleId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UllRoleId);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFriendDelFriendS other) {
      if (other == null) {
        return;
      }
      if (other.UllRoleId != 0UL) {
        UllRoleId = other.UllRoleId;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoleId = input.ReadUInt64();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端: 给好友赠送体力请求
  /// _MSG_FRIEND_GIVE_POWER_C
  /// </summary>
  public sealed partial class PMsgFriendGivePowerC : pb::IMessage<PMsgFriendGivePowerC> {
    private static readonly pb::MessageParser<PMsgFriendGivePowerC> _parser = new pb::MessageParser<PMsgFriendGivePowerC>(() => new PMsgFriendGivePowerC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFriendGivePowerC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgFriendReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendGivePowerC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendGivePowerC(PMsgFriendGivePowerC other) : this() {
      ullRoleId_ = other.ullRoleId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendGivePowerC Clone() {
      return new PMsgFriendGivePowerC(this);
    }

    /// <summary>Field number for the "ullRoleId" field.</summary>
    public const int UllRoleIdFieldNumber = 1;
    private ulong ullRoleId_;
    /// <summary>
    /// 被赠送者角色id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UllRoleId {
      get { return ullRoleId_; }
      set {
        ullRoleId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFriendGivePowerC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFriendGivePowerC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoleId != other.UllRoleId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoleId != 0UL) hash ^= UllRoleId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoleId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UllRoleId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoleId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UllRoleId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFriendGivePowerC other) {
      if (other == null) {
        return;
      }
      if (other.UllRoleId != 0UL) {
        UllRoleId = other.UllRoleId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoleId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端: 给好友赠送体力回复
  /// _MSG_FRIEND_GIVE_POWER_S
  /// </summary>
  public sealed partial class PMsgFriendGivePowerS : pb::IMessage<PMsgFriendGivePowerS> {
    private static readonly pb::MessageParser<PMsgFriendGivePowerS> _parser = new pb::MessageParser<PMsgFriendGivePowerS>(() => new PMsgFriendGivePowerS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFriendGivePowerS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgFriendReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendGivePowerS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendGivePowerS(PMsgFriendGivePowerS other) : this() {
      ullRoleId_ = other.ullRoleId_;
      ullSendPowerTime_ = other.ullSendPowerTime_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFriendGivePowerS Clone() {
      return new PMsgFriendGivePowerS(this);
    }

    /// <summary>Field number for the "ullRoleId" field.</summary>
    public const int UllRoleIdFieldNumber = 1;
    private ulong ullRoleId_;
    /// <summary>
    /// 被赠送者角色id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UllRoleId {
      get { return ullRoleId_; }
      set {
        ullRoleId_ = value;
      }
    }

    /// <summary>Field number for the "ullSendPowerTime" field.</summary>
    public const int UllSendPowerTimeFieldNumber = 2;
    private ulong ullSendPowerTime_;
    /// <summary>
    ///YYYYMMDD,表示最近一次赠送体力时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UllSendPowerTime {
      get { return ullSendPowerTime_; }
      set {
        ullSendPowerTime_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFriendGivePowerS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFriendGivePowerS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllRoleId != other.UllRoleId) return false;
      if (UllSendPowerTime != other.UllSendPowerTime) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllRoleId != 0UL) hash ^= UllRoleId.GetHashCode();
      if (UllSendPowerTime != 0UL) hash ^= UllSendPowerTime.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllRoleId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UllRoleId);
      }
      if (UllSendPowerTime != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(UllSendPowerTime);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllRoleId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UllRoleId);
      }
      if (UllSendPowerTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UllSendPowerTime);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFriendGivePowerS other) {
      if (other == null) {
        return;
      }
      if (other.UllRoleId != 0UL) {
        UllRoleId = other.UllRoleId;
      }
      if (other.UllSendPowerTime != 0UL) {
        UllSendPowerTime = other.UllSendPowerTime;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllRoleId = input.ReadUInt64();
            break;
          }
          case 16: {
            UllSendPowerTime = input.ReadUInt64();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
