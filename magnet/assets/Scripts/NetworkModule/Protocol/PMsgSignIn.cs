// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/PMsgSignIn.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Sw {

  /// <summary>Holder for reflection information generated from protos/PMsgSignIn.proto</summary>
  public static partial class PMsgSignInReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/PMsgSignIn.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PMsgSignInReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chdwcm90b3MvUE1zZ1NpZ25Jbi5wcm90bxICc3ciKQoUUE1zZ1NpZ25JblF1",
            "ZXJ5SW5mb0MSEQoJblJlc2VydmVkGAEgASgFIm4KFFBNc2dTaWduSW5RdWVy",
            "eUluZm9TEhUKDXVuU2luZ25JbkluZm8YASABKA0SFAoMdW5TaWduaW5UaW1l",
            "GAIgASgNEhQKDHVuRmlsbEluU2lnbhgDIAEoDRITCgt1bkVycm9yQ29kZRhj",
            "IAEoDSIgCgtQTXNnU2lnbkluQxIRCgluUmVzZXJ2ZWQYASABKAUiOQoLUE1z",
            "Z1NpZ25JblMSFQoNdW5TaW5nbkluSW5mbxgBIAEoDRITCgt1bkVycm9yQ29k",
            "ZRhjIAEoDSInChFQTXNnRmlsbEluU2lnbkluQxISCgp1bllZWVlNTUREGAEg",
            "ASgNIj8KEVBNc2dGaWxsSW5TaWduSW5TEhUKDXVuU2luZ25JbkluZm8YASAB",
            "KA0SEwoLdW5FcnJvckNvZGUYYyABKA1iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgSignInQueryInfoC), global::Sw.PMsgSignInQueryInfoC.Parser, new[]{ "NReserved" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgSignInQueryInfoS), global::Sw.PMsgSignInQueryInfoS.Parser, new[]{ "UnSingnInInfo", "UnSigninTime", "UnFillInSign", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgSignInC), global::Sw.PMsgSignInC.Parser, new[]{ "NReserved" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgSignInS), global::Sw.PMsgSignInS.Parser, new[]{ "UnSingnInInfo", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFillInSignInC), global::Sw.PMsgFillInSignInC.Parser, new[]{ "UnYYYYMMDD" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFillInSignInS), global::Sw.PMsgFillInSignInS.Parser, new[]{ "UnSingnInInfo", "UnErrorCode" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 客户端：查询当月签到信息请求
  /// _MSG_SIGNIN_QUERY_INFO_C
  /// </summary>
  public sealed partial class PMsgSignInQueryInfoC : pb::IMessage<PMsgSignInQueryInfoC> {
    private static readonly pb::MessageParser<PMsgSignInQueryInfoC> _parser = new pb::MessageParser<PMsgSignInQueryInfoC>(() => new PMsgSignInQueryInfoC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgSignInQueryInfoC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgSignInReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSignInQueryInfoC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSignInQueryInfoC(PMsgSignInQueryInfoC other) : this() {
      nReserved_ = other.nReserved_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSignInQueryInfoC Clone() {
      return new PMsgSignInQueryInfoC(this);
    }

    /// <summary>Field number for the "nReserved" field.</summary>
    public const int NReservedFieldNumber = 1;
    private int nReserved_;
    /// <summary>
    /// 保留字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NReserved {
      get { return nReserved_; }
      set {
        nReserved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgSignInQueryInfoC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgSignInQueryInfoC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NReserved != other.NReserved) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NReserved != 0) hash ^= NReserved.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NReserved != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NReserved);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NReserved != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NReserved);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgSignInQueryInfoC other) {
      if (other == null) {
        return;
      }
      if (other.NReserved != 0) {
        NReserved = other.NReserved;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            NReserved = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：查询当月签到信息请求回复
  /// _MSG_SIGNIN_QUERY_INFO_S
  /// </summary>
  public sealed partial class PMsgSignInQueryInfoS : pb::IMessage<PMsgSignInQueryInfoS> {
    private static readonly pb::MessageParser<PMsgSignInQueryInfoS> _parser = new pb::MessageParser<PMsgSignInQueryInfoS>(() => new PMsgSignInQueryInfoS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgSignInQueryInfoS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgSignInReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSignInQueryInfoS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSignInQueryInfoS(PMsgSignInQueryInfoS other) : this() {
      unSingnInInfo_ = other.unSingnInInfo_;
      unSigninTime_ = other.unSigninTime_;
      unFillInSign_ = other.unFillInSign_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSignInQueryInfoS Clone() {
      return new PMsgSignInQueryInfoS(this);
    }

    /// <summary>Field number for the "unSingnInInfo" field.</summary>
    public const int UnSingnInInfoFieldNumber = 1;
    private uint unSingnInInfo_;
    /// <summary>
    /// 当月签到情况,二进制位表示,第0位表示当月的第1天,
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnSingnInInfo {
      get { return unSingnInInfo_; }
      set {
        unSingnInInfo_ = value;
      }
    }

    /// <summary>Field number for the "unSigninTime" field.</summary>
    public const int UnSigninTimeFieldNumber = 2;
    private uint unSigninTime_;
    /// <summary>
    /// 最近一次签到时间YYMMDD
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnSigninTime {
      get { return unSigninTime_; }
      set {
        unSigninTime_ = value;
      }
    }

    /// <summary>Field number for the "unFillInSign" field.</summary>
    public const int UnFillInSignFieldNumber = 3;
    private uint unFillInSign_;
    /// <summary>
    /// 已使用补签次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnFillInSign {
      get { return unFillInSign_; }
      set {
        unFillInSign_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private uint unErrorCode_;
    /// <summary>
    /// 返回错误码 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgSignInQueryInfoS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgSignInQueryInfoS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnSingnInInfo != other.UnSingnInInfo) return false;
      if (UnSigninTime != other.UnSigninTime) return false;
      if (UnFillInSign != other.UnFillInSign) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnSingnInInfo != 0) hash ^= UnSingnInInfo.GetHashCode();
      if (UnSigninTime != 0) hash ^= UnSigninTime.GetHashCode();
      if (UnFillInSign != 0) hash ^= UnFillInSign.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnSingnInInfo != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnSingnInInfo);
      }
      if (UnSigninTime != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(UnSigninTime);
      }
      if (UnFillInSign != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(UnFillInSign);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteUInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnSingnInInfo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnSingnInInfo);
      }
      if (UnSigninTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnSigninTime);
      }
      if (UnFillInSign != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnFillInSign);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgSignInQueryInfoS other) {
      if (other == null) {
        return;
      }
      if (other.UnSingnInInfo != 0) {
        UnSingnInInfo = other.UnSingnInInfo;
      }
      if (other.UnSigninTime != 0) {
        UnSigninTime = other.UnSigninTime;
      }
      if (other.UnFillInSign != 0) {
        UnFillInSign = other.UnFillInSign;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnSingnInInfo = input.ReadUInt32();
            break;
          }
          case 16: {
            UnSigninTime = input.ReadUInt32();
            break;
          }
          case 24: {
            UnFillInSign = input.ReadUInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：签到请求
  /// _MSG_SIGNIN_SIGNIN_C
  /// </summary>
  public sealed partial class PMsgSignInC : pb::IMessage<PMsgSignInC> {
    private static readonly pb::MessageParser<PMsgSignInC> _parser = new pb::MessageParser<PMsgSignInC>(() => new PMsgSignInC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgSignInC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgSignInReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSignInC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSignInC(PMsgSignInC other) : this() {
      nReserved_ = other.nReserved_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSignInC Clone() {
      return new PMsgSignInC(this);
    }

    /// <summary>Field number for the "nReserved" field.</summary>
    public const int NReservedFieldNumber = 1;
    private int nReserved_;
    /// <summary>
    /// 保留字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NReserved {
      get { return nReserved_; }
      set {
        nReserved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgSignInC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgSignInC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NReserved != other.NReserved) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NReserved != 0) hash ^= NReserved.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NReserved != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NReserved);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NReserved != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NReserved);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgSignInC other) {
      if (other == null) {
        return;
      }
      if (other.NReserved != 0) {
        NReserved = other.NReserved;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            NReserved = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：签到请求回复
  /// _MSG_SIGNIN_SIGNIN_S
  /// </summary>
  public sealed partial class PMsgSignInS : pb::IMessage<PMsgSignInS> {
    private static readonly pb::MessageParser<PMsgSignInS> _parser = new pb::MessageParser<PMsgSignInS>(() => new PMsgSignInS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgSignInS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgSignInReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSignInS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSignInS(PMsgSignInS other) : this() {
      unSingnInInfo_ = other.unSingnInInfo_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSignInS Clone() {
      return new PMsgSignInS(this);
    }

    /// <summary>Field number for the "unSingnInInfo" field.</summary>
    public const int UnSingnInInfoFieldNumber = 1;
    private uint unSingnInInfo_;
    /// <summary>
    /// 签到后的情况
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnSingnInInfo {
      get { return unSingnInInfo_; }
      set {
        unSingnInInfo_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private uint unErrorCode_;
    /// <summary>
    /// 返回错误码 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgSignInS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgSignInS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnSingnInInfo != other.UnSingnInInfo) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnSingnInInfo != 0) hash ^= UnSingnInInfo.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnSingnInInfo != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnSingnInInfo);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteUInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnSingnInInfo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnSingnInInfo);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgSignInS other) {
      if (other == null) {
        return;
      }
      if (other.UnSingnInInfo != 0) {
        UnSingnInInfo = other.UnSingnInInfo;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnSingnInInfo = input.ReadUInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端: 补签到请求
  /// _MSG_SIGNIN_FILL_IN_SIGNIN_C
  /// </summary>
  public sealed partial class PMsgFillInSignInC : pb::IMessage<PMsgFillInSignInC> {
    private static readonly pb::MessageParser<PMsgFillInSignInC> _parser = new pb::MessageParser<PMsgFillInSignInC>(() => new PMsgFillInSignInC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFillInSignInC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgSignInReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFillInSignInC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFillInSignInC(PMsgFillInSignInC other) : this() {
      unYYYYMMDD_ = other.unYYYYMMDD_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFillInSignInC Clone() {
      return new PMsgFillInSignInC(this);
    }

    /// <summary>Field number for the "unYYYYMMDD" field.</summary>
    public const int UnYYYYMMDDFieldNumber = 1;
    private uint unYYYYMMDD_;
    /// <summary>
    /// 需补签的那一天
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnYYYYMMDD {
      get { return unYYYYMMDD_; }
      set {
        unYYYYMMDD_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFillInSignInC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFillInSignInC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnYYYYMMDD != other.UnYYYYMMDD) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnYYYYMMDD != 0) hash ^= UnYYYYMMDD.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnYYYYMMDD != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnYYYYMMDD);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnYYYYMMDD != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnYYYYMMDD);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFillInSignInC other) {
      if (other == null) {
        return;
      }
      if (other.UnYYYYMMDD != 0) {
        UnYYYYMMDD = other.UnYYYYMMDD;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnYYYYMMDD = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：补签到请求回复
  /// _MSG_SIGNIN_FILL_IN_SIGNIN_S
  /// </summary>
  public sealed partial class PMsgFillInSignInS : pb::IMessage<PMsgFillInSignInS> {
    private static readonly pb::MessageParser<PMsgFillInSignInS> _parser = new pb::MessageParser<PMsgFillInSignInS>(() => new PMsgFillInSignInS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFillInSignInS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgSignInReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFillInSignInS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFillInSignInS(PMsgFillInSignInS other) : this() {
      unSingnInInfo_ = other.unSingnInInfo_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFillInSignInS Clone() {
      return new PMsgFillInSignInS(this);
    }

    /// <summary>Field number for the "unSingnInInfo" field.</summary>
    public const int UnSingnInInfoFieldNumber = 1;
    private uint unSingnInInfo_;
    /// <summary>
    /// 签到后的情况
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnSingnInInfo {
      get { return unSingnInInfo_; }
      set {
        unSingnInInfo_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private uint unErrorCode_;
    /// <summary>
    /// 返回错误码 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFillInSignInS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFillInSignInS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnSingnInInfo != other.UnSingnInInfo) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnSingnInInfo != 0) hash ^= UnSingnInInfo.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnSingnInInfo != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnSingnInInfo);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteUInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnSingnInInfo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnSingnInInfo);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFillInSignInS other) {
      if (other == null) {
        return;
      }
      if (other.UnSingnInInfo != 0) {
        UnSingnInInfo = other.UnSingnInInfo;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnSingnInInfo = input.ReadUInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
