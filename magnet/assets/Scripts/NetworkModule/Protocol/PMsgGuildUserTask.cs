// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/PMsgGuildUserTask.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Sw {

  /// <summary>Holder for reflection information generated from protos/PMsgGuildUserTask.proto</summary>
  public static partial class PMsgGuildUserTaskReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/PMsgGuildUserTask.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PMsgGuildUserTaskReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5wcm90b3MvUE1zZ0d1aWxkVXNlclRhc2sucHJvdG8SAnN3IjwKJlBNc2dG",
            "ZXRjaFJld2FyZEd1aWxkVXNlclRhc2tRdWVyeUluZm9DEhIKCnVuUmVzZXJ2",
            "ZWQYASABKAUidAomUE1zZ0ZldGNoUmV3YXJkR3VpbGRVc2VyVGFza1F1ZXJ5",
            "SW5mb1MSEwoLdW5UYXNrQ291bnQYASABKA0SIAoYdW5GZXRjaFJld2FyZEd1",
            "aWxkVGFza0lEGAIgAygNEhMKC3VuRXJyb3JDb2RlGGMgASgNIjEKG1BNc2dH",
            "dWlsZFVzZXJUYXNrUXVlcnlJbmZvQxISCgp1blJlc2VydmVkGAEgASgFIocB",
            "ChFHdWlsZFVzZXJUYXNrSW5mbxIQCgh1blRhc2tJZBgBIAEoDRIXCg91bkd1",
            "aWxkVGFza1R5cGUYAiABKA0SGAoQdW5Db25kVmFsdWVUb3RhbBgDIAEoDRIS",
            "Cgp1bkNvbXBsZXRlGAQgASgNEhkKEXVuQ29uZEZldGNoUmV3YXJkGAUgASgN",
            "InIKG1BNc2dHdWlsZFVzZXJUYXNrUXVlcnlJbmZvUxITCgt1blRhc2tDb3Vu",
            "dBgBIAEoDRIpCgpjVGFza0luZm9zGAIgAygLMhUuc3cuR3VpbGRVc2VyVGFz",
            "a0luZm8SEwoLdW5FcnJvckNvZGUYYyABKA0iMAocUE1zZ0d1aWxkVXNlclRh",
            "c2tGZXRjaEJvbnVzQxIQCgh1blRhc2tJZBgBIAEoDSJFChxQTXNnR3VpbGRV",
            "c2VyVGFza0ZldGNoQm9udXNTEhAKCHVuVGFza0lkGAEgASgNEhMKC3VuRXJy",
            "b3JDb2RlGGMgASgNIjQKIFBNc2dHdWlsZFVzZXJUYXNrQWxsb2NhdGluZ1Rh",
            "c2tDEhAKCHVuVGFza0lkGAEgASgNIpABCiBQTXNnR3VpbGRVc2VyVGFza0Fs",
            "bG9jYXRpbmdUYXNrUxIQCgh1blRhc2tJZBgBIAEoDRIXCg91bkd1aWxkVGFz",
            "a1R5cGUYAiABKA0SGAoQdW5Db25kVmFsdWVUb3RhbBgDIAEoDRISCgp1bkNv",
            "bXBsZXRlGAQgASgNEhMKC3VuRXJyb3JDb2RlGGMgASgNIjEKHVBNc2dHdWls",
            "ZFVzZXJUYXNrU3luQ29tcGxldGVTEhAKCHVuVGFza0lkGAEgASgNYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFetchRewardGuildUserTaskQueryInfoC), global::Sw.PMsgFetchRewardGuildUserTaskQueryInfoC.Parser, new[]{ "UnReserved" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgFetchRewardGuildUserTaskQueryInfoS), global::Sw.PMsgFetchRewardGuildUserTaskQueryInfoS.Parser, new[]{ "UnTaskCount", "UnFetchRewardGuildTaskID", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgGuildUserTaskQueryInfoC), global::Sw.PMsgGuildUserTaskQueryInfoC.Parser, new[]{ "UnReserved" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.GuildUserTaskInfo), global::Sw.GuildUserTaskInfo.Parser, new[]{ "UnTaskId", "UnGuildTaskType", "UnCondValueTotal", "UnComplete", "UnCondFetchReward" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgGuildUserTaskQueryInfoS), global::Sw.PMsgGuildUserTaskQueryInfoS.Parser, new[]{ "UnTaskCount", "CTaskInfos", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgGuildUserTaskFetchBonusC), global::Sw.PMsgGuildUserTaskFetchBonusC.Parser, new[]{ "UnTaskId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgGuildUserTaskFetchBonusS), global::Sw.PMsgGuildUserTaskFetchBonusS.Parser, new[]{ "UnTaskId", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgGuildUserTaskAllocatingTaskC), global::Sw.PMsgGuildUserTaskAllocatingTaskC.Parser, new[]{ "UnTaskId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgGuildUserTaskAllocatingTaskS), global::Sw.PMsgGuildUserTaskAllocatingTaskS.Parser, new[]{ "UnTaskId", "UnGuildTaskType", "UnCondValueTotal", "UnComplete", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgGuildUserTaskSynCompleteS), global::Sw.PMsgGuildUserTaskSynCompleteS.Parser, new[]{ "UnTaskId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 客户端：查询个人已领取奖励的帮会任务信息
  /// _MSG_FETCHREWARD_GUILD_TASK_QUERY_INFO_C
  /// </summary>
  public sealed partial class PMsgFetchRewardGuildUserTaskQueryInfoC : pb::IMessage<PMsgFetchRewardGuildUserTaskQueryInfoC> {
    private static readonly pb::MessageParser<PMsgFetchRewardGuildUserTaskQueryInfoC> _parser = new pb::MessageParser<PMsgFetchRewardGuildUserTaskQueryInfoC>(() => new PMsgFetchRewardGuildUserTaskQueryInfoC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFetchRewardGuildUserTaskQueryInfoC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGuildUserTaskReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFetchRewardGuildUserTaskQueryInfoC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFetchRewardGuildUserTaskQueryInfoC(PMsgFetchRewardGuildUserTaskQueryInfoC other) : this() {
      unReserved_ = other.unReserved_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFetchRewardGuildUserTaskQueryInfoC Clone() {
      return new PMsgFetchRewardGuildUserTaskQueryInfoC(this);
    }

    /// <summary>Field number for the "unReserved" field.</summary>
    public const int UnReservedFieldNumber = 1;
    private int unReserved_;
    /// <summary>
    /// 保留字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnReserved {
      get { return unReserved_; }
      set {
        unReserved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFetchRewardGuildUserTaskQueryInfoC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFetchRewardGuildUserTaskQueryInfoC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnReserved != other.UnReserved) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnReserved != 0) hash ^= UnReserved.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnReserved != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnReserved);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnReserved != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnReserved);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFetchRewardGuildUserTaskQueryInfoC other) {
      if (other == null) {
        return;
      }
      if (other.UnReserved != 0) {
        UnReserved = other.UnReserved;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnReserved = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：查询个人已领取奖励的帮会任务回复
  /// _MSG_FETCHREWARD_GUILD_TASK_QUERY_INFO_S
  /// </summary>
  public sealed partial class PMsgFetchRewardGuildUserTaskQueryInfoS : pb::IMessage<PMsgFetchRewardGuildUserTaskQueryInfoS> {
    private static readonly pb::MessageParser<PMsgFetchRewardGuildUserTaskQueryInfoS> _parser = new pb::MessageParser<PMsgFetchRewardGuildUserTaskQueryInfoS>(() => new PMsgFetchRewardGuildUserTaskQueryInfoS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgFetchRewardGuildUserTaskQueryInfoS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGuildUserTaskReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFetchRewardGuildUserTaskQueryInfoS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFetchRewardGuildUserTaskQueryInfoS(PMsgFetchRewardGuildUserTaskQueryInfoS other) : this() {
      unTaskCount_ = other.unTaskCount_;
      unFetchRewardGuildTaskID_ = other.unFetchRewardGuildTaskID_.Clone();
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgFetchRewardGuildUserTaskQueryInfoS Clone() {
      return new PMsgFetchRewardGuildUserTaskQueryInfoS(this);
    }

    /// <summary>Field number for the "unTaskCount" field.</summary>
    public const int UnTaskCountFieldNumber = 1;
    private uint unTaskCount_;
    /// <summary>
    /// 已领取奖励的帮会任务,任务数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnTaskCount {
      get { return unTaskCount_; }
      set {
        unTaskCount_ = value;
      }
    }

    /// <summary>Field number for the "unFetchRewardGuildTaskID" field.</summary>
    public const int UnFetchRewardGuildTaskIDFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_unFetchRewardGuildTaskID_codec
        = pb::FieldCodec.ForUInt32(18);
    private readonly pbc::RepeatedField<uint> unFetchRewardGuildTaskID_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// 已领取奖励的帮会任务,任务id(帮会任务自增id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> UnFetchRewardGuildTaskID {
      get { return unFetchRewardGuildTaskID_; }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private uint unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgFetchRewardGuildUserTaskQueryInfoS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgFetchRewardGuildUserTaskQueryInfoS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnTaskCount != other.UnTaskCount) return false;
      if(!unFetchRewardGuildTaskID_.Equals(other.unFetchRewardGuildTaskID_)) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnTaskCount != 0) hash ^= UnTaskCount.GetHashCode();
      hash ^= unFetchRewardGuildTaskID_.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnTaskCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnTaskCount);
      }
      unFetchRewardGuildTaskID_.WriteTo(output, _repeated_unFetchRewardGuildTaskID_codec);
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteUInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnTaskCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnTaskCount);
      }
      size += unFetchRewardGuildTaskID_.CalculateSize(_repeated_unFetchRewardGuildTaskID_codec);
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgFetchRewardGuildUserTaskQueryInfoS other) {
      if (other == null) {
        return;
      }
      if (other.UnTaskCount != 0) {
        UnTaskCount = other.UnTaskCount;
      }
      unFetchRewardGuildTaskID_.Add(other.unFetchRewardGuildTaskID_);
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnTaskCount = input.ReadUInt32();
            break;
          }
          case 18:
          case 16: {
            unFetchRewardGuildTaskID_.AddEntriesFrom(input, _repeated_unFetchRewardGuildTaskID_codec);
            break;
          }
          case 792: {
            UnErrorCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：查询帮会个人任务信息
  /// _MSG_GUILD_USER_TASK_QUERY_INFO_C
  /// </summary>
  public sealed partial class PMsgGuildUserTaskQueryInfoC : pb::IMessage<PMsgGuildUserTaskQueryInfoC> {
    private static readonly pb::MessageParser<PMsgGuildUserTaskQueryInfoC> _parser = new pb::MessageParser<PMsgGuildUserTaskQueryInfoC>(() => new PMsgGuildUserTaskQueryInfoC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgGuildUserTaskQueryInfoC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGuildUserTaskReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildUserTaskQueryInfoC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildUserTaskQueryInfoC(PMsgGuildUserTaskQueryInfoC other) : this() {
      unReserved_ = other.unReserved_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildUserTaskQueryInfoC Clone() {
      return new PMsgGuildUserTaskQueryInfoC(this);
    }

    /// <summary>Field number for the "unReserved" field.</summary>
    public const int UnReservedFieldNumber = 1;
    private int unReserved_;
    /// <summary>
    /// 保留字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnReserved {
      get { return unReserved_; }
      set {
        unReserved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgGuildUserTaskQueryInfoC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgGuildUserTaskQueryInfoC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnReserved != other.UnReserved) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnReserved != 0) hash ^= UnReserved.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnReserved != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnReserved);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnReserved != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnReserved);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgGuildUserTaskQueryInfoC other) {
      if (other == null) {
        return;
      }
      if (other.UnReserved != 0) {
        UnReserved = other.UnReserved;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnReserved = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 单个任务信息
  /// </summary>
  public sealed partial class GuildUserTaskInfo : pb::IMessage<GuildUserTaskInfo> {
    private static readonly pb::MessageParser<GuildUserTaskInfo> _parser = new pb::MessageParser<GuildUserTaskInfo>(() => new GuildUserTaskInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GuildUserTaskInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGuildUserTaskReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuildUserTaskInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuildUserTaskInfo(GuildUserTaskInfo other) : this() {
      unTaskId_ = other.unTaskId_;
      unGuildTaskType_ = other.unGuildTaskType_;
      unCondValueTotal_ = other.unCondValueTotal_;
      unComplete_ = other.unComplete_;
      unCondFetchReward_ = other.unCondFetchReward_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuildUserTaskInfo Clone() {
      return new GuildUserTaskInfo(this);
    }

    /// <summary>Field number for the "unTaskId" field.</summary>
    public const int UnTaskIdFieldNumber = 1;
    private uint unTaskId_;
    /// <summary>
    /// 帮会个人任务id(自增id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnTaskId {
      get { return unTaskId_; }
      set {
        unTaskId_ = value;
      }
    }

    /// <summary>Field number for the "unGuildTaskType" field.</summary>
    public const int UnGuildTaskTypeFieldNumber = 2;
    private uint unGuildTaskType_;
    /// <summary>
    /// 帮会任务类型id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnGuildTaskType {
      get { return unGuildTaskType_; }
      set {
        unGuildTaskType_ = value;
      }
    }

    /// <summary>Field number for the "unCondValueTotal" field.</summary>
    public const int UnCondValueTotalFieldNumber = 3;
    private uint unCondValueTotal_;
    /// <summary>
    /// 帮会个人任务完成累积值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnCondValueTotal {
      get { return unCondValueTotal_; }
      set {
        unCondValueTotal_ = value;
      }
    }

    /// <summary>Field number for the "unComplete" field.</summary>
    public const int UnCompleteFieldNumber = 4;
    private uint unComplete_;
    /// <summary>
    /// 帮会个人任务是否完成	0未完成,1完成
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnComplete {
      get { return unComplete_; }
      set {
        unComplete_ = value;
      }
    }

    /// <summary>Field number for the "unCondFetchReward" field.</summary>
    public const int UnCondFetchRewardFieldNumber = 5;
    private uint unCondFetchReward_;
    /// <summary>
    /// 帮会个人任务奖励是否已领取任务奖励,0未领取,1已领取
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnCondFetchReward {
      get { return unCondFetchReward_; }
      set {
        unCondFetchReward_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GuildUserTaskInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GuildUserTaskInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnTaskId != other.UnTaskId) return false;
      if (UnGuildTaskType != other.UnGuildTaskType) return false;
      if (UnCondValueTotal != other.UnCondValueTotal) return false;
      if (UnComplete != other.UnComplete) return false;
      if (UnCondFetchReward != other.UnCondFetchReward) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnTaskId != 0) hash ^= UnTaskId.GetHashCode();
      if (UnGuildTaskType != 0) hash ^= UnGuildTaskType.GetHashCode();
      if (UnCondValueTotal != 0) hash ^= UnCondValueTotal.GetHashCode();
      if (UnComplete != 0) hash ^= UnComplete.GetHashCode();
      if (UnCondFetchReward != 0) hash ^= UnCondFetchReward.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnTaskId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnTaskId);
      }
      if (UnGuildTaskType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(UnGuildTaskType);
      }
      if (UnCondValueTotal != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(UnCondValueTotal);
      }
      if (UnComplete != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(UnComplete);
      }
      if (UnCondFetchReward != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(UnCondFetchReward);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnTaskId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnTaskId);
      }
      if (UnGuildTaskType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnGuildTaskType);
      }
      if (UnCondValueTotal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnCondValueTotal);
      }
      if (UnComplete != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnComplete);
      }
      if (UnCondFetchReward != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnCondFetchReward);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GuildUserTaskInfo other) {
      if (other == null) {
        return;
      }
      if (other.UnTaskId != 0) {
        UnTaskId = other.UnTaskId;
      }
      if (other.UnGuildTaskType != 0) {
        UnGuildTaskType = other.UnGuildTaskType;
      }
      if (other.UnCondValueTotal != 0) {
        UnCondValueTotal = other.UnCondValueTotal;
      }
      if (other.UnComplete != 0) {
        UnComplete = other.UnComplete;
      }
      if (other.UnCondFetchReward != 0) {
        UnCondFetchReward = other.UnCondFetchReward;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnTaskId = input.ReadUInt32();
            break;
          }
          case 16: {
            UnGuildTaskType = input.ReadUInt32();
            break;
          }
          case 24: {
            UnCondValueTotal = input.ReadUInt32();
            break;
          }
          case 32: {
            UnComplete = input.ReadUInt32();
            break;
          }
          case 40: {
            UnCondFetchReward = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：查询帮会个人任务信息回复
  /// _MSG_GUILD_USER_TASK_QUERY_INFO_S
  /// </summary>
  public sealed partial class PMsgGuildUserTaskQueryInfoS : pb::IMessage<PMsgGuildUserTaskQueryInfoS> {
    private static readonly pb::MessageParser<PMsgGuildUserTaskQueryInfoS> _parser = new pb::MessageParser<PMsgGuildUserTaskQueryInfoS>(() => new PMsgGuildUserTaskQueryInfoS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgGuildUserTaskQueryInfoS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGuildUserTaskReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildUserTaskQueryInfoS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildUserTaskQueryInfoS(PMsgGuildUserTaskQueryInfoS other) : this() {
      unTaskCount_ = other.unTaskCount_;
      cTaskInfos_ = other.cTaskInfos_.Clone();
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildUserTaskQueryInfoS Clone() {
      return new PMsgGuildUserTaskQueryInfoS(this);
    }

    /// <summary>Field number for the "unTaskCount" field.</summary>
    public const int UnTaskCountFieldNumber = 1;
    private uint unTaskCount_;
    /// <summary>
    /// 帮会个人任务数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnTaskCount {
      get { return unTaskCount_; }
      set {
        unTaskCount_ = value;
      }
    }

    /// <summary>Field number for the "cTaskInfos" field.</summary>
    public const int CTaskInfosFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Sw.GuildUserTaskInfo> _repeated_cTaskInfos_codec
        = pb::FieldCodec.ForMessage(18, global::Sw.GuildUserTaskInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.GuildUserTaskInfo> cTaskInfos_ = new pbc::RepeatedField<global::Sw.GuildUserTaskInfo>();
    /// <summary>
    /// 所有帮会个人任务信息	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.GuildUserTaskInfo> CTaskInfos {
      get { return cTaskInfos_; }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private uint unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgGuildUserTaskQueryInfoS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgGuildUserTaskQueryInfoS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnTaskCount != other.UnTaskCount) return false;
      if(!cTaskInfos_.Equals(other.cTaskInfos_)) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnTaskCount != 0) hash ^= UnTaskCount.GetHashCode();
      hash ^= cTaskInfos_.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnTaskCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnTaskCount);
      }
      cTaskInfos_.WriteTo(output, _repeated_cTaskInfos_codec);
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteUInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnTaskCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnTaskCount);
      }
      size += cTaskInfos_.CalculateSize(_repeated_cTaskInfos_codec);
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgGuildUserTaskQueryInfoS other) {
      if (other == null) {
        return;
      }
      if (other.UnTaskCount != 0) {
        UnTaskCount = other.UnTaskCount;
      }
      cTaskInfos_.Add(other.cTaskInfos_);
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnTaskCount = input.ReadUInt32();
            break;
          }
          case 18: {
            cTaskInfos_.AddEntriesFrom(input, _repeated_cTaskInfos_codec);
            break;
          }
          case 792: {
            UnErrorCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：领取帮会个人任务奖励请求
  /// _MSG_GUILD_USER_TASK_FETCH_BONUS_C
  /// </summary>
  public sealed partial class PMsgGuildUserTaskFetchBonusC : pb::IMessage<PMsgGuildUserTaskFetchBonusC> {
    private static readonly pb::MessageParser<PMsgGuildUserTaskFetchBonusC> _parser = new pb::MessageParser<PMsgGuildUserTaskFetchBonusC>(() => new PMsgGuildUserTaskFetchBonusC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgGuildUserTaskFetchBonusC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGuildUserTaskReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildUserTaskFetchBonusC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildUserTaskFetchBonusC(PMsgGuildUserTaskFetchBonusC other) : this() {
      unTaskId_ = other.unTaskId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildUserTaskFetchBonusC Clone() {
      return new PMsgGuildUserTaskFetchBonusC(this);
    }

    /// <summary>Field number for the "unTaskId" field.</summary>
    public const int UnTaskIdFieldNumber = 1;
    private uint unTaskId_;
    /// <summary>
    /// 帮会个人任务id(自增id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnTaskId {
      get { return unTaskId_; }
      set {
        unTaskId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgGuildUserTaskFetchBonusC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgGuildUserTaskFetchBonusC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnTaskId != other.UnTaskId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnTaskId != 0) hash ^= UnTaskId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnTaskId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnTaskId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnTaskId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnTaskId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgGuildUserTaskFetchBonusC other) {
      if (other == null) {
        return;
      }
      if (other.UnTaskId != 0) {
        UnTaskId = other.UnTaskId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnTaskId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：领取帮会个人任务奖励回复
  /// _MSG_GUILD_USER_TASK_FETCH_BONUS_S
  /// </summary>
  public sealed partial class PMsgGuildUserTaskFetchBonusS : pb::IMessage<PMsgGuildUserTaskFetchBonusS> {
    private static readonly pb::MessageParser<PMsgGuildUserTaskFetchBonusS> _parser = new pb::MessageParser<PMsgGuildUserTaskFetchBonusS>(() => new PMsgGuildUserTaskFetchBonusS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgGuildUserTaskFetchBonusS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGuildUserTaskReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildUserTaskFetchBonusS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildUserTaskFetchBonusS(PMsgGuildUserTaskFetchBonusS other) : this() {
      unTaskId_ = other.unTaskId_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildUserTaskFetchBonusS Clone() {
      return new PMsgGuildUserTaskFetchBonusS(this);
    }

    /// <summary>Field number for the "unTaskId" field.</summary>
    public const int UnTaskIdFieldNumber = 1;
    private uint unTaskId_;
    /// <summary>
    /// 帮会个人任务id(自增id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnTaskId {
      get { return unTaskId_; }
      set {
        unTaskId_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private uint unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgGuildUserTaskFetchBonusS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgGuildUserTaskFetchBonusS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnTaskId != other.UnTaskId) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnTaskId != 0) hash ^= UnTaskId.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnTaskId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnTaskId);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteUInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnTaskId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnTaskId);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgGuildUserTaskFetchBonusS other) {
      if (other == null) {
        return;
      }
      if (other.UnTaskId != 0) {
        UnTaskId = other.UnTaskId;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnTaskId = input.ReadUInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端: 分配帮会个人任务请求
  /// _MSG_GUILD_USER_TASK_ALLOCATINGTASK_C
  /// </summary>
  public sealed partial class PMsgGuildUserTaskAllocatingTaskC : pb::IMessage<PMsgGuildUserTaskAllocatingTaskC> {
    private static readonly pb::MessageParser<PMsgGuildUserTaskAllocatingTaskC> _parser = new pb::MessageParser<PMsgGuildUserTaskAllocatingTaskC>(() => new PMsgGuildUserTaskAllocatingTaskC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgGuildUserTaskAllocatingTaskC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGuildUserTaskReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildUserTaskAllocatingTaskC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildUserTaskAllocatingTaskC(PMsgGuildUserTaskAllocatingTaskC other) : this() {
      unTaskId_ = other.unTaskId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildUserTaskAllocatingTaskC Clone() {
      return new PMsgGuildUserTaskAllocatingTaskC(this);
    }

    /// <summary>Field number for the "unTaskId" field.</summary>
    public const int UnTaskIdFieldNumber = 1;
    private uint unTaskId_;
    /// <summary>
    /// 帮会个人任务id(被替换的任务)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnTaskId {
      get { return unTaskId_; }
      set {
        unTaskId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgGuildUserTaskAllocatingTaskC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgGuildUserTaskAllocatingTaskC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnTaskId != other.UnTaskId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnTaskId != 0) hash ^= UnTaskId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnTaskId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnTaskId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnTaskId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnTaskId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgGuildUserTaskAllocatingTaskC other) {
      if (other == null) {
        return;
      }
      if (other.UnTaskId != 0) {
        UnTaskId = other.UnTaskId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnTaskId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：分配帮会个人任务请求回复
  /// _MSG_GUILD_USER_TASK_ALLOCATINGTASK_S
  /// </summary>
  public sealed partial class PMsgGuildUserTaskAllocatingTaskS : pb::IMessage<PMsgGuildUserTaskAllocatingTaskS> {
    private static readonly pb::MessageParser<PMsgGuildUserTaskAllocatingTaskS> _parser = new pb::MessageParser<PMsgGuildUserTaskAllocatingTaskS>(() => new PMsgGuildUserTaskAllocatingTaskS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgGuildUserTaskAllocatingTaskS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGuildUserTaskReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildUserTaskAllocatingTaskS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildUserTaskAllocatingTaskS(PMsgGuildUserTaskAllocatingTaskS other) : this() {
      unTaskId_ = other.unTaskId_;
      unGuildTaskType_ = other.unGuildTaskType_;
      unCondValueTotal_ = other.unCondValueTotal_;
      unComplete_ = other.unComplete_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildUserTaskAllocatingTaskS Clone() {
      return new PMsgGuildUserTaskAllocatingTaskS(this);
    }

    /// <summary>Field number for the "unTaskId" field.</summary>
    public const int UnTaskIdFieldNumber = 1;
    private uint unTaskId_;
    /// <summary>
    /// 帮会个人任务id(自增id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnTaskId {
      get { return unTaskId_; }
      set {
        unTaskId_ = value;
      }
    }

    /// <summary>Field number for the "unGuildTaskType" field.</summary>
    public const int UnGuildTaskTypeFieldNumber = 2;
    private uint unGuildTaskType_;
    /// <summary>
    /// 帮会任务类型id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnGuildTaskType {
      get { return unGuildTaskType_; }
      set {
        unGuildTaskType_ = value;
      }
    }

    /// <summary>Field number for the "unCondValueTotal" field.</summary>
    public const int UnCondValueTotalFieldNumber = 3;
    private uint unCondValueTotal_;
    /// <summary>
    /// 帮会个人任务完成累积值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnCondValueTotal {
      get { return unCondValueTotal_; }
      set {
        unCondValueTotal_ = value;
      }
    }

    /// <summary>Field number for the "unComplete" field.</summary>
    public const int UnCompleteFieldNumber = 4;
    private uint unComplete_;
    /// <summary>
    /// 帮会个人任务是否完成	0未完成,1完成
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnComplete {
      get { return unComplete_; }
      set {
        unComplete_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private uint unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgGuildUserTaskAllocatingTaskS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgGuildUserTaskAllocatingTaskS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnTaskId != other.UnTaskId) return false;
      if (UnGuildTaskType != other.UnGuildTaskType) return false;
      if (UnCondValueTotal != other.UnCondValueTotal) return false;
      if (UnComplete != other.UnComplete) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnTaskId != 0) hash ^= UnTaskId.GetHashCode();
      if (UnGuildTaskType != 0) hash ^= UnGuildTaskType.GetHashCode();
      if (UnCondValueTotal != 0) hash ^= UnCondValueTotal.GetHashCode();
      if (UnComplete != 0) hash ^= UnComplete.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnTaskId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnTaskId);
      }
      if (UnGuildTaskType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(UnGuildTaskType);
      }
      if (UnCondValueTotal != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(UnCondValueTotal);
      }
      if (UnComplete != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(UnComplete);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteUInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnTaskId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnTaskId);
      }
      if (UnGuildTaskType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnGuildTaskType);
      }
      if (UnCondValueTotal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnCondValueTotal);
      }
      if (UnComplete != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnComplete);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgGuildUserTaskAllocatingTaskS other) {
      if (other == null) {
        return;
      }
      if (other.UnTaskId != 0) {
        UnTaskId = other.UnTaskId;
      }
      if (other.UnGuildTaskType != 0) {
        UnGuildTaskType = other.UnGuildTaskType;
      }
      if (other.UnCondValueTotal != 0) {
        UnCondValueTotal = other.UnCondValueTotal;
      }
      if (other.UnComplete != 0) {
        UnComplete = other.UnComplete;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnTaskId = input.ReadUInt32();
            break;
          }
          case 16: {
            UnGuildTaskType = input.ReadUInt32();
            break;
          }
          case 24: {
            UnCondValueTotal = input.ReadUInt32();
            break;
          }
          case 32: {
            UnComplete = input.ReadUInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：通知客户端帮会个人任务完成
  /// _MSG_GUILD_USER_TASK_SYN_COMPLETE_S
  /// </summary>
  public sealed partial class PMsgGuildUserTaskSynCompleteS : pb::IMessage<PMsgGuildUserTaskSynCompleteS> {
    private static readonly pb::MessageParser<PMsgGuildUserTaskSynCompleteS> _parser = new pb::MessageParser<PMsgGuildUserTaskSynCompleteS>(() => new PMsgGuildUserTaskSynCompleteS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgGuildUserTaskSynCompleteS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGuildUserTaskReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildUserTaskSynCompleteS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildUserTaskSynCompleteS(PMsgGuildUserTaskSynCompleteS other) : this() {
      unTaskId_ = other.unTaskId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildUserTaskSynCompleteS Clone() {
      return new PMsgGuildUserTaskSynCompleteS(this);
    }

    /// <summary>Field number for the "unTaskId" field.</summary>
    public const int UnTaskIdFieldNumber = 1;
    private uint unTaskId_;
    /// <summary>
    /// 帮会任务id(自增id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnTaskId {
      get { return unTaskId_; }
      set {
        unTaskId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgGuildUserTaskSynCompleteS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgGuildUserTaskSynCompleteS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnTaskId != other.UnTaskId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnTaskId != 0) hash ^= UnTaskId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnTaskId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnTaskId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnTaskId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnTaskId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgGuildUserTaskSynCompleteS other) {
      if (other == null) {
        return;
      }
      if (other.UnTaskId != 0) {
        UnTaskId = other.UnTaskId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnTaskId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
