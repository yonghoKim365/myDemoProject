// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/PMsgStage.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Sw {

  /// <summary>Holder for reflection information generated from protos/PMsgStage.proto</summary>
  public static partial class PMsgStageReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/PMsgStage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PMsgStageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZwcm90b3MvUE1zZ1N0YWdlLnByb3RvEgJzdyImCg9QTXNnU3RhZ2VRdWVy",
            "eUMSEwoLdW5TdGFnZVR5cGUYASABKAUihgEKCVN0YWdlSW5mbxIRCgl1blN0",
            "YWdlSWQYASABKAUSEgoKdW5Db21wbGV0ZRgCIAEoBRIOCgZ1blN0YXIYAyAD",
            "KAUSFwoPdW5EYWlseUNvbXBsZXRlGAQgASgFEhQKDHVuRGFpbHlSZXNldBgF",
            "IAEoBRITCgt1bkRhaWx5VGltZRgGIAEoBSJVCg9QTXNnU3RhZ2VRdWVyeVMS",
            "EwoLdW5TdGFnZVR5cGUYASABKAUSDwoHdW5Db3VudBgCIAEoBRIcCgVjSW5m",
            "bxgDIAMoCzINLnN3LlN0YWdlSW5mbyI2Cg9QTXNnU3RhZ2VTdGFydEMSEQoJ",
            "dW5TdGFnZUlkGAEgASgFEhAKCHVuSGVyb0lkGAIgAygFIj8KCERyb3BJdGVt",
            "Eg4KBnVuVHlwZRgBIAEoBRIQCgh1bkl0ZW1JZBgCIAEoBRIRCgl1bkl0ZW1O",
            "dW0YAyABKAUiRwoJU3RhZ2VEcm9wEg0KBXVuRXhwGAEgASgFEg4KBnVuQ29p",
            "bhgCIAEoBRIbCgVjSW5mbxgDIAMoCzIMLnN3LkRyb3BJdGVtIm0KD1BNc2dT",
            "dGFnZVN0YXJ0UxIRCgl1blN0YWdlSWQYASABKAUSIAoJY0Jvc3NEcm9wGAIg",
            "AygLMg0uc3cuU3RhZ2VEcm9wEhAKCHVuSGVyb0lkGAQgAygFEhMKC3VuRXJy",
            "b3JDb2RlGGMgASgFIm8KElBNc2dTdGFnZUNvbXBsZXRlQxIRCgl1blN0YWdl",
            "SWQYASABKAUSEQoJdW5WaWN0b3J5GAIgASgFEg4KBnVuU3RhchgDIAMoBRIQ",
            "Cgh1bkRpZU51bRgEIAEoDRIRCgl1bktpbGxOdW0YBSABKA0iXwoSUE1zZ1N0",
            "YWdlQ29tcGxldGVTEhEKCXVuU3RhZ2VJZBgBIAEoBRIRCgl1blZpY3RvcnkY",
            "AiABKAUSDgoGdW5TdGFyGAMgAygFEhMKC3VuRXJyb3JDb2RlGGMgASgFIjUK",
            "D1BNc2dTdGFnZVN3ZWVwQxIRCgl1blN0YWdlSWQYASABKAUSDwoHdW5UaW1l",
            "cxgCIAEoBSJKCg9QTXNnU3RhZ2VTd2VlcFMSEQoJdW5TdGFnZUlkGAEgASgF",
            "Eg8KB3VuVGltZXMYAiABKAUSEwoLdW5FcnJvckNvZGUYYyABKAUiXQoVUE1z",
            "Z1N0YWdlU3dlZXBSZXN1bHRTEhEKCXVuU3RhZ2VJZBgBIAEoBRIPCgd1blRp",
            "bWVzGAIgASgFEiAKCWNCb3NzRHJvcBgDIAMoCzINLnN3LlN0YWdlRHJvcCIk",
            "Cg9QTXNnU3RhZ2VSZXNldEMSEQoJdW5TdGFnZUlkGAEgASgFIk8KD1BNc2dT",
            "dGFnZVJlc2V0UxIRCgl1blN0YWdlSWQYASABKAUSFAoMdW5SZXNldFRpbWVz",
            "GAIgASgFEhMKC3VuRXJyb3JDb2RlGGMgASgFIi0KFlBNc2dTdGFnZUNoYXB0",
            "ZXJRdWVyeUMSEwoLdW5TdGFnZVR5cGUYASABKAUiugEKFlBNc2dTdGFnZUNo",
            "YXB0ZXJRdWVyeVMSDwoHdW5Db3VudBgBIAEoBRI1CgVjSW5mbxgCIAMoCzIm",
            "LnN3LlBNc2dTdGFnZUNoYXB0ZXJRdWVyeVMuQ2hhcHRlckluZm8SEwoLdW5T",
            "dGFnZVR5cGUYAyABKAUaQwoLQ2hhcHRlckluZm8SEwoLdW5DaGFwdGVySWQY",
            "ASABKAUSDwoHdW5Cb3hJZBgCIAEoBRIOCgZ1blN0YXIYAyABKAUiVAoXUE1z",
            "Z1N0YWdlQ2hhcHRlclJld2FyZEMSEwoLdW5DaGFwdGVySWQYASABKAUSDwoH",
            "dW5Cb3hJZBgCIAEoBRITCgt1blN0YWdlVHlwZRgDIAEoBSLbAQoXUE1zZ1N0",
            "YWdlQ2hhcHRlclJld2FyZFMSEwoLdW5DaGFwdGVySWQYASABKAUSDwoHdW5C",
            "b3hJZBgCIAEoBRIzCgVjSW5mbxgDIAMoCzIkLnN3LlBNc2dTdGFnZUNoYXB0",
            "ZXJSZXdhcmRTLkl0ZW1JbmZvEhMKC3VuU3RhZ2VUeXBlGAQgASgFEhMKC3Vu",
            "RXJyb3JDb2RlGGMgASgFGjsKCEl0ZW1JbmZvEg4KBnVuVHlwZRgBIAEoBRIQ",
            "Cgh1bkl0ZW1JZBgCIAEoBRINCgV1bk51bRgDIAEoBWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgStageQueryC), global::Sw.PMsgStageQueryC.Parser, new[]{ "UnStageType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.StageInfo), global::Sw.StageInfo.Parser, new[]{ "UnStageId", "UnComplete", "UnStar", "UnDailyComplete", "UnDailyReset", "UnDailyTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgStageQueryS), global::Sw.PMsgStageQueryS.Parser, new[]{ "UnStageType", "UnCount", "CInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgStageStartC), global::Sw.PMsgStageStartC.Parser, new[]{ "UnStageId", "UnHeroId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.DropItem), global::Sw.DropItem.Parser, new[]{ "UnType", "UnItemId", "UnItemNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.StageDrop), global::Sw.StageDrop.Parser, new[]{ "UnExp", "UnCoin", "CInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgStageStartS), global::Sw.PMsgStageStartS.Parser, new[]{ "UnStageId", "CBossDrop", "UnHeroId", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgStageCompleteC), global::Sw.PMsgStageCompleteC.Parser, new[]{ "UnStageId", "UnVictory", "UnStar", "UnDieNum", "UnKillNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgStageCompleteS), global::Sw.PMsgStageCompleteS.Parser, new[]{ "UnStageId", "UnVictory", "UnStar", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgStageSweepC), global::Sw.PMsgStageSweepC.Parser, new[]{ "UnStageId", "UnTimes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgStageSweepS), global::Sw.PMsgStageSweepS.Parser, new[]{ "UnStageId", "UnTimes", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgStageSweepResultS), global::Sw.PMsgStageSweepResultS.Parser, new[]{ "UnStageId", "UnTimes", "CBossDrop" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgStageResetC), global::Sw.PMsgStageResetC.Parser, new[]{ "UnStageId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgStageResetS), global::Sw.PMsgStageResetS.Parser, new[]{ "UnStageId", "UnResetTimes", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgStageChapterQueryC), global::Sw.PMsgStageChapterQueryC.Parser, new[]{ "UnStageType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgStageChapterQueryS), global::Sw.PMsgStageChapterQueryS.Parser, new[]{ "UnCount", "CInfo", "UnStageType" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgStageChapterQueryS.Types.ChapterInfo), global::Sw.PMsgStageChapterQueryS.Types.ChapterInfo.Parser, new[]{ "UnChapterId", "UnBoxId", "UnStar" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgStageChapterRewardC), global::Sw.PMsgStageChapterRewardC.Parser, new[]{ "UnChapterId", "UnBoxId", "UnStageType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgStageChapterRewardS), global::Sw.PMsgStageChapterRewardS.Parser, new[]{ "UnChapterId", "UnBoxId", "CInfo", "UnStageType", "UnErrorCode" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgStageChapterRewardS.Types.ItemInfo), global::Sw.PMsgStageChapterRewardS.Types.ItemInfo.Parser, new[]{ "UnType", "UnItemId", "UnNum" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 客户端：查询副本信息
  /// _MSG_STAGE_QUERY_C
  /// </summary>
  public sealed partial class PMsgStageQueryC : pb::IMessage<PMsgStageQueryC> {
    private static readonly pb::MessageParser<PMsgStageQueryC> _parser = new pb::MessageParser<PMsgStageQueryC>(() => new PMsgStageQueryC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgStageQueryC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgStageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageQueryC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageQueryC(PMsgStageQueryC other) : this() {
      unStageType_ = other.unStageType_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageQueryC Clone() {
      return new PMsgStageQueryC(this);
    }

    /// <summary>Field number for the "unStageType" field.</summary>
    public const int UnStageTypeFieldNumber = 1;
    private int unStageType_;
    /// <summary>
    /// 副本类型(sw::STAGE_TYPE)：1-普通副本，2-精英副本
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnStageType {
      get { return unStageType_; }
      set {
        unStageType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgStageQueryC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgStageQueryC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnStageType != other.UnStageType) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnStageType != 0) hash ^= UnStageType.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnStageType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnStageType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnStageType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnStageType);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgStageQueryC other) {
      if (other == null) {
        return;
      }
      if (other.UnStageType != 0) {
        UnStageType = other.UnStageType;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnStageType = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 副本基本信息
  /// </summary>
  public sealed partial class StageInfo : pb::IMessage<StageInfo> {
    private static readonly pb::MessageParser<StageInfo> _parser = new pb::MessageParser<StageInfo>(() => new StageInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StageInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgStageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StageInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StageInfo(StageInfo other) : this() {
      unStageId_ = other.unStageId_;
      unComplete_ = other.unComplete_;
      unStar_ = other.unStar_.Clone();
      unDailyComplete_ = other.unDailyComplete_;
      unDailyReset_ = other.unDailyReset_;
      unDailyTime_ = other.unDailyTime_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StageInfo Clone() {
      return new StageInfo(this);
    }

    /// <summary>Field number for the "unStageId" field.</summary>
    public const int UnStageIdFieldNumber = 1;
    private int unStageId_;
    /// <summary>
    /// 副本id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnStageId {
      get { return unStageId_; }
      set {
        unStageId_ = value;
      }
    }

    /// <summary>Field number for the "unComplete" field.</summary>
    public const int UnCompleteFieldNumber = 2;
    private int unComplete_;
    /// <summary>
    /// 完成标志
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnComplete {
      get { return unComplete_; }
      set {
        unComplete_ = value;
      }
    }

    /// <summary>Field number for the "unStar" field.</summary>
    public const int UnStarFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_unStar_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> unStar_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 评星（3个）：0-无星，1-评星
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> UnStar {
      get { return unStar_; }
    }

    /// <summary>Field number for the "unDailyComplete" field.</summary>
    public const int UnDailyCompleteFieldNumber = 4;
    private int unDailyComplete_;
    /// <summary>
    /// 当日完成次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnDailyComplete {
      get { return unDailyComplete_; }
      set {
        unDailyComplete_ = value;
      }
    }

    /// <summary>Field number for the "unDailyReset" field.</summary>
    public const int UnDailyResetFieldNumber = 5;
    private int unDailyReset_;
    /// <summary>
    /// 当日重置次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnDailyReset {
      get { return unDailyReset_; }
      set {
        unDailyReset_ = value;
      }
    }

    /// <summary>Field number for the "unDailyTime" field.</summary>
    public const int UnDailyTimeFieldNumber = 6;
    private int unDailyTime_;
    /// <summary>
    /// 当日可用总次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnDailyTime {
      get { return unDailyTime_; }
      set {
        unDailyTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StageInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StageInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnStageId != other.UnStageId) return false;
      if (UnComplete != other.UnComplete) return false;
      if(!unStar_.Equals(other.unStar_)) return false;
      if (UnDailyComplete != other.UnDailyComplete) return false;
      if (UnDailyReset != other.UnDailyReset) return false;
      if (UnDailyTime != other.UnDailyTime) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnStageId != 0) hash ^= UnStageId.GetHashCode();
      if (UnComplete != 0) hash ^= UnComplete.GetHashCode();
      hash ^= unStar_.GetHashCode();
      if (UnDailyComplete != 0) hash ^= UnDailyComplete.GetHashCode();
      if (UnDailyReset != 0) hash ^= UnDailyReset.GetHashCode();
      if (UnDailyTime != 0) hash ^= UnDailyTime.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnStageId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnStageId);
      }
      if (UnComplete != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnComplete);
      }
      unStar_.WriteTo(output, _repeated_unStar_codec);
      if (UnDailyComplete != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UnDailyComplete);
      }
      if (UnDailyReset != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(UnDailyReset);
      }
      if (UnDailyTime != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(UnDailyTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnStageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnStageId);
      }
      if (UnComplete != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnComplete);
      }
      size += unStar_.CalculateSize(_repeated_unStar_codec);
      if (UnDailyComplete != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnDailyComplete);
      }
      if (UnDailyReset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnDailyReset);
      }
      if (UnDailyTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnDailyTime);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StageInfo other) {
      if (other == null) {
        return;
      }
      if (other.UnStageId != 0) {
        UnStageId = other.UnStageId;
      }
      if (other.UnComplete != 0) {
        UnComplete = other.UnComplete;
      }
      unStar_.Add(other.unStar_);
      if (other.UnDailyComplete != 0) {
        UnDailyComplete = other.UnDailyComplete;
      }
      if (other.UnDailyReset != 0) {
        UnDailyReset = other.UnDailyReset;
      }
      if (other.UnDailyTime != 0) {
        UnDailyTime = other.UnDailyTime;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnStageId = input.ReadInt32();
            break;
          }
          case 16: {
            UnComplete = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            unStar_.AddEntriesFrom(input, _repeated_unStar_codec);
            break;
          }
          case 32: {
            UnDailyComplete = input.ReadInt32();
            break;
          }
          case 40: {
            UnDailyReset = input.ReadInt32();
            break;
          }
          case 48: {
            UnDailyTime = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：查询副本信息回复
  /// _MSG_STAGE_QUERY_S
  /// </summary>
  public sealed partial class PMsgStageQueryS : pb::IMessage<PMsgStageQueryS> {
    private static readonly pb::MessageParser<PMsgStageQueryS> _parser = new pb::MessageParser<PMsgStageQueryS>(() => new PMsgStageQueryS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgStageQueryS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgStageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageQueryS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageQueryS(PMsgStageQueryS other) : this() {
      unStageType_ = other.unStageType_;
      unCount_ = other.unCount_;
      cInfo_ = other.cInfo_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageQueryS Clone() {
      return new PMsgStageQueryS(this);
    }

    /// <summary>Field number for the "unStageType" field.</summary>
    public const int UnStageTypeFieldNumber = 1;
    private int unStageType_;
    /// <summary>
    /// 副本类型(sw::STAGE_TYPE)：1-普通副本，2-精英副本
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnStageType {
      get { return unStageType_; }
      set {
        unStageType_ = value;
      }
    }

    /// <summary>Field number for the "unCount" field.</summary>
    public const int UnCountFieldNumber = 2;
    private int unCount_;
    /// <summary>
    /// 副本数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnCount {
      get { return unCount_; }
      set {
        unCount_ = value;
      }
    }

    /// <summary>Field number for the "cInfo" field.</summary>
    public const int CInfoFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Sw.StageInfo> _repeated_cInfo_codec
        = pb::FieldCodec.ForMessage(26, global::Sw.StageInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.StageInfo> cInfo_ = new pbc::RepeatedField<global::Sw.StageInfo>();
    /// <summary>
    /// 副本信息列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.StageInfo> CInfo {
      get { return cInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgStageQueryS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgStageQueryS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnStageType != other.UnStageType) return false;
      if (UnCount != other.UnCount) return false;
      if(!cInfo_.Equals(other.cInfo_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnStageType != 0) hash ^= UnStageType.GetHashCode();
      if (UnCount != 0) hash ^= UnCount.GetHashCode();
      hash ^= cInfo_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnStageType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnStageType);
      }
      if (UnCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnCount);
      }
      cInfo_.WriteTo(output, _repeated_cInfo_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnStageType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnStageType);
      }
      if (UnCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnCount);
      }
      size += cInfo_.CalculateSize(_repeated_cInfo_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgStageQueryS other) {
      if (other == null) {
        return;
      }
      if (other.UnStageType != 0) {
        UnStageType = other.UnStageType;
      }
      if (other.UnCount != 0) {
        UnCount = other.UnCount;
      }
      cInfo_.Add(other.cInfo_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnStageType = input.ReadInt32();
            break;
          }
          case 16: {
            UnCount = input.ReadInt32();
            break;
          }
          case 26: {
            cInfo_.AddEntriesFrom(input, _repeated_cInfo_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：开始副本
  /// _MSG_STAGE_START_C
  /// </summary>
  public sealed partial class PMsgStageStartC : pb::IMessage<PMsgStageStartC> {
    private static readonly pb::MessageParser<PMsgStageStartC> _parser = new pb::MessageParser<PMsgStageStartC>(() => new PMsgStageStartC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgStageStartC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgStageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageStartC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageStartC(PMsgStageStartC other) : this() {
      unStageId_ = other.unStageId_;
      unHeroId_ = other.unHeroId_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageStartC Clone() {
      return new PMsgStageStartC(this);
    }

    /// <summary>Field number for the "unStageId" field.</summary>
    public const int UnStageIdFieldNumber = 1;
    private int unStageId_;
    /// <summary>
    /// 副本id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnStageId {
      get { return unStageId_; }
      set {
        unStageId_ = value;
      }
    }

    /// <summary>Field number for the "unHeroId" field.</summary>
    public const int UnHeroIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_unHeroId_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> unHeroId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 出战伙伴id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> UnHeroId {
      get { return unHeroId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgStageStartC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgStageStartC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnStageId != other.UnStageId) return false;
      if(!unHeroId_.Equals(other.unHeroId_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnStageId != 0) hash ^= UnStageId.GetHashCode();
      hash ^= unHeroId_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnStageId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnStageId);
      }
      unHeroId_.WriteTo(output, _repeated_unHeroId_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnStageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnStageId);
      }
      size += unHeroId_.CalculateSize(_repeated_unHeroId_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgStageStartC other) {
      if (other == null) {
        return;
      }
      if (other.UnStageId != 0) {
        UnStageId = other.UnStageId;
      }
      unHeroId_.Add(other.unHeroId_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnStageId = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            unHeroId_.AddEntriesFrom(input, _repeated_unHeroId_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 掉落物品
  /// </summary>
  public sealed partial class DropItem : pb::IMessage<DropItem> {
    private static readonly pb::MessageParser<DropItem> _parser = new pb::MessageParser<DropItem>(() => new DropItem());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DropItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgStageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropItem(DropItem other) : this() {
      unType_ = other.unType_;
      unItemId_ = other.unItemId_;
      unItemNum_ = other.unItemNum_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropItem Clone() {
      return new DropItem(this);
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 1;
    private int unType_;
    /// <summary>
    /// 掉落物品类型(UNITE_TYPE)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    /// <summary>Field number for the "unItemId" field.</summary>
    public const int UnItemIdFieldNumber = 2;
    private int unItemId_;
    /// <summary>
    /// 掉落物品ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnItemId {
      get { return unItemId_; }
      set {
        unItemId_ = value;
      }
    }

    /// <summary>Field number for the "unItemNum" field.</summary>
    public const int UnItemNumFieldNumber = 3;
    private int unItemNum_;
    /// <summary>
    /// 掉落物品数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnItemNum {
      get { return unItemNum_; }
      set {
        unItemNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DropItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DropItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnType != other.UnType) return false;
      if (UnItemId != other.UnItemId) return false;
      if (UnItemNum != other.UnItemNum) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnType != 0) hash ^= UnType.GetHashCode();
      if (UnItemId != 0) hash ^= UnItemId.GetHashCode();
      if (UnItemNum != 0) hash ^= UnItemNum.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnType);
      }
      if (UnItemId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnItemId);
      }
      if (UnItemNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnItemNum);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      if (UnItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnItemId);
      }
      if (UnItemNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnItemNum);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DropItem other) {
      if (other == null) {
        return;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
      if (other.UnItemId != 0) {
        UnItemId = other.UnItemId;
      }
      if (other.UnItemNum != 0) {
        UnItemNum = other.UnItemNum;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnType = input.ReadInt32();
            break;
          }
          case 16: {
            UnItemId = input.ReadInt32();
            break;
          }
          case 24: {
            UnItemNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 副本掉落信息
  /// </summary>
  public sealed partial class StageDrop : pb::IMessage<StageDrop> {
    private static readonly pb::MessageParser<StageDrop> _parser = new pb::MessageParser<StageDrop>(() => new StageDrop());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StageDrop> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgStageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StageDrop() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StageDrop(StageDrop other) : this() {
      unExp_ = other.unExp_;
      unCoin_ = other.unCoin_;
      cInfo_ = other.cInfo_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StageDrop Clone() {
      return new StageDrop(this);
    }

    /// <summary>Field number for the "unExp" field.</summary>
    public const int UnExpFieldNumber = 1;
    private int unExp_;
    /// <summary>
    /// 掉落经验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnExp {
      get { return unExp_; }
      set {
        unExp_ = value;
      }
    }

    /// <summary>Field number for the "unCoin" field.</summary>
    public const int UnCoinFieldNumber = 2;
    private int unCoin_;
    /// <summary>
    /// 掉落铜币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnCoin {
      get { return unCoin_; }
      set {
        unCoin_ = value;
      }
    }

    /// <summary>Field number for the "cInfo" field.</summary>
    public const int CInfoFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Sw.DropItem> _repeated_cInfo_codec
        = pb::FieldCodec.ForMessage(26, global::Sw.DropItem.Parser);
    private readonly pbc::RepeatedField<global::Sw.DropItem> cInfo_ = new pbc::RepeatedField<global::Sw.DropItem>();
    /// <summary>
    /// 掉落物品列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.DropItem> CInfo {
      get { return cInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StageDrop);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StageDrop other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnExp != other.UnExp) return false;
      if (UnCoin != other.UnCoin) return false;
      if(!cInfo_.Equals(other.cInfo_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnExp != 0) hash ^= UnExp.GetHashCode();
      if (UnCoin != 0) hash ^= UnCoin.GetHashCode();
      hash ^= cInfo_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnExp != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnExp);
      }
      if (UnCoin != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnCoin);
      }
      cInfo_.WriteTo(output, _repeated_cInfo_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnExp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnExp);
      }
      if (UnCoin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnCoin);
      }
      size += cInfo_.CalculateSize(_repeated_cInfo_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StageDrop other) {
      if (other == null) {
        return;
      }
      if (other.UnExp != 0) {
        UnExp = other.UnExp;
      }
      if (other.UnCoin != 0) {
        UnCoin = other.UnCoin;
      }
      cInfo_.Add(other.cInfo_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnExp = input.ReadInt32();
            break;
          }
          case 16: {
            UnCoin = input.ReadInt32();
            break;
          }
          case 26: {
            cInfo_.AddEntriesFrom(input, _repeated_cInfo_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：开始副本回复
  /// _MSG_STAGE_START_S
  /// </summary>
  public sealed partial class PMsgStageStartS : pb::IMessage<PMsgStageStartS> {
    private static readonly pb::MessageParser<PMsgStageStartS> _parser = new pb::MessageParser<PMsgStageStartS>(() => new PMsgStageStartS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgStageStartS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgStageReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageStartS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageStartS(PMsgStageStartS other) : this() {
      unStageId_ = other.unStageId_;
      cBossDrop_ = other.cBossDrop_.Clone();
      unHeroId_ = other.unHeroId_.Clone();
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageStartS Clone() {
      return new PMsgStageStartS(this);
    }

    /// <summary>Field number for the "unStageId" field.</summary>
    public const int UnStageIdFieldNumber = 1;
    private int unStageId_;
    /// <summary>
    /// 副本id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnStageId {
      get { return unStageId_; }
      set {
        unStageId_ = value;
      }
    }

    /// <summary>Field number for the "cBossDrop" field.</summary>
    public const int CBossDropFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Sw.StageDrop> _repeated_cBossDrop_codec
        = pb::FieldCodec.ForMessage(18, global::Sw.StageDrop.Parser);
    private readonly pbc::RepeatedField<global::Sw.StageDrop> cBossDrop_ = new pbc::RepeatedField<global::Sw.StageDrop>();
    /// <summary>
    /// Boss掉落信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.StageDrop> CBossDrop {
      get { return cBossDrop_; }
    }

    /// <summary>Field number for the "unHeroId" field.</summary>
    public const int UnHeroIdFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_unHeroId_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> unHeroId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 出战伙伴id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> UnHeroId {
      get { return unHeroId_; }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgStageStartS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgStageStartS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnStageId != other.UnStageId) return false;
      if(!cBossDrop_.Equals(other.cBossDrop_)) return false;
      if(!unHeroId_.Equals(other.unHeroId_)) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnStageId != 0) hash ^= UnStageId.GetHashCode();
      hash ^= cBossDrop_.GetHashCode();
      hash ^= unHeroId_.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnStageId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnStageId);
      }
      cBossDrop_.WriteTo(output, _repeated_cBossDrop_codec);
      unHeroId_.WriteTo(output, _repeated_unHeroId_codec);
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnStageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnStageId);
      }
      size += cBossDrop_.CalculateSize(_repeated_cBossDrop_codec);
      size += unHeroId_.CalculateSize(_repeated_unHeroId_codec);
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgStageStartS other) {
      if (other == null) {
        return;
      }
      if (other.UnStageId != 0) {
        UnStageId = other.UnStageId;
      }
      cBossDrop_.Add(other.cBossDrop_);
      unHeroId_.Add(other.unHeroId_);
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnStageId = input.ReadInt32();
            break;
          }
          case 18: {
            cBossDrop_.AddEntriesFrom(input, _repeated_cBossDrop_codec);
            break;
          }
          case 34:
          case 32: {
            unHeroId_.AddEntriesFrom(input, _repeated_unHeroId_codec);
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：副本完成
  /// _MSG_STAGE_COMPLETE_C
  /// </summary>
  public sealed partial class PMsgStageCompleteC : pb::IMessage<PMsgStageCompleteC> {
    private static readonly pb::MessageParser<PMsgStageCompleteC> _parser = new pb::MessageParser<PMsgStageCompleteC>(() => new PMsgStageCompleteC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgStageCompleteC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgStageReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageCompleteC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageCompleteC(PMsgStageCompleteC other) : this() {
      unStageId_ = other.unStageId_;
      unVictory_ = other.unVictory_;
      unStar_ = other.unStar_.Clone();
      unDieNum_ = other.unDieNum_;
      unKillNum_ = other.unKillNum_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageCompleteC Clone() {
      return new PMsgStageCompleteC(this);
    }

    /// <summary>Field number for the "unStageId" field.</summary>
    public const int UnStageIdFieldNumber = 1;
    private int unStageId_;
    /// <summary>
    /// 副本id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnStageId {
      get { return unStageId_; }
      set {
        unStageId_ = value;
      }
    }

    /// <summary>Field number for the "unVictory" field.</summary>
    public const int UnVictoryFieldNumber = 2;
    private int unVictory_;
    /// <summary>
    /// 胜利标志：0-战斗失败，1-战斗胜利
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnVictory {
      get { return unVictory_; }
      set {
        unVictory_ = value;
      }
    }

    /// <summary>Field number for the "unStar" field.</summary>
    public const int UnStarFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_unStar_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> unStar_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 评星（3个）：0-无星，1-评星
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> UnStar {
      get { return unStar_; }
    }

    /// <summary>Field number for the "unDieNum" field.</summary>
    public const int UnDieNumFieldNumber = 4;
    private uint unDieNum_;
    /// <summary>
    /// 死亡次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnDieNum {
      get { return unDieNum_; }
      set {
        unDieNum_ = value;
      }
    }

    /// <summary>Field number for the "unKillNum" field.</summary>
    public const int UnKillNumFieldNumber = 5;
    private uint unKillNum_;
    /// <summary>
    /// 击杀怪物数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnKillNum {
      get { return unKillNum_; }
      set {
        unKillNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgStageCompleteC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgStageCompleteC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnStageId != other.UnStageId) return false;
      if (UnVictory != other.UnVictory) return false;
      if(!unStar_.Equals(other.unStar_)) return false;
      if (UnDieNum != other.UnDieNum) return false;
      if (UnKillNum != other.UnKillNum) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnStageId != 0) hash ^= UnStageId.GetHashCode();
      if (UnVictory != 0) hash ^= UnVictory.GetHashCode();
      hash ^= unStar_.GetHashCode();
      if (UnDieNum != 0) hash ^= UnDieNum.GetHashCode();
      if (UnKillNum != 0) hash ^= UnKillNum.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnStageId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnStageId);
      }
      if (UnVictory != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnVictory);
      }
      unStar_.WriteTo(output, _repeated_unStar_codec);
      if (UnDieNum != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(UnDieNum);
      }
      if (UnKillNum != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(UnKillNum);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnStageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnStageId);
      }
      if (UnVictory != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnVictory);
      }
      size += unStar_.CalculateSize(_repeated_unStar_codec);
      if (UnDieNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnDieNum);
      }
      if (UnKillNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnKillNum);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgStageCompleteC other) {
      if (other == null) {
        return;
      }
      if (other.UnStageId != 0) {
        UnStageId = other.UnStageId;
      }
      if (other.UnVictory != 0) {
        UnVictory = other.UnVictory;
      }
      unStar_.Add(other.unStar_);
      if (other.UnDieNum != 0) {
        UnDieNum = other.UnDieNum;
      }
      if (other.UnKillNum != 0) {
        UnKillNum = other.UnKillNum;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnStageId = input.ReadInt32();
            break;
          }
          case 16: {
            UnVictory = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            unStar_.AddEntriesFrom(input, _repeated_unStar_codec);
            break;
          }
          case 32: {
            UnDieNum = input.ReadUInt32();
            break;
          }
          case 40: {
            UnKillNum = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：副本完成回复
  /// _MSG_STAGE_COMPLETE_S
  /// </summary>
  public sealed partial class PMsgStageCompleteS : pb::IMessage<PMsgStageCompleteS> {
    private static readonly pb::MessageParser<PMsgStageCompleteS> _parser = new pb::MessageParser<PMsgStageCompleteS>(() => new PMsgStageCompleteS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgStageCompleteS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgStageReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageCompleteS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageCompleteS(PMsgStageCompleteS other) : this() {
      unStageId_ = other.unStageId_;
      unVictory_ = other.unVictory_;
      unStar_ = other.unStar_.Clone();
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageCompleteS Clone() {
      return new PMsgStageCompleteS(this);
    }

    /// <summary>Field number for the "unStageId" field.</summary>
    public const int UnStageIdFieldNumber = 1;
    private int unStageId_;
    /// <summary>
    /// 副本id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnStageId {
      get { return unStageId_; }
      set {
        unStageId_ = value;
      }
    }

    /// <summary>Field number for the "unVictory" field.</summary>
    public const int UnVictoryFieldNumber = 2;
    private int unVictory_;
    /// <summary>
    /// 胜利标志：0-战斗失败，1-战斗胜利
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnVictory {
      get { return unVictory_; }
      set {
        unVictory_ = value;
      }
    }

    /// <summary>Field number for the "unStar" field.</summary>
    public const int UnStarFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_unStar_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> unStar_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 评星（3个）：0-无星，1-评星
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> UnStar {
      get { return unStar_; }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgStageCompleteS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgStageCompleteS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnStageId != other.UnStageId) return false;
      if (UnVictory != other.UnVictory) return false;
      if(!unStar_.Equals(other.unStar_)) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnStageId != 0) hash ^= UnStageId.GetHashCode();
      if (UnVictory != 0) hash ^= UnVictory.GetHashCode();
      hash ^= unStar_.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnStageId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnStageId);
      }
      if (UnVictory != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnVictory);
      }
      unStar_.WriteTo(output, _repeated_unStar_codec);
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnStageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnStageId);
      }
      if (UnVictory != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnVictory);
      }
      size += unStar_.CalculateSize(_repeated_unStar_codec);
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgStageCompleteS other) {
      if (other == null) {
        return;
      }
      if (other.UnStageId != 0) {
        UnStageId = other.UnStageId;
      }
      if (other.UnVictory != 0) {
        UnVictory = other.UnVictory;
      }
      unStar_.Add(other.unStar_);
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnStageId = input.ReadInt32();
            break;
          }
          case 16: {
            UnVictory = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            unStar_.AddEntriesFrom(input, _repeated_unStar_codec);
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：副本扫荡
  /// _MSG_STAGE_SWEEP_C
  /// </summary>
  public sealed partial class PMsgStageSweepC : pb::IMessage<PMsgStageSweepC> {
    private static readonly pb::MessageParser<PMsgStageSweepC> _parser = new pb::MessageParser<PMsgStageSweepC>(() => new PMsgStageSweepC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgStageSweepC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgStageReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageSweepC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageSweepC(PMsgStageSweepC other) : this() {
      unStageId_ = other.unStageId_;
      unTimes_ = other.unTimes_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageSweepC Clone() {
      return new PMsgStageSweepC(this);
    }

    /// <summary>Field number for the "unStageId" field.</summary>
    public const int UnStageIdFieldNumber = 1;
    private int unStageId_;
    /// <summary>
    /// 副本id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnStageId {
      get { return unStageId_; }
      set {
        unStageId_ = value;
      }
    }

    /// <summary>Field number for the "unTimes" field.</summary>
    public const int UnTimesFieldNumber = 2;
    private int unTimes_;
    /// <summary>
    /// 扫荡次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnTimes {
      get { return unTimes_; }
      set {
        unTimes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgStageSweepC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgStageSweepC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnStageId != other.UnStageId) return false;
      if (UnTimes != other.UnTimes) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnStageId != 0) hash ^= UnStageId.GetHashCode();
      if (UnTimes != 0) hash ^= UnTimes.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnStageId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnStageId);
      }
      if (UnTimes != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnTimes);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnStageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnStageId);
      }
      if (UnTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnTimes);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgStageSweepC other) {
      if (other == null) {
        return;
      }
      if (other.UnStageId != 0) {
        UnStageId = other.UnStageId;
      }
      if (other.UnTimes != 0) {
        UnTimes = other.UnTimes;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnStageId = input.ReadInt32();
            break;
          }
          case 16: {
            UnTimes = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：副本扫荡回复
  /// _MSG_STAGE_SWEEP_S
  /// </summary>
  public sealed partial class PMsgStageSweepS : pb::IMessage<PMsgStageSweepS> {
    private static readonly pb::MessageParser<PMsgStageSweepS> _parser = new pb::MessageParser<PMsgStageSweepS>(() => new PMsgStageSweepS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgStageSweepS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgStageReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageSweepS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageSweepS(PMsgStageSweepS other) : this() {
      unStageId_ = other.unStageId_;
      unTimes_ = other.unTimes_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageSweepS Clone() {
      return new PMsgStageSweepS(this);
    }

    /// <summary>Field number for the "unStageId" field.</summary>
    public const int UnStageIdFieldNumber = 1;
    private int unStageId_;
    /// <summary>
    /// 副本id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnStageId {
      get { return unStageId_; }
      set {
        unStageId_ = value;
      }
    }

    /// <summary>Field number for the "unTimes" field.</summary>
    public const int UnTimesFieldNumber = 2;
    private int unTimes_;
    /// <summary>
    /// 扫荡次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnTimes {
      get { return unTimes_; }
      set {
        unTimes_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgStageSweepS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgStageSweepS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnStageId != other.UnStageId) return false;
      if (UnTimes != other.UnTimes) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnStageId != 0) hash ^= UnStageId.GetHashCode();
      if (UnTimes != 0) hash ^= UnTimes.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnStageId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnStageId);
      }
      if (UnTimes != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnTimes);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnStageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnStageId);
      }
      if (UnTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnTimes);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgStageSweepS other) {
      if (other == null) {
        return;
      }
      if (other.UnStageId != 0) {
        UnStageId = other.UnStageId;
      }
      if (other.UnTimes != 0) {
        UnTimes = other.UnTimes;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnStageId = input.ReadInt32();
            break;
          }
          case 16: {
            UnTimes = input.ReadInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：副本扫荡掉落
  /// _MSG_STAGE_SWEEP_RESULT_S
  /// </summary>
  public sealed partial class PMsgStageSweepResultS : pb::IMessage<PMsgStageSweepResultS> {
    private static readonly pb::MessageParser<PMsgStageSweepResultS> _parser = new pb::MessageParser<PMsgStageSweepResultS>(() => new PMsgStageSweepResultS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgStageSweepResultS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgStageReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageSweepResultS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageSweepResultS(PMsgStageSweepResultS other) : this() {
      unStageId_ = other.unStageId_;
      unTimes_ = other.unTimes_;
      cBossDrop_ = other.cBossDrop_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageSweepResultS Clone() {
      return new PMsgStageSweepResultS(this);
    }

    /// <summary>Field number for the "unStageId" field.</summary>
    public const int UnStageIdFieldNumber = 1;
    private int unStageId_;
    /// <summary>
    /// 副本id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnStageId {
      get { return unStageId_; }
      set {
        unStageId_ = value;
      }
    }

    /// <summary>Field number for the "unTimes" field.</summary>
    public const int UnTimesFieldNumber = 2;
    private int unTimes_;
    /// <summary>
    /// 第几次
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnTimes {
      get { return unTimes_; }
      set {
        unTimes_ = value;
      }
    }

    /// <summary>Field number for the "cBossDrop" field.</summary>
    public const int CBossDropFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Sw.StageDrop> _repeated_cBossDrop_codec
        = pb::FieldCodec.ForMessage(26, global::Sw.StageDrop.Parser);
    private readonly pbc::RepeatedField<global::Sw.StageDrop> cBossDrop_ = new pbc::RepeatedField<global::Sw.StageDrop>();
    /// <summary>
    /// Boss掉落信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.StageDrop> CBossDrop {
      get { return cBossDrop_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgStageSweepResultS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgStageSweepResultS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnStageId != other.UnStageId) return false;
      if (UnTimes != other.UnTimes) return false;
      if(!cBossDrop_.Equals(other.cBossDrop_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnStageId != 0) hash ^= UnStageId.GetHashCode();
      if (UnTimes != 0) hash ^= UnTimes.GetHashCode();
      hash ^= cBossDrop_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnStageId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnStageId);
      }
      if (UnTimes != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnTimes);
      }
      cBossDrop_.WriteTo(output, _repeated_cBossDrop_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnStageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnStageId);
      }
      if (UnTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnTimes);
      }
      size += cBossDrop_.CalculateSize(_repeated_cBossDrop_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgStageSweepResultS other) {
      if (other == null) {
        return;
      }
      if (other.UnStageId != 0) {
        UnStageId = other.UnStageId;
      }
      if (other.UnTimes != 0) {
        UnTimes = other.UnTimes;
      }
      cBossDrop_.Add(other.cBossDrop_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnStageId = input.ReadInt32();
            break;
          }
          case 16: {
            UnTimes = input.ReadInt32();
            break;
          }
          case 26: {
            cBossDrop_.AddEntriesFrom(input, _repeated_cBossDrop_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：副本次数重置
  /// _MSG_STAGE_RESET_C
  /// </summary>
  public sealed partial class PMsgStageResetC : pb::IMessage<PMsgStageResetC> {
    private static readonly pb::MessageParser<PMsgStageResetC> _parser = new pb::MessageParser<PMsgStageResetC>(() => new PMsgStageResetC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgStageResetC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgStageReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageResetC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageResetC(PMsgStageResetC other) : this() {
      unStageId_ = other.unStageId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageResetC Clone() {
      return new PMsgStageResetC(this);
    }

    /// <summary>Field number for the "unStageId" field.</summary>
    public const int UnStageIdFieldNumber = 1;
    private int unStageId_;
    /// <summary>
    /// 副本id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnStageId {
      get { return unStageId_; }
      set {
        unStageId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgStageResetC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgStageResetC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnStageId != other.UnStageId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnStageId != 0) hash ^= UnStageId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnStageId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnStageId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnStageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnStageId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgStageResetC other) {
      if (other == null) {
        return;
      }
      if (other.UnStageId != 0) {
        UnStageId = other.UnStageId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnStageId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：副本次数重置回复
  /// _MSG_STAGE_RESET_S
  /// </summary>
  public sealed partial class PMsgStageResetS : pb::IMessage<PMsgStageResetS> {
    private static readonly pb::MessageParser<PMsgStageResetS> _parser = new pb::MessageParser<PMsgStageResetS>(() => new PMsgStageResetS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgStageResetS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgStageReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageResetS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageResetS(PMsgStageResetS other) : this() {
      unStageId_ = other.unStageId_;
      unResetTimes_ = other.unResetTimes_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageResetS Clone() {
      return new PMsgStageResetS(this);
    }

    /// <summary>Field number for the "unStageId" field.</summary>
    public const int UnStageIdFieldNumber = 1;
    private int unStageId_;
    /// <summary>
    /// 副本id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnStageId {
      get { return unStageId_; }
      set {
        unStageId_ = value;
      }
    }

    /// <summary>Field number for the "unResetTimes" field.</summary>
    public const int UnResetTimesFieldNumber = 2;
    private int unResetTimes_;
    /// <summary>
    /// 副本重置次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnResetTimes {
      get { return unResetTimes_; }
      set {
        unResetTimes_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgStageResetS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgStageResetS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnStageId != other.UnStageId) return false;
      if (UnResetTimes != other.UnResetTimes) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnStageId != 0) hash ^= UnStageId.GetHashCode();
      if (UnResetTimes != 0) hash ^= UnResetTimes.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnStageId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnStageId);
      }
      if (UnResetTimes != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnResetTimes);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnStageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnStageId);
      }
      if (UnResetTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnResetTimes);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgStageResetS other) {
      if (other == null) {
        return;
      }
      if (other.UnStageId != 0) {
        UnStageId = other.UnStageId;
      }
      if (other.UnResetTimes != 0) {
        UnResetTimes = other.UnResetTimes;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnStageId = input.ReadInt32();
            break;
          }
          case 16: {
            UnResetTimes = input.ReadInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：查询章节宝箱
  /// _MSG_STAGE_CHAPTER_QUERY_C
  /// </summary>
  public sealed partial class PMsgStageChapterQueryC : pb::IMessage<PMsgStageChapterQueryC> {
    private static readonly pb::MessageParser<PMsgStageChapterQueryC> _parser = new pb::MessageParser<PMsgStageChapterQueryC>(() => new PMsgStageChapterQueryC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgStageChapterQueryC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgStageReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageChapterQueryC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageChapterQueryC(PMsgStageChapterQueryC other) : this() {
      unStageType_ = other.unStageType_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageChapterQueryC Clone() {
      return new PMsgStageChapterQueryC(this);
    }

    /// <summary>Field number for the "unStageType" field.</summary>
    public const int UnStageTypeFieldNumber = 1;
    private int unStageType_;
    /// <summary>
    /// 副本类型(sw::STAGE_TYPE)：1-普通副本，2-精英副本
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnStageType {
      get { return unStageType_; }
      set {
        unStageType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgStageChapterQueryC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgStageChapterQueryC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnStageType != other.UnStageType) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnStageType != 0) hash ^= UnStageType.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnStageType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnStageType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnStageType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnStageType);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgStageChapterQueryC other) {
      if (other == null) {
        return;
      }
      if (other.UnStageType != 0) {
        UnStageType = other.UnStageType;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnStageType = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：查询章节宝箱回复
  /// _MSG_STAGE_CHAPTER_QUERY_S
  /// </summary>
  public sealed partial class PMsgStageChapterQueryS : pb::IMessage<PMsgStageChapterQueryS> {
    private static readonly pb::MessageParser<PMsgStageChapterQueryS> _parser = new pb::MessageParser<PMsgStageChapterQueryS>(() => new PMsgStageChapterQueryS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgStageChapterQueryS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgStageReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageChapterQueryS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageChapterQueryS(PMsgStageChapterQueryS other) : this() {
      unCount_ = other.unCount_;
      cInfo_ = other.cInfo_.Clone();
      unStageType_ = other.unStageType_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageChapterQueryS Clone() {
      return new PMsgStageChapterQueryS(this);
    }

    /// <summary>Field number for the "unCount" field.</summary>
    public const int UnCountFieldNumber = 1;
    private int unCount_;
    /// <summary>
    /// 数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnCount {
      get { return unCount_; }
      set {
        unCount_ = value;
      }
    }

    /// <summary>Field number for the "cInfo" field.</summary>
    public const int CInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Sw.PMsgStageChapterQueryS.Types.ChapterInfo> _repeated_cInfo_codec
        = pb::FieldCodec.ForMessage(18, global::Sw.PMsgStageChapterQueryS.Types.ChapterInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.PMsgStageChapterQueryS.Types.ChapterInfo> cInfo_ = new pbc::RepeatedField<global::Sw.PMsgStageChapterQueryS.Types.ChapterInfo>();
    /// <summary>
    /// 章节信息列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.PMsgStageChapterQueryS.Types.ChapterInfo> CInfo {
      get { return cInfo_; }
    }

    /// <summary>Field number for the "unStageType" field.</summary>
    public const int UnStageTypeFieldNumber = 3;
    private int unStageType_;
    /// <summary>
    /// 副本类型(sw::STAGE_TYPE)：1-普通副本，2-精英副本
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnStageType {
      get { return unStageType_; }
      set {
        unStageType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgStageChapterQueryS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgStageChapterQueryS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnCount != other.UnCount) return false;
      if(!cInfo_.Equals(other.cInfo_)) return false;
      if (UnStageType != other.UnStageType) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnCount != 0) hash ^= UnCount.GetHashCode();
      hash ^= cInfo_.GetHashCode();
      if (UnStageType != 0) hash ^= UnStageType.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnCount);
      }
      cInfo_.WriteTo(output, _repeated_cInfo_codec);
      if (UnStageType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnStageType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnCount);
      }
      size += cInfo_.CalculateSize(_repeated_cInfo_codec);
      if (UnStageType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnStageType);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgStageChapterQueryS other) {
      if (other == null) {
        return;
      }
      if (other.UnCount != 0) {
        UnCount = other.UnCount;
      }
      cInfo_.Add(other.cInfo_);
      if (other.UnStageType != 0) {
        UnStageType = other.UnStageType;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnCount = input.ReadInt32();
            break;
          }
          case 18: {
            cInfo_.AddEntriesFrom(input, _repeated_cInfo_codec);
            break;
          }
          case 24: {
            UnStageType = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PMsgStageChapterQueryS message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// 章节信息
      /// </summary>
      public sealed partial class ChapterInfo : pb::IMessage<ChapterInfo> {
        private static readonly pb::MessageParser<ChapterInfo> _parser = new pb::MessageParser<ChapterInfo>(() => new ChapterInfo());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ChapterInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Sw.PMsgStageChapterQueryS.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChapterInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChapterInfo(ChapterInfo other) : this() {
          unChapterId_ = other.unChapterId_;
          unBoxId_ = other.unBoxId_;
          unStar_ = other.unStar_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChapterInfo Clone() {
          return new ChapterInfo(this);
        }

        /// <summary>Field number for the "unChapterId" field.</summary>
        public const int UnChapterIdFieldNumber = 1;
        private int unChapterId_;
        /// <summary>
        /// 章节id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnChapterId {
          get { return unChapterId_; }
          set {
            unChapterId_ = value;
          }
        }

        /// <summary>Field number for the "unBoxId" field.</summary>
        public const int UnBoxIdFieldNumber = 2;
        private int unBoxId_;
        /// <summary>
        /// 宝箱id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnBoxId {
          get { return unBoxId_; }
          set {
            unBoxId_ = value;
          }
        }

        /// <summary>Field number for the "unStar" field.</summary>
        public const int UnStarFieldNumber = 3;
        private int unStar_;
        /// <summary>
        /// 章节星星数量
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnStar {
          get { return unStar_; }
          set {
            unStar_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ChapterInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ChapterInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UnChapterId != other.UnChapterId) return false;
          if (UnBoxId != other.UnBoxId) return false;
          if (UnStar != other.UnStar) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (UnChapterId != 0) hash ^= UnChapterId.GetHashCode();
          if (UnBoxId != 0) hash ^= UnBoxId.GetHashCode();
          if (UnStar != 0) hash ^= UnStar.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (UnChapterId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(UnChapterId);
          }
          if (UnBoxId != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(UnBoxId);
          }
          if (UnStar != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(UnStar);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (UnChapterId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnChapterId);
          }
          if (UnBoxId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnBoxId);
          }
          if (UnStar != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnStar);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ChapterInfo other) {
          if (other == null) {
            return;
          }
          if (other.UnChapterId != 0) {
            UnChapterId = other.UnChapterId;
          }
          if (other.UnBoxId != 0) {
            UnBoxId = other.UnBoxId;
          }
          if (other.UnStar != 0) {
            UnStar = other.UnStar;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 8: {
                UnChapterId = input.ReadInt32();
                break;
              }
              case 16: {
                UnBoxId = input.ReadInt32();
                break;
              }
              case 24: {
                UnStar = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// 客户端：领取章节宝箱
  /// _MSG_STAGE_CHAPTER_REWARD_C
  /// </summary>
  public sealed partial class PMsgStageChapterRewardC : pb::IMessage<PMsgStageChapterRewardC> {
    private static readonly pb::MessageParser<PMsgStageChapterRewardC> _parser = new pb::MessageParser<PMsgStageChapterRewardC>(() => new PMsgStageChapterRewardC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgStageChapterRewardC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgStageReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageChapterRewardC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageChapterRewardC(PMsgStageChapterRewardC other) : this() {
      unChapterId_ = other.unChapterId_;
      unBoxId_ = other.unBoxId_;
      unStageType_ = other.unStageType_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageChapterRewardC Clone() {
      return new PMsgStageChapterRewardC(this);
    }

    /// <summary>Field number for the "unChapterId" field.</summary>
    public const int UnChapterIdFieldNumber = 1;
    private int unChapterId_;
    /// <summary>
    /// 章节id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnChapterId {
      get { return unChapterId_; }
      set {
        unChapterId_ = value;
      }
    }

    /// <summary>Field number for the "unBoxId" field.</summary>
    public const int UnBoxIdFieldNumber = 2;
    private int unBoxId_;
    /// <summary>
    /// 宝箱id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnBoxId {
      get { return unBoxId_; }
      set {
        unBoxId_ = value;
      }
    }

    /// <summary>Field number for the "unStageType" field.</summary>
    public const int UnStageTypeFieldNumber = 3;
    private int unStageType_;
    /// <summary>
    /// 副本类型(sw::STAGE_TYPE)：1-普通副本，2-精英副本
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnStageType {
      get { return unStageType_; }
      set {
        unStageType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgStageChapterRewardC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgStageChapterRewardC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnChapterId != other.UnChapterId) return false;
      if (UnBoxId != other.UnBoxId) return false;
      if (UnStageType != other.UnStageType) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnChapterId != 0) hash ^= UnChapterId.GetHashCode();
      if (UnBoxId != 0) hash ^= UnBoxId.GetHashCode();
      if (UnStageType != 0) hash ^= UnStageType.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnChapterId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnChapterId);
      }
      if (UnBoxId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnBoxId);
      }
      if (UnStageType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnStageType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnChapterId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnChapterId);
      }
      if (UnBoxId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnBoxId);
      }
      if (UnStageType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnStageType);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgStageChapterRewardC other) {
      if (other == null) {
        return;
      }
      if (other.UnChapterId != 0) {
        UnChapterId = other.UnChapterId;
      }
      if (other.UnBoxId != 0) {
        UnBoxId = other.UnBoxId;
      }
      if (other.UnStageType != 0) {
        UnStageType = other.UnStageType;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnChapterId = input.ReadInt32();
            break;
          }
          case 16: {
            UnBoxId = input.ReadInt32();
            break;
          }
          case 24: {
            UnStageType = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：领取章节宝箱回复
  /// _MSG_STAGE_CHAPTER_REWARD_S
  /// </summary>
  public sealed partial class PMsgStageChapterRewardS : pb::IMessage<PMsgStageChapterRewardS> {
    private static readonly pb::MessageParser<PMsgStageChapterRewardS> _parser = new pb::MessageParser<PMsgStageChapterRewardS>(() => new PMsgStageChapterRewardS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgStageChapterRewardS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgStageReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageChapterRewardS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageChapterRewardS(PMsgStageChapterRewardS other) : this() {
      unChapterId_ = other.unChapterId_;
      unBoxId_ = other.unBoxId_;
      cInfo_ = other.cInfo_.Clone();
      unStageType_ = other.unStageType_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgStageChapterRewardS Clone() {
      return new PMsgStageChapterRewardS(this);
    }

    /// <summary>Field number for the "unChapterId" field.</summary>
    public const int UnChapterIdFieldNumber = 1;
    private int unChapterId_;
    /// <summary>
    /// 章节id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnChapterId {
      get { return unChapterId_; }
      set {
        unChapterId_ = value;
      }
    }

    /// <summary>Field number for the "unBoxId" field.</summary>
    public const int UnBoxIdFieldNumber = 2;
    private int unBoxId_;
    /// <summary>
    /// 宝箱id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnBoxId {
      get { return unBoxId_; }
      set {
        unBoxId_ = value;
      }
    }

    /// <summary>Field number for the "cInfo" field.</summary>
    public const int CInfoFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Sw.PMsgStageChapterRewardS.Types.ItemInfo> _repeated_cInfo_codec
        = pb::FieldCodec.ForMessage(26, global::Sw.PMsgStageChapterRewardS.Types.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.PMsgStageChapterRewardS.Types.ItemInfo> cInfo_ = new pbc::RepeatedField<global::Sw.PMsgStageChapterRewardS.Types.ItemInfo>();
    /// <summary>
    /// 道具信息列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.PMsgStageChapterRewardS.Types.ItemInfo> CInfo {
      get { return cInfo_; }
    }

    /// <summary>Field number for the "unStageType" field.</summary>
    public const int UnStageTypeFieldNumber = 4;
    private int unStageType_;
    /// <summary>
    /// 副本类型(sw::STAGE_TYPE)：1-普通副本，2-精英副本
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnStageType {
      get { return unStageType_; }
      set {
        unStageType_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgStageChapterRewardS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgStageChapterRewardS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnChapterId != other.UnChapterId) return false;
      if (UnBoxId != other.UnBoxId) return false;
      if(!cInfo_.Equals(other.cInfo_)) return false;
      if (UnStageType != other.UnStageType) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnChapterId != 0) hash ^= UnChapterId.GetHashCode();
      if (UnBoxId != 0) hash ^= UnBoxId.GetHashCode();
      hash ^= cInfo_.GetHashCode();
      if (UnStageType != 0) hash ^= UnStageType.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnChapterId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnChapterId);
      }
      if (UnBoxId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnBoxId);
      }
      cInfo_.WriteTo(output, _repeated_cInfo_codec);
      if (UnStageType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UnStageType);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnChapterId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnChapterId);
      }
      if (UnBoxId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnBoxId);
      }
      size += cInfo_.CalculateSize(_repeated_cInfo_codec);
      if (UnStageType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnStageType);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgStageChapterRewardS other) {
      if (other == null) {
        return;
      }
      if (other.UnChapterId != 0) {
        UnChapterId = other.UnChapterId;
      }
      if (other.UnBoxId != 0) {
        UnBoxId = other.UnBoxId;
      }
      cInfo_.Add(other.cInfo_);
      if (other.UnStageType != 0) {
        UnStageType = other.UnStageType;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnChapterId = input.ReadInt32();
            break;
          }
          case 16: {
            UnBoxId = input.ReadInt32();
            break;
          }
          case 26: {
            cInfo_.AddEntriesFrom(input, _repeated_cInfo_codec);
            break;
          }
          case 32: {
            UnStageType = input.ReadInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PMsgStageChapterRewardS message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// 章节信息
      /// </summary>
      public sealed partial class ItemInfo : pb::IMessage<ItemInfo> {
        private static readonly pb::MessageParser<ItemInfo> _parser = new pb::MessageParser<ItemInfo>(() => new ItemInfo());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ItemInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Sw.PMsgStageChapterRewardS.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ItemInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ItemInfo(ItemInfo other) : this() {
          unType_ = other.unType_;
          unItemId_ = other.unItemId_;
          unNum_ = other.unNum_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ItemInfo Clone() {
          return new ItemInfo(this);
        }

        /// <summary>Field number for the "unType" field.</summary>
        public const int UnTypeFieldNumber = 1;
        private int unType_;
        /// <summary>
        /// 类型（UNITE_TYPE）
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnType {
          get { return unType_; }
          set {
            unType_ = value;
          }
        }

        /// <summary>Field number for the "unItemId" field.</summary>
        public const int UnItemIdFieldNumber = 2;
        private int unItemId_;
        /// <summary>
        /// 道具id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnItemId {
          get { return unItemId_; }
          set {
            unItemId_ = value;
          }
        }

        /// <summary>Field number for the "unNum" field.</summary>
        public const int UnNumFieldNumber = 3;
        private int unNum_;
        /// <summary>
        /// 数量
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnNum {
          get { return unNum_; }
          set {
            unNum_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ItemInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ItemInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UnType != other.UnType) return false;
          if (UnItemId != other.UnItemId) return false;
          if (UnNum != other.UnNum) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (UnType != 0) hash ^= UnType.GetHashCode();
          if (UnItemId != 0) hash ^= UnItemId.GetHashCode();
          if (UnNum != 0) hash ^= UnNum.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (UnType != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(UnType);
          }
          if (UnItemId != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(UnItemId);
          }
          if (UnNum != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(UnNum);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (UnType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
          }
          if (UnItemId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnItemId);
          }
          if (UnNum != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnNum);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ItemInfo other) {
          if (other == null) {
            return;
          }
          if (other.UnType != 0) {
            UnType = other.UnType;
          }
          if (other.UnItemId != 0) {
            UnItemId = other.UnItemId;
          }
          if (other.UnNum != 0) {
            UnNum = other.UnNum;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 8: {
                UnType = input.ReadInt32();
                break;
              }
              case 16: {
                UnItemId = input.ReadInt32();
                break;
              }
              case 24: {
                UnNum = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
