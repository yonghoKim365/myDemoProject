// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/PMsgItem.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Sw {

  /// <summary>Holder for reflection information generated from protos/PMsgItem.proto</summary>
  public static partial class PMsgItemReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/PMsgItem.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PMsgItemReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVwcm90b3MvUE1zZ0l0ZW0ucHJvdG8SAnN3IiQKDlBNc2dJdGVtUXVlcnlD",
            "EhIKCnVuUmVzZXJ2ZWQYASABKAUiNwoISXRlbUluZm8SDAoEdW5JZBgBIAEo",
            "BRIOCgZ1blR5cGUYAiABKAUSDQoFdW5OdW0YAyABKAUiRgoOUE1zZ0l0ZW1R",
            "dWVyeVMSEwoLdW5JdGVtQ291bnQYASABKAUSHwoJY0l0ZW1JbmZvGAIgAygL",
            "Mgwuc3cuSXRlbUluZm8iLAoMUE1zZ0l0ZW1EZWxTEgwKBHVuSWQYASABKAUS",
            "DgoGdW5UeXBlGAIgASgFIjAKD1BNc2dJdGVtRnVzaW9uQxIOCgZ1blR5cGUY",
            "ASABKAUSDQoFdW5OdW0YAiABKAUiRQoPUE1zZ0l0ZW1GdXNpb25TEg4KBnVu",
            "VHlwZRgBIAEoBRINCgV1bk51bRgCIAEoBRITCgt1bkVycm9yQ29kZRhjIAEo",
            "BSItCgxJdGVtU2VsbEluZm8SDgoGdW5UeXBlGAEgASgFEg0KBXVuTnVtGAIg",
            "ASgFIjAKDVBNc2dJdGVtU2VsbEMSHwoFY0luZm8YASADKAsyEC5zdy5JdGVt",
            "U2VsbEluZm8iVQoNUE1zZ0l0ZW1TZWxsUxIfCgVjSW5mbxgBIAMoCzIQLnN3",
            "Lkl0ZW1TZWxsSW5mbxIOCgZ1bkNvaW4YAiABKAUSEwoLdW5FcnJvckNvZGUY",
            "YyABKAUiPgoPUE1zZ1N5bk5ld0l0ZW1TEgwKBHVuSWQYASABKA0SDgoGdW5U",
            "eXBlGAIgASgNEg0KBXVuTnVtGAMgASgNYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgItemQueryC), global::Sw.PMsgItemQueryC.Parser, new[]{ "UnReserved" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.ItemInfo), global::Sw.ItemInfo.Parser, new[]{ "UnId", "UnType", "UnNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgItemQueryS), global::Sw.PMsgItemQueryS.Parser, new[]{ "UnItemCount", "CItemInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgItemDelS), global::Sw.PMsgItemDelS.Parser, new[]{ "UnId", "UnType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgItemFusionC), global::Sw.PMsgItemFusionC.Parser, new[]{ "UnType", "UnNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgItemFusionS), global::Sw.PMsgItemFusionS.Parser, new[]{ "UnType", "UnNum", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.ItemSellInfo), global::Sw.ItemSellInfo.Parser, new[]{ "UnType", "UnNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgItemSellC), global::Sw.PMsgItemSellC.Parser, new[]{ "CInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgItemSellS), global::Sw.PMsgItemSellS.Parser, new[]{ "CInfo", "UnCoin", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgSynNewItemS), global::Sw.PMsgSynNewItemS.Parser, new[]{ "UnId", "UnType", "UnNum" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 客户端：查询道具列表
  /// _MSG_ITEM_QUERY_C
  /// </summary>
  public sealed partial class PMsgItemQueryC : pb::IMessage<PMsgItemQueryC> {
    private static readonly pb::MessageParser<PMsgItemQueryC> _parser = new pb::MessageParser<PMsgItemQueryC>(() => new PMsgItemQueryC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgItemQueryC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgItemReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgItemQueryC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgItemQueryC(PMsgItemQueryC other) : this() {
      unReserved_ = other.unReserved_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgItemQueryC Clone() {
      return new PMsgItemQueryC(this);
    }

    /// <summary>Field number for the "unReserved" field.</summary>
    public const int UnReservedFieldNumber = 1;
    private int unReserved_;
    /// <summary>
    /// 保留字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnReserved {
      get { return unReserved_; }
      set {
        unReserved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgItemQueryC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgItemQueryC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnReserved != other.UnReserved) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnReserved != 0) hash ^= UnReserved.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnReserved != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnReserved);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnReserved != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnReserved);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgItemQueryC other) {
      if (other == null) {
        return;
      }
      if (other.UnReserved != 0) {
        UnReserved = other.UnReserved;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnReserved = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 道具基本信息
  /// </summary>
  public sealed partial class ItemInfo : pb::IMessage<ItemInfo> {
    private static readonly pb::MessageParser<ItemInfo> _parser = new pb::MessageParser<ItemInfo>(() => new ItemInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgItemReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemInfo(ItemInfo other) : this() {
      unId_ = other.unId_;
      unType_ = other.unType_;
      unNum_ = other.unNum_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemInfo Clone() {
      return new ItemInfo(this);
    }

    /// <summary>Field number for the "unId" field.</summary>
    public const int UnIdFieldNumber = 1;
    private int unId_;
    /// <summary>
    /// id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnId {
      get { return unId_; }
      set {
        unId_ = value;
      }
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 2;
    private int unType_;
    /// <summary>
    /// 类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    /// <summary>Field number for the "unNum" field.</summary>
    public const int UnNumFieldNumber = 3;
    private int unNum_;
    /// <summary>
    /// 数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnNum {
      get { return unNum_; }
      set {
        unNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnId != other.UnId) return false;
      if (UnType != other.UnType) return false;
      if (UnNum != other.UnNum) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnId != 0) hash ^= UnId.GetHashCode();
      if (UnType != 0) hash ^= UnType.GetHashCode();
      if (UnNum != 0) hash ^= UnNum.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnId);
      }
      if (UnType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnType);
      }
      if (UnNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnNum);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnId);
      }
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      if (UnNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnNum);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemInfo other) {
      if (other == null) {
        return;
      }
      if (other.UnId != 0) {
        UnId = other.UnId;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
      if (other.UnNum != 0) {
        UnNum = other.UnNum;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnId = input.ReadInt32();
            break;
          }
          case 16: {
            UnType = input.ReadInt32();
            break;
          }
          case 24: {
            UnNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：道具列表
  /// _MSG_ITEM_QUERY_S
  /// </summary>
  public sealed partial class PMsgItemQueryS : pb::IMessage<PMsgItemQueryS> {
    private static readonly pb::MessageParser<PMsgItemQueryS> _parser = new pb::MessageParser<PMsgItemQueryS>(() => new PMsgItemQueryS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgItemQueryS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgItemReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgItemQueryS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgItemQueryS(PMsgItemQueryS other) : this() {
      unItemCount_ = other.unItemCount_;
      cItemInfo_ = other.cItemInfo_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgItemQueryS Clone() {
      return new PMsgItemQueryS(this);
    }

    /// <summary>Field number for the "unItemCount" field.</summary>
    public const int UnItemCountFieldNumber = 1;
    private int unItemCount_;
    /// <summary>
    /// 道具数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnItemCount {
      get { return unItemCount_; }
      set {
        unItemCount_ = value;
      }
    }

    /// <summary>Field number for the "cItemInfo" field.</summary>
    public const int CItemInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Sw.ItemInfo> _repeated_cItemInfo_codec
        = pb::FieldCodec.ForMessage(18, global::Sw.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.ItemInfo> cItemInfo_ = new pbc::RepeatedField<global::Sw.ItemInfo>();
    /// <summary>
    /// 道具信息列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.ItemInfo> CItemInfo {
      get { return cItemInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgItemQueryS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgItemQueryS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnItemCount != other.UnItemCount) return false;
      if(!cItemInfo_.Equals(other.cItemInfo_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnItemCount != 0) hash ^= UnItemCount.GetHashCode();
      hash ^= cItemInfo_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnItemCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnItemCount);
      }
      cItemInfo_.WriteTo(output, _repeated_cItemInfo_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnItemCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnItemCount);
      }
      size += cItemInfo_.CalculateSize(_repeated_cItemInfo_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgItemQueryS other) {
      if (other == null) {
        return;
      }
      if (other.UnItemCount != 0) {
        UnItemCount = other.UnItemCount;
      }
      cItemInfo_.Add(other.cItemInfo_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnItemCount = input.ReadInt32();
            break;
          }
          case 18: {
            cItemInfo_.AddEntriesFrom(input, _repeated_cItemInfo_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：道具删除
  /// _MSG_ITEM_DEL_S
  /// </summary>
  public sealed partial class PMsgItemDelS : pb::IMessage<PMsgItemDelS> {
    private static readonly pb::MessageParser<PMsgItemDelS> _parser = new pb::MessageParser<PMsgItemDelS>(() => new PMsgItemDelS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgItemDelS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgItemReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgItemDelS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgItemDelS(PMsgItemDelS other) : this() {
      unId_ = other.unId_;
      unType_ = other.unType_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgItemDelS Clone() {
      return new PMsgItemDelS(this);
    }

    /// <summary>Field number for the "unId" field.</summary>
    public const int UnIdFieldNumber = 1;
    private int unId_;
    /// <summary>
    /// id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnId {
      get { return unId_; }
      set {
        unId_ = value;
      }
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 2;
    private int unType_;
    /// <summary>
    /// 类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgItemDelS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgItemDelS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnId != other.UnId) return false;
      if (UnType != other.UnType) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnId != 0) hash ^= UnId.GetHashCode();
      if (UnType != 0) hash ^= UnType.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnId);
      }
      if (UnType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnId);
      }
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgItemDelS other) {
      if (other == null) {
        return;
      }
      if (other.UnId != 0) {
        UnId = other.UnId;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnId = input.ReadInt32();
            break;
          }
          case 16: {
            UnType = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：道具合成
  /// _MSG_ITEM_FUSION_C
  /// </summary>
  public sealed partial class PMsgItemFusionC : pb::IMessage<PMsgItemFusionC> {
    private static readonly pb::MessageParser<PMsgItemFusionC> _parser = new pb::MessageParser<PMsgItemFusionC>(() => new PMsgItemFusionC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgItemFusionC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgItemReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgItemFusionC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgItemFusionC(PMsgItemFusionC other) : this() {
      unType_ = other.unType_;
      unNum_ = other.unNum_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgItemFusionC Clone() {
      return new PMsgItemFusionC(this);
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 1;
    private int unType_;
    /// <summary>
    /// 类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    /// <summary>Field number for the "unNum" field.</summary>
    public const int UnNumFieldNumber = 2;
    private int unNum_;
    /// <summary>
    /// 数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnNum {
      get { return unNum_; }
      set {
        unNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgItemFusionC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgItemFusionC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnType != other.UnType) return false;
      if (UnNum != other.UnNum) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnType != 0) hash ^= UnType.GetHashCode();
      if (UnNum != 0) hash ^= UnNum.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnType);
      }
      if (UnNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnNum);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      if (UnNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnNum);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgItemFusionC other) {
      if (other == null) {
        return;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
      if (other.UnNum != 0) {
        UnNum = other.UnNum;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnType = input.ReadInt32();
            break;
          }
          case 16: {
            UnNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：道具合成回复
  /// _MSG_ITEM_FUSION_S
  /// </summary>
  public sealed partial class PMsgItemFusionS : pb::IMessage<PMsgItemFusionS> {
    private static readonly pb::MessageParser<PMsgItemFusionS> _parser = new pb::MessageParser<PMsgItemFusionS>(() => new PMsgItemFusionS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgItemFusionS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgItemReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgItemFusionS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgItemFusionS(PMsgItemFusionS other) : this() {
      unType_ = other.unType_;
      unNum_ = other.unNum_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgItemFusionS Clone() {
      return new PMsgItemFusionS(this);
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 1;
    private int unType_;
    /// <summary>
    /// 类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    /// <summary>Field number for the "unNum" field.</summary>
    public const int UnNumFieldNumber = 2;
    private int unNum_;
    /// <summary>
    /// 数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnNum {
      get { return unNum_; }
      set {
        unNum_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgItemFusionS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgItemFusionS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnType != other.UnType) return false;
      if (UnNum != other.UnNum) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnType != 0) hash ^= UnType.GetHashCode();
      if (UnNum != 0) hash ^= UnNum.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnType);
      }
      if (UnNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnNum);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      if (UnNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnNum);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgItemFusionS other) {
      if (other == null) {
        return;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
      if (other.UnNum != 0) {
        UnNum = other.UnNum;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnType = input.ReadInt32();
            break;
          }
          case 16: {
            UnNum = input.ReadInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 出售的道具信息
  /// </summary>
  public sealed partial class ItemSellInfo : pb::IMessage<ItemSellInfo> {
    private static readonly pb::MessageParser<ItemSellInfo> _parser = new pb::MessageParser<ItemSellInfo>(() => new ItemSellInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemSellInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgItemReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemSellInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemSellInfo(ItemSellInfo other) : this() {
      unType_ = other.unType_;
      unNum_ = other.unNum_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemSellInfo Clone() {
      return new ItemSellInfo(this);
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 1;
    private int unType_;
    /// <summary>
    /// 类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    /// <summary>Field number for the "unNum" field.</summary>
    public const int UnNumFieldNumber = 2;
    private int unNum_;
    /// <summary>
    /// 数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnNum {
      get { return unNum_; }
      set {
        unNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemSellInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemSellInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnType != other.UnType) return false;
      if (UnNum != other.UnNum) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnType != 0) hash ^= UnType.GetHashCode();
      if (UnNum != 0) hash ^= UnNum.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnType);
      }
      if (UnNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnNum);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      if (UnNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnNum);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemSellInfo other) {
      if (other == null) {
        return;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
      if (other.UnNum != 0) {
        UnNum = other.UnNum;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnType = input.ReadInt32();
            break;
          }
          case 16: {
            UnNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：道具出售
  /// _MSG_ITEM_SELL_C
  /// </summary>
  public sealed partial class PMsgItemSellC : pb::IMessage<PMsgItemSellC> {
    private static readonly pb::MessageParser<PMsgItemSellC> _parser = new pb::MessageParser<PMsgItemSellC>(() => new PMsgItemSellC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgItemSellC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgItemReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgItemSellC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgItemSellC(PMsgItemSellC other) : this() {
      cInfo_ = other.cInfo_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgItemSellC Clone() {
      return new PMsgItemSellC(this);
    }

    /// <summary>Field number for the "cInfo" field.</summary>
    public const int CInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Sw.ItemSellInfo> _repeated_cInfo_codec
        = pb::FieldCodec.ForMessage(10, global::Sw.ItemSellInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.ItemSellInfo> cInfo_ = new pbc::RepeatedField<global::Sw.ItemSellInfo>();
    /// <summary>
    /// 出售的道具信息列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.ItemSellInfo> CInfo {
      get { return cInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgItemSellC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgItemSellC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!cInfo_.Equals(other.cInfo_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= cInfo_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      cInfo_.WriteTo(output, _repeated_cInfo_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += cInfo_.CalculateSize(_repeated_cInfo_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgItemSellC other) {
      if (other == null) {
        return;
      }
      cInfo_.Add(other.cInfo_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            cInfo_.AddEntriesFrom(input, _repeated_cInfo_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：道具出售回复
  /// _MSG_ITEM_SELL_S
  /// </summary>
  public sealed partial class PMsgItemSellS : pb::IMessage<PMsgItemSellS> {
    private static readonly pb::MessageParser<PMsgItemSellS> _parser = new pb::MessageParser<PMsgItemSellS>(() => new PMsgItemSellS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgItemSellS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgItemReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgItemSellS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgItemSellS(PMsgItemSellS other) : this() {
      cInfo_ = other.cInfo_.Clone();
      unCoin_ = other.unCoin_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgItemSellS Clone() {
      return new PMsgItemSellS(this);
    }

    /// <summary>Field number for the "cInfo" field.</summary>
    public const int CInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Sw.ItemSellInfo> _repeated_cInfo_codec
        = pb::FieldCodec.ForMessage(10, global::Sw.ItemSellInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.ItemSellInfo> cInfo_ = new pbc::RepeatedField<global::Sw.ItemSellInfo>();
    /// <summary>
    /// 出售的道具信息列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.ItemSellInfo> CInfo {
      get { return cInfo_; }
    }

    /// <summary>Field number for the "unCoin" field.</summary>
    public const int UnCoinFieldNumber = 2;
    private int unCoin_;
    /// <summary>
    /// 获得的铜币总数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnCoin {
      get { return unCoin_; }
      set {
        unCoin_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgItemSellS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgItemSellS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!cInfo_.Equals(other.cInfo_)) return false;
      if (UnCoin != other.UnCoin) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= cInfo_.GetHashCode();
      if (UnCoin != 0) hash ^= UnCoin.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      cInfo_.WriteTo(output, _repeated_cInfo_codec);
      if (UnCoin != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnCoin);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += cInfo_.CalculateSize(_repeated_cInfo_codec);
      if (UnCoin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnCoin);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgItemSellS other) {
      if (other == null) {
        return;
      }
      cInfo_.Add(other.cInfo_);
      if (other.UnCoin != 0) {
        UnCoin = other.UnCoin;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            cInfo_.AddEntriesFrom(input, _repeated_cInfo_codec);
            break;
          }
          case 16: {
            UnCoin = input.ReadInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：获得一种新道具
  /// _MSG_ITEM_SYN_NEW_ITEM_S
  /// </summary>
  public sealed partial class PMsgSynNewItemS : pb::IMessage<PMsgSynNewItemS> {
    private static readonly pb::MessageParser<PMsgSynNewItemS> _parser = new pb::MessageParser<PMsgSynNewItemS>(() => new PMsgSynNewItemS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgSynNewItemS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgItemReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSynNewItemS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSynNewItemS(PMsgSynNewItemS other) : this() {
      unId_ = other.unId_;
      unType_ = other.unType_;
      unNum_ = other.unNum_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSynNewItemS Clone() {
      return new PMsgSynNewItemS(this);
    }

    /// <summary>Field number for the "unId" field.</summary>
    public const int UnIdFieldNumber = 1;
    private uint unId_;
    /// <summary>
    /// id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnId {
      get { return unId_; }
      set {
        unId_ = value;
      }
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 2;
    private uint unType_;
    /// <summary>
    /// 类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    /// <summary>Field number for the "unNum" field.</summary>
    public const int UnNumFieldNumber = 3;
    private uint unNum_;
    /// <summary>
    /// 数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnNum {
      get { return unNum_; }
      set {
        unNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgSynNewItemS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgSynNewItemS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnId != other.UnId) return false;
      if (UnType != other.UnType) return false;
      if (UnNum != other.UnNum) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnId != 0) hash ^= UnId.GetHashCode();
      if (UnType != 0) hash ^= UnType.GetHashCode();
      if (UnNum != 0) hash ^= UnNum.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnId);
      }
      if (UnType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(UnType);
      }
      if (UnNum != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(UnNum);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnId);
      }
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnType);
      }
      if (UnNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnNum);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgSynNewItemS other) {
      if (other == null) {
        return;
      }
      if (other.UnId != 0) {
        UnId = other.UnId;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
      if (other.UnNum != 0) {
        UnNum = other.UnNum;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnId = input.ReadUInt32();
            break;
          }
          case 16: {
            UnType = input.ReadUInt32();
            break;
          }
          case 24: {
            UnNum = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
