// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/PMsgTower.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Sw {

  /// <summary>Holder for reflection information generated from protos/PMsgTower.proto</summary>
  public static partial class PMsgTowerReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/PMsgTower.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PMsgTowerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZwcm90b3MvUE1zZ1Rvd2VyLnByb3RvEgJzdyIrChVQTXNnVG93ZXJCYXR0",
            "bGVRdWVyeUMSEgoKdW5SZXNlcnZlZBgBIAEoBSJEChVQTXNnVG93ZXJCYXR0",
            "bGVRdWVyeVMSFwoPdW5EYWlseUNvbXBsZXRlGAEgASgFEhIKCnVuTWF4TGV2",
            "ZWwYAiABKAUiQgoVUE1zZ1Rvd2VyQmF0dGxlU3RhcnRDEhcKD3VuVG93ZXJC",
            "YXR0bGVJZBgBIAEoBRIQCgh1bkhlcm9JZBgCIAMoBSJECg1Ub3dlckRyb3BJ",
            "dGVtEg4KBnVuVHlwZRgBIAEoBRIQCgh1bkl0ZW1JZBgCIAEoBRIRCgl1bkl0",
            "ZW1OdW0YAyABKAUiugEKFVBNc2dUb3dlckJhdHRsZVN0YXJ0UxIXCg91blRv",
            "d2VyQmF0dGxlSWQYASABKAUSEgoKdW5Ecm9wQ29pbhgCIAEoBRIRCgl1bkRy",
            "b3BFeHAYAyABKAUSGAoQdW5Ecm9wUm95YWxCYWRnZRgEIAEoBRIgCgVjRHJv",
            "cBgFIAMoCzIRLnN3LlRvd2VyRHJvcEl0ZW0SEAoIdW5IZXJvSWQYBiADKAUS",
            "EwoLdW5FcnJvckNvZGUYYyABKAUiewoYUE1zZ1Rvd2VyQmF0dGxlQ29tcGxl",
            "dGVDEhcKD3VuVG93ZXJCYXR0bGVJZBgBIAEoBRIRCgl1blZpY3RvcnkYAiAB",
            "KAUSEAoIdW5EaWVOdW0YBCABKA0SEQoJdW5LaWxsTnVtGAUgASgNEg4KBnVu",
            "VGltZRgGIAEoDSJrChhQTXNnVG93ZXJCYXR0bGVDb21wbGV0ZVMSFwoPdW5U",
            "b3dlckJhdHRsZUlkGAEgASgFEhEKCXVuVmljdG9yeRgCIAEoBRIOCgZ1blRp",
            "bWUYAyABKA0SEwoLdW5FcnJvckNvZGUYYyABKAUiJgoTUE1zZ1Rvd2VyUmFu",
            "a1F1ZXJ5QxIPCgd1bkxldmVsGAEgASgFImEKCVRvd2VyUmFuaxIOCgZ1blJh",
            "bmsYASABKAUSEAoIdW5Sb2xlSWQYAiABKAMSEgoKdW5Sb2xlVHlwZRgDIAEo",
            "BRIOCgZzek5hbWUYBCABKAkSDgoGdW5EYXRhGAUgASgFIlUKE1BNc2dUb3dl",
            "clJhbmtRdWVyeVMSDwoHdW5MZXZlbBgBIAEoBRIPCgd1bkNvdW50GAIgASgF",
            "EhwKBWNSYW5rGAMgAygLMg0uc3cuVG93ZXJSYW5rIikKFlBNc2dUb3dlclVz",
            "ZVRpbWVRdWVyeUMSDwoHdW5MZXZlbBgBIAEoBSI8ChZQTXNnVG93ZXJVc2VU",
            "aW1lUXVlcnlTEg8KB3VuTGV2ZWwYASABKAUSEQoJdW5Vc2VUaW1lGAIgASgF",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgTowerBattleQueryC), global::Sw.PMsgTowerBattleQueryC.Parser, new[]{ "UnReserved" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgTowerBattleQueryS), global::Sw.PMsgTowerBattleQueryS.Parser, new[]{ "UnDailyComplete", "UnMaxLevel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgTowerBattleStartC), global::Sw.PMsgTowerBattleStartC.Parser, new[]{ "UnTowerBattleId", "UnHeroId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.TowerDropItem), global::Sw.TowerDropItem.Parser, new[]{ "UnType", "UnItemId", "UnItemNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgTowerBattleStartS), global::Sw.PMsgTowerBattleStartS.Parser, new[]{ "UnTowerBattleId", "UnDropCoin", "UnDropExp", "UnDropRoyalBadge", "CDrop", "UnHeroId", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgTowerBattleCompleteC), global::Sw.PMsgTowerBattleCompleteC.Parser, new[]{ "UnTowerBattleId", "UnVictory", "UnDieNum", "UnKillNum", "UnTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgTowerBattleCompleteS), global::Sw.PMsgTowerBattleCompleteS.Parser, new[]{ "UnTowerBattleId", "UnVictory", "UnTime", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgTowerRankQueryC), global::Sw.PMsgTowerRankQueryC.Parser, new[]{ "UnLevel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.TowerRank), global::Sw.TowerRank.Parser, new[]{ "UnRank", "UnRoleId", "UnRoleType", "SzName", "UnData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgTowerRankQueryS), global::Sw.PMsgTowerRankQueryS.Parser, new[]{ "UnLevel", "UnCount", "CRank" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgTowerUseTimeQueryC), global::Sw.PMsgTowerUseTimeQueryC.Parser, new[]{ "UnLevel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgTowerUseTimeQueryS), global::Sw.PMsgTowerUseTimeQueryS.Parser, new[]{ "UnLevel", "UnUseTime" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 客户端：查询紫禁之巅副本信息
  /// _MSG_TOWER_BATTLE_QUERY_C
  /// </summary>
  public sealed partial class PMsgTowerBattleQueryC : pb::IMessage<PMsgTowerBattleQueryC> {
    private static readonly pb::MessageParser<PMsgTowerBattleQueryC> _parser = new pb::MessageParser<PMsgTowerBattleQueryC>(() => new PMsgTowerBattleQueryC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgTowerBattleQueryC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgTowerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerBattleQueryC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerBattleQueryC(PMsgTowerBattleQueryC other) : this() {
      unReserved_ = other.unReserved_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerBattleQueryC Clone() {
      return new PMsgTowerBattleQueryC(this);
    }

    /// <summary>Field number for the "unReserved" field.</summary>
    public const int UnReservedFieldNumber = 1;
    private int unReserved_;
    /// <summary>
    /// 保留字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnReserved {
      get { return unReserved_; }
      set {
        unReserved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgTowerBattleQueryC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgTowerBattleQueryC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnReserved != other.UnReserved) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnReserved != 0) hash ^= UnReserved.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnReserved != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnReserved);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnReserved != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnReserved);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgTowerBattleQueryC other) {
      if (other == null) {
        return;
      }
      if (other.UnReserved != 0) {
        UnReserved = other.UnReserved;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnReserved = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：查询紫禁之巅副本信息回复
  /// _MSG_TOWER_BATTLE_QUERY_S
  /// </summary>
  public sealed partial class PMsgTowerBattleQueryS : pb::IMessage<PMsgTowerBattleQueryS> {
    private static readonly pb::MessageParser<PMsgTowerBattleQueryS> _parser = new pb::MessageParser<PMsgTowerBattleQueryS>(() => new PMsgTowerBattleQueryS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgTowerBattleQueryS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgTowerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerBattleQueryS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerBattleQueryS(PMsgTowerBattleQueryS other) : this() {
      unDailyComplete_ = other.unDailyComplete_;
      unMaxLevel_ = other.unMaxLevel_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerBattleQueryS Clone() {
      return new PMsgTowerBattleQueryS(this);
    }

    /// <summary>Field number for the "unDailyComplete" field.</summary>
    public const int UnDailyCompleteFieldNumber = 1;
    private int unDailyComplete_;
    /// <summary>
    /// 当日完成次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnDailyComplete {
      get { return unDailyComplete_; }
      set {
        unDailyComplete_ = value;
      }
    }

    /// <summary>Field number for the "unMaxLevel" field.</summary>
    public const int UnMaxLevelFieldNumber = 2;
    private int unMaxLevel_;
    /// <summary>
    /// 已通关的最高等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnMaxLevel {
      get { return unMaxLevel_; }
      set {
        unMaxLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgTowerBattleQueryS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgTowerBattleQueryS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnDailyComplete != other.UnDailyComplete) return false;
      if (UnMaxLevel != other.UnMaxLevel) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnDailyComplete != 0) hash ^= UnDailyComplete.GetHashCode();
      if (UnMaxLevel != 0) hash ^= UnMaxLevel.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnDailyComplete != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnDailyComplete);
      }
      if (UnMaxLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnMaxLevel);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnDailyComplete != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnDailyComplete);
      }
      if (UnMaxLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnMaxLevel);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgTowerBattleQueryS other) {
      if (other == null) {
        return;
      }
      if (other.UnDailyComplete != 0) {
        UnDailyComplete = other.UnDailyComplete;
      }
      if (other.UnMaxLevel != 0) {
        UnMaxLevel = other.UnMaxLevel;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnDailyComplete = input.ReadInt32();
            break;
          }
          case 16: {
            UnMaxLevel = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：开始紫禁之巅副本
  /// _MSG_TOWER_BATTLE_START_C
  /// </summary>
  public sealed partial class PMsgTowerBattleStartC : pb::IMessage<PMsgTowerBattleStartC> {
    private static readonly pb::MessageParser<PMsgTowerBattleStartC> _parser = new pb::MessageParser<PMsgTowerBattleStartC>(() => new PMsgTowerBattleStartC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgTowerBattleStartC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgTowerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerBattleStartC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerBattleStartC(PMsgTowerBattleStartC other) : this() {
      unTowerBattleId_ = other.unTowerBattleId_;
      unHeroId_ = other.unHeroId_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerBattleStartC Clone() {
      return new PMsgTowerBattleStartC(this);
    }

    /// <summary>Field number for the "unTowerBattleId" field.</summary>
    public const int UnTowerBattleIdFieldNumber = 1;
    private int unTowerBattleId_;
    /// <summary>
    /// 副本id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnTowerBattleId {
      get { return unTowerBattleId_; }
      set {
        unTowerBattleId_ = value;
      }
    }

    /// <summary>Field number for the "unHeroId" field.</summary>
    public const int UnHeroIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_unHeroId_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> unHeroId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 出战伙伴id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> UnHeroId {
      get { return unHeroId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgTowerBattleStartC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgTowerBattleStartC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnTowerBattleId != other.UnTowerBattleId) return false;
      if(!unHeroId_.Equals(other.unHeroId_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnTowerBattleId != 0) hash ^= UnTowerBattleId.GetHashCode();
      hash ^= unHeroId_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnTowerBattleId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnTowerBattleId);
      }
      unHeroId_.WriteTo(output, _repeated_unHeroId_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnTowerBattleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnTowerBattleId);
      }
      size += unHeroId_.CalculateSize(_repeated_unHeroId_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgTowerBattleStartC other) {
      if (other == null) {
        return;
      }
      if (other.UnTowerBattleId != 0) {
        UnTowerBattleId = other.UnTowerBattleId;
      }
      unHeroId_.Add(other.unHeroId_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnTowerBattleId = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            unHeroId_.AddEntriesFrom(input, _repeated_unHeroId_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 掉落
  /// </summary>
  public sealed partial class TowerDropItem : pb::IMessage<TowerDropItem> {
    private static readonly pb::MessageParser<TowerDropItem> _parser = new pb::MessageParser<TowerDropItem>(() => new TowerDropItem());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TowerDropItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgTowerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TowerDropItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TowerDropItem(TowerDropItem other) : this() {
      unType_ = other.unType_;
      unItemId_ = other.unItemId_;
      unItemNum_ = other.unItemNum_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TowerDropItem Clone() {
      return new TowerDropItem(this);
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 1;
    private int unType_;
    /// <summary>
    /// 掉落物品类型(UNITE_TYPE)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    /// <summary>Field number for the "unItemId" field.</summary>
    public const int UnItemIdFieldNumber = 2;
    private int unItemId_;
    /// <summary>
    /// 掉落物品ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnItemId {
      get { return unItemId_; }
      set {
        unItemId_ = value;
      }
    }

    /// <summary>Field number for the "unItemNum" field.</summary>
    public const int UnItemNumFieldNumber = 3;
    private int unItemNum_;
    /// <summary>
    /// 掉落物品数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnItemNum {
      get { return unItemNum_; }
      set {
        unItemNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TowerDropItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TowerDropItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnType != other.UnType) return false;
      if (UnItemId != other.UnItemId) return false;
      if (UnItemNum != other.UnItemNum) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnType != 0) hash ^= UnType.GetHashCode();
      if (UnItemId != 0) hash ^= UnItemId.GetHashCode();
      if (UnItemNum != 0) hash ^= UnItemNum.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnType);
      }
      if (UnItemId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnItemId);
      }
      if (UnItemNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnItemNum);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      if (UnItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnItemId);
      }
      if (UnItemNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnItemNum);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TowerDropItem other) {
      if (other == null) {
        return;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
      if (other.UnItemId != 0) {
        UnItemId = other.UnItemId;
      }
      if (other.UnItemNum != 0) {
        UnItemNum = other.UnItemNum;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnType = input.ReadInt32();
            break;
          }
          case 16: {
            UnItemId = input.ReadInt32();
            break;
          }
          case 24: {
            UnItemNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：开始紫禁之巅副本回复
  /// _MSG_TOWER_BATTLE_START_S
  /// </summary>
  public sealed partial class PMsgTowerBattleStartS : pb::IMessage<PMsgTowerBattleStartS> {
    private static readonly pb::MessageParser<PMsgTowerBattleStartS> _parser = new pb::MessageParser<PMsgTowerBattleStartS>(() => new PMsgTowerBattleStartS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgTowerBattleStartS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgTowerReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerBattleStartS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerBattleStartS(PMsgTowerBattleStartS other) : this() {
      unTowerBattleId_ = other.unTowerBattleId_;
      unDropCoin_ = other.unDropCoin_;
      unDropExp_ = other.unDropExp_;
      unDropRoyalBadge_ = other.unDropRoyalBadge_;
      cDrop_ = other.cDrop_.Clone();
      unHeroId_ = other.unHeroId_.Clone();
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerBattleStartS Clone() {
      return new PMsgTowerBattleStartS(this);
    }

    /// <summary>Field number for the "unTowerBattleId" field.</summary>
    public const int UnTowerBattleIdFieldNumber = 1;
    private int unTowerBattleId_;
    /// <summary>
    /// 副本id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnTowerBattleId {
      get { return unTowerBattleId_; }
      set {
        unTowerBattleId_ = value;
      }
    }

    /// <summary>Field number for the "unDropCoin" field.</summary>
    public const int UnDropCoinFieldNumber = 2;
    private int unDropCoin_;
    /// <summary>
    /// 掉落铜币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnDropCoin {
      get { return unDropCoin_; }
      set {
        unDropCoin_ = value;
      }
    }

    /// <summary>Field number for the "unDropExp" field.</summary>
    public const int UnDropExpFieldNumber = 3;
    private int unDropExp_;
    /// <summary>
    /// 掉落经验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnDropExp {
      get { return unDropExp_; }
      set {
        unDropExp_ = value;
      }
    }

    /// <summary>Field number for the "unDropRoyalBadge" field.</summary>
    public const int UnDropRoyalBadgeFieldNumber = 4;
    private int unDropRoyalBadge_;
    /// <summary>
    /// 皇城徽章
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnDropRoyalBadge {
      get { return unDropRoyalBadge_; }
      set {
        unDropRoyalBadge_ = value;
      }
    }

    /// <summary>Field number for the "cDrop" field.</summary>
    public const int CDropFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Sw.TowerDropItem> _repeated_cDrop_codec
        = pb::FieldCodec.ForMessage(42, global::Sw.TowerDropItem.Parser);
    private readonly pbc::RepeatedField<global::Sw.TowerDropItem> cDrop_ = new pbc::RepeatedField<global::Sw.TowerDropItem>();
    /// <summary>
    /// 掉落信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.TowerDropItem> CDrop {
      get { return cDrop_; }
    }

    /// <summary>Field number for the "unHeroId" field.</summary>
    public const int UnHeroIdFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_unHeroId_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> unHeroId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 出战伙伴id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> UnHeroId {
      get { return unHeroId_; }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgTowerBattleStartS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgTowerBattleStartS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnTowerBattleId != other.UnTowerBattleId) return false;
      if (UnDropCoin != other.UnDropCoin) return false;
      if (UnDropExp != other.UnDropExp) return false;
      if (UnDropRoyalBadge != other.UnDropRoyalBadge) return false;
      if(!cDrop_.Equals(other.cDrop_)) return false;
      if(!unHeroId_.Equals(other.unHeroId_)) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnTowerBattleId != 0) hash ^= UnTowerBattleId.GetHashCode();
      if (UnDropCoin != 0) hash ^= UnDropCoin.GetHashCode();
      if (UnDropExp != 0) hash ^= UnDropExp.GetHashCode();
      if (UnDropRoyalBadge != 0) hash ^= UnDropRoyalBadge.GetHashCode();
      hash ^= cDrop_.GetHashCode();
      hash ^= unHeroId_.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnTowerBattleId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnTowerBattleId);
      }
      if (UnDropCoin != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnDropCoin);
      }
      if (UnDropExp != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnDropExp);
      }
      if (UnDropRoyalBadge != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UnDropRoyalBadge);
      }
      cDrop_.WriteTo(output, _repeated_cDrop_codec);
      unHeroId_.WriteTo(output, _repeated_unHeroId_codec);
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnTowerBattleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnTowerBattleId);
      }
      if (UnDropCoin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnDropCoin);
      }
      if (UnDropExp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnDropExp);
      }
      if (UnDropRoyalBadge != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnDropRoyalBadge);
      }
      size += cDrop_.CalculateSize(_repeated_cDrop_codec);
      size += unHeroId_.CalculateSize(_repeated_unHeroId_codec);
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgTowerBattleStartS other) {
      if (other == null) {
        return;
      }
      if (other.UnTowerBattleId != 0) {
        UnTowerBattleId = other.UnTowerBattleId;
      }
      if (other.UnDropCoin != 0) {
        UnDropCoin = other.UnDropCoin;
      }
      if (other.UnDropExp != 0) {
        UnDropExp = other.UnDropExp;
      }
      if (other.UnDropRoyalBadge != 0) {
        UnDropRoyalBadge = other.UnDropRoyalBadge;
      }
      cDrop_.Add(other.cDrop_);
      unHeroId_.Add(other.unHeroId_);
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnTowerBattleId = input.ReadInt32();
            break;
          }
          case 16: {
            UnDropCoin = input.ReadInt32();
            break;
          }
          case 24: {
            UnDropExp = input.ReadInt32();
            break;
          }
          case 32: {
            UnDropRoyalBadge = input.ReadInt32();
            break;
          }
          case 42: {
            cDrop_.AddEntriesFrom(input, _repeated_cDrop_codec);
            break;
          }
          case 50:
          case 48: {
            unHeroId_.AddEntriesFrom(input, _repeated_unHeroId_codec);
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：紫禁之巅副本完成
  /// _MSG_TOWER_BATTLE_COMPLETE_C
  /// </summary>
  public sealed partial class PMsgTowerBattleCompleteC : pb::IMessage<PMsgTowerBattleCompleteC> {
    private static readonly pb::MessageParser<PMsgTowerBattleCompleteC> _parser = new pb::MessageParser<PMsgTowerBattleCompleteC>(() => new PMsgTowerBattleCompleteC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgTowerBattleCompleteC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgTowerReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerBattleCompleteC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerBattleCompleteC(PMsgTowerBattleCompleteC other) : this() {
      unTowerBattleId_ = other.unTowerBattleId_;
      unVictory_ = other.unVictory_;
      unDieNum_ = other.unDieNum_;
      unKillNum_ = other.unKillNum_;
      unTime_ = other.unTime_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerBattleCompleteC Clone() {
      return new PMsgTowerBattleCompleteC(this);
    }

    /// <summary>Field number for the "unTowerBattleId" field.</summary>
    public const int UnTowerBattleIdFieldNumber = 1;
    private int unTowerBattleId_;
    /// <summary>
    /// 副本id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnTowerBattleId {
      get { return unTowerBattleId_; }
      set {
        unTowerBattleId_ = value;
      }
    }

    /// <summary>Field number for the "unVictory" field.</summary>
    public const int UnVictoryFieldNumber = 2;
    private int unVictory_;
    /// <summary>
    /// 胜利标志：0-战斗失败，1-战斗胜利
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnVictory {
      get { return unVictory_; }
      set {
        unVictory_ = value;
      }
    }

    /// <summary>Field number for the "unDieNum" field.</summary>
    public const int UnDieNumFieldNumber = 4;
    private uint unDieNum_;
    /// <summary>
    /// 死亡次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnDieNum {
      get { return unDieNum_; }
      set {
        unDieNum_ = value;
      }
    }

    /// <summary>Field number for the "unKillNum" field.</summary>
    public const int UnKillNumFieldNumber = 5;
    private uint unKillNum_;
    /// <summary>
    /// 击杀怪物数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnKillNum {
      get { return unKillNum_; }
      set {
        unKillNum_ = value;
      }
    }

    /// <summary>Field number for the "unTime" field.</summary>
    public const int UnTimeFieldNumber = 6;
    private uint unTime_;
    /// <summary>
    /// 副本耗时
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnTime {
      get { return unTime_; }
      set {
        unTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgTowerBattleCompleteC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgTowerBattleCompleteC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnTowerBattleId != other.UnTowerBattleId) return false;
      if (UnVictory != other.UnVictory) return false;
      if (UnDieNum != other.UnDieNum) return false;
      if (UnKillNum != other.UnKillNum) return false;
      if (UnTime != other.UnTime) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnTowerBattleId != 0) hash ^= UnTowerBattleId.GetHashCode();
      if (UnVictory != 0) hash ^= UnVictory.GetHashCode();
      if (UnDieNum != 0) hash ^= UnDieNum.GetHashCode();
      if (UnKillNum != 0) hash ^= UnKillNum.GetHashCode();
      if (UnTime != 0) hash ^= UnTime.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnTowerBattleId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnTowerBattleId);
      }
      if (UnVictory != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnVictory);
      }
      if (UnDieNum != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(UnDieNum);
      }
      if (UnKillNum != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(UnKillNum);
      }
      if (UnTime != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(UnTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnTowerBattleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnTowerBattleId);
      }
      if (UnVictory != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnVictory);
      }
      if (UnDieNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnDieNum);
      }
      if (UnKillNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnKillNum);
      }
      if (UnTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnTime);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgTowerBattleCompleteC other) {
      if (other == null) {
        return;
      }
      if (other.UnTowerBattleId != 0) {
        UnTowerBattleId = other.UnTowerBattleId;
      }
      if (other.UnVictory != 0) {
        UnVictory = other.UnVictory;
      }
      if (other.UnDieNum != 0) {
        UnDieNum = other.UnDieNum;
      }
      if (other.UnKillNum != 0) {
        UnKillNum = other.UnKillNum;
      }
      if (other.UnTime != 0) {
        UnTime = other.UnTime;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnTowerBattleId = input.ReadInt32();
            break;
          }
          case 16: {
            UnVictory = input.ReadInt32();
            break;
          }
          case 32: {
            UnDieNum = input.ReadUInt32();
            break;
          }
          case 40: {
            UnKillNum = input.ReadUInt32();
            break;
          }
          case 48: {
            UnTime = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：紫禁之巅副本完成回复
  /// _MSG_TOWER_BATTLE_COMPLETE_S
  /// </summary>
  public sealed partial class PMsgTowerBattleCompleteS : pb::IMessage<PMsgTowerBattleCompleteS> {
    private static readonly pb::MessageParser<PMsgTowerBattleCompleteS> _parser = new pb::MessageParser<PMsgTowerBattleCompleteS>(() => new PMsgTowerBattleCompleteS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgTowerBattleCompleteS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgTowerReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerBattleCompleteS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerBattleCompleteS(PMsgTowerBattleCompleteS other) : this() {
      unTowerBattleId_ = other.unTowerBattleId_;
      unVictory_ = other.unVictory_;
      unTime_ = other.unTime_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerBattleCompleteS Clone() {
      return new PMsgTowerBattleCompleteS(this);
    }

    /// <summary>Field number for the "unTowerBattleId" field.</summary>
    public const int UnTowerBattleIdFieldNumber = 1;
    private int unTowerBattleId_;
    /// <summary>
    /// 副本id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnTowerBattleId {
      get { return unTowerBattleId_; }
      set {
        unTowerBattleId_ = value;
      }
    }

    /// <summary>Field number for the "unVictory" field.</summary>
    public const int UnVictoryFieldNumber = 2;
    private int unVictory_;
    /// <summary>
    /// 胜利标志：0-战斗失败，1-战斗胜利
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnVictory {
      get { return unVictory_; }
      set {
        unVictory_ = value;
      }
    }

    /// <summary>Field number for the "unTime" field.</summary>
    public const int UnTimeFieldNumber = 3;
    private uint unTime_;
    /// <summary>
    /// 副本耗时
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnTime {
      get { return unTime_; }
      set {
        unTime_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgTowerBattleCompleteS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgTowerBattleCompleteS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnTowerBattleId != other.UnTowerBattleId) return false;
      if (UnVictory != other.UnVictory) return false;
      if (UnTime != other.UnTime) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnTowerBattleId != 0) hash ^= UnTowerBattleId.GetHashCode();
      if (UnVictory != 0) hash ^= UnVictory.GetHashCode();
      if (UnTime != 0) hash ^= UnTime.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnTowerBattleId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnTowerBattleId);
      }
      if (UnVictory != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnVictory);
      }
      if (UnTime != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(UnTime);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnTowerBattleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnTowerBattleId);
      }
      if (UnVictory != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnVictory);
      }
      if (UnTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnTime);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgTowerBattleCompleteS other) {
      if (other == null) {
        return;
      }
      if (other.UnTowerBattleId != 0) {
        UnTowerBattleId = other.UnTowerBattleId;
      }
      if (other.UnVictory != 0) {
        UnVictory = other.UnVictory;
      }
      if (other.UnTime != 0) {
        UnTime = other.UnTime;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnTowerBattleId = input.ReadInt32();
            break;
          }
          case 16: {
            UnVictory = input.ReadInt32();
            break;
          }
          case 24: {
            UnTime = input.ReadUInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：查询紫禁之巅排行榜信息
  /// _MSG_TOWER_RANK_QUERY_C
  /// </summary>
  public sealed partial class PMsgTowerRankQueryC : pb::IMessage<PMsgTowerRankQueryC> {
    private static readonly pb::MessageParser<PMsgTowerRankQueryC> _parser = new pb::MessageParser<PMsgTowerRankQueryC>(() => new PMsgTowerRankQueryC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgTowerRankQueryC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgTowerReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerRankQueryC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerRankQueryC(PMsgTowerRankQueryC other) : this() {
      unLevel_ = other.unLevel_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerRankQueryC Clone() {
      return new PMsgTowerRankQueryC(this);
    }

    /// <summary>Field number for the "unLevel" field.</summary>
    public const int UnLevelFieldNumber = 1;
    private int unLevel_;
    /// <summary>
    /// 紫禁之巅等级：1~100
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnLevel {
      get { return unLevel_; }
      set {
        unLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgTowerRankQueryC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgTowerRankQueryC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnLevel != other.UnLevel) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnLevel != 0) hash ^= UnLevel.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnLevel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnLevel);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnLevel);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgTowerRankQueryC other) {
      if (other == null) {
        return;
      }
      if (other.UnLevel != 0) {
        UnLevel = other.UnLevel;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnLevel = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 紫禁之巅排行榜信息
  /// </summary>
  public sealed partial class TowerRank : pb::IMessage<TowerRank> {
    private static readonly pb::MessageParser<TowerRank> _parser = new pb::MessageParser<TowerRank>(() => new TowerRank());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TowerRank> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgTowerReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TowerRank() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TowerRank(TowerRank other) : this() {
      unRank_ = other.unRank_;
      unRoleId_ = other.unRoleId_;
      unRoleType_ = other.unRoleType_;
      szName_ = other.szName_;
      unData_ = other.unData_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TowerRank Clone() {
      return new TowerRank(this);
    }

    /// <summary>Field number for the "unRank" field.</summary>
    public const int UnRankFieldNumber = 1;
    private int unRank_;
    /// <summary>
    /// 名次
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnRank {
      get { return unRank_; }
      set {
        unRank_ = value;
      }
    }

    /// <summary>Field number for the "unRoleId" field.</summary>
    public const int UnRoleIdFieldNumber = 2;
    private long unRoleId_;
    /// <summary>
    /// 角色ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UnRoleId {
      get { return unRoleId_; }
      set {
        unRoleId_ = value;
      }
    }

    /// <summary>Field number for the "unRoleType" field.</summary>
    public const int UnRoleTypeFieldNumber = 3;
    private int unRoleType_;
    /// <summary>
    /// 角色类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnRoleType {
      get { return unRoleType_; }
      set {
        unRoleType_ = value;
      }
    }

    /// <summary>Field number for the "szName" field.</summary>
    public const int SzNameFieldNumber = 4;
    private string szName_ = "";
    /// <summary>
    /// 角色名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SzName {
      get { return szName_; }
      set {
        szName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unData" field.</summary>
    public const int UnDataFieldNumber = 5;
    private int unData_;
    /// <summary>
    /// 时长（秒）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnData {
      get { return unData_; }
      set {
        unData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TowerRank);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TowerRank other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnRank != other.UnRank) return false;
      if (UnRoleId != other.UnRoleId) return false;
      if (UnRoleType != other.UnRoleType) return false;
      if (SzName != other.SzName) return false;
      if (UnData != other.UnData) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnRank != 0) hash ^= UnRank.GetHashCode();
      if (UnRoleId != 0L) hash ^= UnRoleId.GetHashCode();
      if (UnRoleType != 0) hash ^= UnRoleType.GetHashCode();
      if (SzName.Length != 0) hash ^= SzName.GetHashCode();
      if (UnData != 0) hash ^= UnData.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnRank != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnRank);
      }
      if (UnRoleId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UnRoleId);
      }
      if (UnRoleType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnRoleType);
      }
      if (SzName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SzName);
      }
      if (UnData != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(UnData);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnRank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnRank);
      }
      if (UnRoleId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UnRoleId);
      }
      if (UnRoleType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnRoleType);
      }
      if (SzName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SzName);
      }
      if (UnData != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnData);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TowerRank other) {
      if (other == null) {
        return;
      }
      if (other.UnRank != 0) {
        UnRank = other.UnRank;
      }
      if (other.UnRoleId != 0L) {
        UnRoleId = other.UnRoleId;
      }
      if (other.UnRoleType != 0) {
        UnRoleType = other.UnRoleType;
      }
      if (other.SzName.Length != 0) {
        SzName = other.SzName;
      }
      if (other.UnData != 0) {
        UnData = other.UnData;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnRank = input.ReadInt32();
            break;
          }
          case 16: {
            UnRoleId = input.ReadInt64();
            break;
          }
          case 24: {
            UnRoleType = input.ReadInt32();
            break;
          }
          case 34: {
            SzName = input.ReadString();
            break;
          }
          case 40: {
            UnData = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：查询紫禁之巅排行榜信息回复
  /// _MSG_TOWER_RANK_QUERY_S
  /// </summary>
  public sealed partial class PMsgTowerRankQueryS : pb::IMessage<PMsgTowerRankQueryS> {
    private static readonly pb::MessageParser<PMsgTowerRankQueryS> _parser = new pb::MessageParser<PMsgTowerRankQueryS>(() => new PMsgTowerRankQueryS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgTowerRankQueryS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgTowerReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerRankQueryS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerRankQueryS(PMsgTowerRankQueryS other) : this() {
      unLevel_ = other.unLevel_;
      unCount_ = other.unCount_;
      cRank_ = other.cRank_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerRankQueryS Clone() {
      return new PMsgTowerRankQueryS(this);
    }

    /// <summary>Field number for the "unLevel" field.</summary>
    public const int UnLevelFieldNumber = 1;
    private int unLevel_;
    /// <summary>
    /// 紫禁之巅等级：1~100
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnLevel {
      get { return unLevel_; }
      set {
        unLevel_ = value;
      }
    }

    /// <summary>Field number for the "unCount" field.</summary>
    public const int UnCountFieldNumber = 2;
    private int unCount_;
    /// <summary>
    /// 数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnCount {
      get { return unCount_; }
      set {
        unCount_ = value;
      }
    }

    /// <summary>Field number for the "cRank" field.</summary>
    public const int CRankFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Sw.TowerRank> _repeated_cRank_codec
        = pb::FieldCodec.ForMessage(26, global::Sw.TowerRank.Parser);
    private readonly pbc::RepeatedField<global::Sw.TowerRank> cRank_ = new pbc::RepeatedField<global::Sw.TowerRank>();
    /// <summary>
    /// 排行信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.TowerRank> CRank {
      get { return cRank_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgTowerRankQueryS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgTowerRankQueryS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnLevel != other.UnLevel) return false;
      if (UnCount != other.UnCount) return false;
      if(!cRank_.Equals(other.cRank_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnLevel != 0) hash ^= UnLevel.GetHashCode();
      if (UnCount != 0) hash ^= UnCount.GetHashCode();
      hash ^= cRank_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnLevel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnLevel);
      }
      if (UnCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnCount);
      }
      cRank_.WriteTo(output, _repeated_cRank_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnLevel);
      }
      if (UnCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnCount);
      }
      size += cRank_.CalculateSize(_repeated_cRank_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgTowerRankQueryS other) {
      if (other == null) {
        return;
      }
      if (other.UnLevel != 0) {
        UnLevel = other.UnLevel;
      }
      if (other.UnCount != 0) {
        UnCount = other.UnCount;
      }
      cRank_.Add(other.cRank_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnLevel = input.ReadInt32();
            break;
          }
          case 16: {
            UnCount = input.ReadInt32();
            break;
          }
          case 26: {
            cRank_.AddEntriesFrom(input, _repeated_cRank_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：查询紫禁之巅战斗耗时最高记录
  /// _MSG_TOWER_USE_TIME_QUERY_C
  /// </summary>
  public sealed partial class PMsgTowerUseTimeQueryC : pb::IMessage<PMsgTowerUseTimeQueryC> {
    private static readonly pb::MessageParser<PMsgTowerUseTimeQueryC> _parser = new pb::MessageParser<PMsgTowerUseTimeQueryC>(() => new PMsgTowerUseTimeQueryC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgTowerUseTimeQueryC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgTowerReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerUseTimeQueryC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerUseTimeQueryC(PMsgTowerUseTimeQueryC other) : this() {
      unLevel_ = other.unLevel_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerUseTimeQueryC Clone() {
      return new PMsgTowerUseTimeQueryC(this);
    }

    /// <summary>Field number for the "unLevel" field.</summary>
    public const int UnLevelFieldNumber = 1;
    private int unLevel_;
    /// <summary>
    /// 紫禁之巅等级：1~100
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnLevel {
      get { return unLevel_; }
      set {
        unLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgTowerUseTimeQueryC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgTowerUseTimeQueryC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnLevel != other.UnLevel) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnLevel != 0) hash ^= UnLevel.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnLevel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnLevel);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnLevel);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgTowerUseTimeQueryC other) {
      if (other == null) {
        return;
      }
      if (other.UnLevel != 0) {
        UnLevel = other.UnLevel;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnLevel = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：查询紫禁之巅战斗耗时最高记录回复
  /// _MSG_TOWER_USE_TIME_QUERY_S
  /// </summary>
  public sealed partial class PMsgTowerUseTimeQueryS : pb::IMessage<PMsgTowerUseTimeQueryS> {
    private static readonly pb::MessageParser<PMsgTowerUseTimeQueryS> _parser = new pb::MessageParser<PMsgTowerUseTimeQueryS>(() => new PMsgTowerUseTimeQueryS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgTowerUseTimeQueryS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgTowerReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerUseTimeQueryS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerUseTimeQueryS(PMsgTowerUseTimeQueryS other) : this() {
      unLevel_ = other.unLevel_;
      unUseTime_ = other.unUseTime_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTowerUseTimeQueryS Clone() {
      return new PMsgTowerUseTimeQueryS(this);
    }

    /// <summary>Field number for the "unLevel" field.</summary>
    public const int UnLevelFieldNumber = 1;
    private int unLevel_;
    /// <summary>
    /// 紫禁之巅等级：1~100
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnLevel {
      get { return unLevel_; }
      set {
        unLevel_ = value;
      }
    }

    /// <summary>Field number for the "unUseTime" field.</summary>
    public const int UnUseTimeFieldNumber = 2;
    private int unUseTime_;
    /// <summary>
    /// 战斗耗时最高记录:0-没有数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnUseTime {
      get { return unUseTime_; }
      set {
        unUseTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgTowerUseTimeQueryS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgTowerUseTimeQueryS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnLevel != other.UnLevel) return false;
      if (UnUseTime != other.UnUseTime) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnLevel != 0) hash ^= UnLevel.GetHashCode();
      if (UnUseTime != 0) hash ^= UnUseTime.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnLevel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnLevel);
      }
      if (UnUseTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnUseTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnLevel);
      }
      if (UnUseTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnUseTime);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgTowerUseTimeQueryS other) {
      if (other == null) {
        return;
      }
      if (other.UnLevel != 0) {
        UnLevel = other.UnLevel;
      }
      if (other.UnUseTime != 0) {
        UnUseTime = other.UnUseTime;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnLevel = input.ReadInt32();
            break;
          }
          case 16: {
            UnUseTime = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
