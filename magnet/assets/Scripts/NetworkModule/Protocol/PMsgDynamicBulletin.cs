// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/PMsgDynamicBulletin.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Sw {

  /// <summary>Holder for reflection information generated from protos/PMsgDynamicBulletin.proto</summary>
  public static partial class PMsgDynamicBulletinReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/PMsgDynamicBulletin.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PMsgDynamicBulletinReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBwcm90b3MvUE1zZ0R5bmFtaWNCdWxsZXRpbi5wcm90bxICc3ci7AIKI1BN",
            "c2dTeW5EeW5hbWljQnVsbGV0aW5OZXdFcXVpcG1lbnRTEhIKCnVuSXRlbVR5",
            "cGUYASABKA0SEQoJdW5PcHRUeXBlGAIgASgNEg8KB3VuTGV2ZWwYAyABKA0S",
            "DwoHc3RyTmFtZRgEIAEoCRJNCg5jRXF1aXBtZW50SW5mbxgFIAEoCzI1LnN3",
            "LlBNc2dTeW5EeW5hbWljQnVsbGV0aW5OZXdFcXVpcG1lbnRTLkVxdWlwbWVu",
            "dEluZm8arAEKDUVxdWlwbWVudEluZm8SDAoEdW5JZBgBIAEoBRIOCgZ1blR5",
            "cGUYAiABKAUSEgoKdW5Qb3NpdGlvbhgDIAEoBRIVCg11bkVuY2hhbnRUaW1l",
            "GAQgASgFEhUKDXVuQmFzaWNPcHRpb24YBSADKAUSFAoMdW5CYXNpY1ZhbHVl",
            "GAYgAygFEhAKCHVuQXR0YWNrGAcgASgFEhMKC3VuVGltZXN0YW1wGAggASgF",
            "IvICCidQTXNnU3luRHluYW1pY0J1bGxldGluRW5jaGFudEVxdWlwbWVudFMS",
            "EgoKdW5JdGVtVHlwZRgBIAEoDRIPCgd1bkxldmVsGAIgASgNEg8KB3VuQ291",
            "bnQYAyABKA0SDwoHc3RyTmFtZRgEIAEoCRJRCg5jRXF1aXBtZW50SW5mbxgF",
            "IAEoCzI5LnN3LlBNc2dTeW5EeW5hbWljQnVsbGV0aW5FbmNoYW50RXF1aXBt",
            "ZW50Uy5FcXVpcG1lbnRJbmZvGqwBCg1FcXVpcG1lbnRJbmZvEgwKBHVuSWQY",
            "ASABKAUSDgoGdW5UeXBlGAIgASgFEhIKCnVuUG9zaXRpb24YAyABKAUSFQoN",
            "dW5FbmNoYW50VGltZRgEIAEoBRIVCg11bkJhc2ljT3B0aW9uGAUgAygFEhQK",
            "DHVuQmFzaWNWYWx1ZRgGIAMoBRIQCgh1bkF0dGFjaxgHIAEoBRITCgt1blRp",
            "bWVzdGFtcBgIIAEoBSLwAgomUE1zZ1N5bkR5bmFtaWNCdWxsZXRpbkV2b2x2",
            "ZUVxdWlwbWVudFMSEgoKdW5JdGVtVHlwZRgBIAEoDRIPCgd1bkxldmVsGAIg",
            "ASgNEg8KB3VuQ291bnQYAyABKA0SDwoHc3RyTmFtZRgEIAEoCRJQCg5jRXF1",
            "aXBtZW50SW5mbxgFIAEoCzI4LnN3LlBNc2dTeW5EeW5hbWljQnVsbGV0aW5F",
            "dm9sdmVFcXVpcG1lbnRTLkVxdWlwbWVudEluZm8arAEKDUVxdWlwbWVudElu",
            "Zm8SDAoEdW5JZBgBIAEoBRIOCgZ1blR5cGUYAiABKAUSEgoKdW5Qb3NpdGlv",
            "bhgDIAEoBRIVCg11bkVuY2hhbnRUaW1lGAQgASgFEhUKDXVuQmFzaWNPcHRp",
            "b24YBSADKAUSFAoMdW5CYXNpY1ZhbHVlGAYgAygFEhAKCHVuQXR0YWNrGAcg",
            "ASgFEhMKC3VuVGltZXN0YW1wGAggASgFIp4DCh5QTXNnU3luRHluYW1pY0J1",
            "bGxldGluTmV3SGVyb1MSEgoKdW5JdGVtVHlwZRgBIAEoDRIRCgl1bk9wdFR5",
            "cGUYAiABKA0SDwoHdW5MZXZlbBgDIAEoDRIPCgdzdHJOYW1lGAQgASgJEjoK",
            "BWNJbmZvGAUgASgLMisuc3cuUE1zZ1N5bkR5bmFtaWNCdWxsZXRpbk5ld0hl",
            "cm9TLkhlcm9JbmZvGjgKDUhlcm9Ta2lsbEluZm8SEQoJdW5Ta2lsbElkGAEg",
            "ASgFEhQKDHVuU2tpbGxMZXZlbBgCIAEoBRq8AQoISGVyb0luZm8SEAoIdW5I",
            "ZXJvSWQYASABKAUSDgoGdW5UeXBlGAIgASgFEg8KB3VuTGV2ZWwYAyABKAUS",
            "DgoGdWxsRXhwGAQgASgDEhUKDXVuQmFzZVNraWxsSWQYBSABKAUSRAoKY1Nr",
            "aWxsSW5mbxgGIAMoCzIwLnN3LlBNc2dTeW5EeW5hbWljQnVsbGV0aW5OZXdI",
            "ZXJvUy5IZXJvU2tpbGxJbmZvEhAKCHVuQXR0YWNrGAcgASgFIqUDCiFQTXNn",
            "U3luRHluYW1pY0J1bGxldGluRXZvbHZlSGVyb1MSEgoKdW5JdGVtVHlwZRgB",
            "IAEoDRIPCgd1bkxldmVsGAIgASgNEg8KB3VuQ291bnQYAyABKA0SDwoHc3Ry",
            "TmFtZRgEIAEoCRI9CgVjSW5mbxgFIAEoCzIuLnN3LlBNc2dTeW5EeW5hbWlj",
            "QnVsbGV0aW5Fdm9sdmVIZXJvUy5IZXJvSW5mbxo4Cg1IZXJvU2tpbGxJbmZv",
            "EhEKCXVuU2tpbGxJZBgBIAEoBRIUCgx1blNraWxsTGV2ZWwYAiABKAUavwEK",
            "CEhlcm9JbmZvEhAKCHVuSGVyb0lkGAEgASgFEg4KBnVuVHlwZRgCIAEoBRIP",
            "Cgd1bkxldmVsGAMgASgFEg4KBnVsbEV4cBgEIAEoAxIVCg11bkJhc2VTa2ls",
            "bElkGAUgASgFEkcKCmNTa2lsbEluZm8YBiADKAsyMy5zdy5QTXNnU3luRHlu",
            "YW1pY0J1bGxldGluRXZvbHZlSGVyb1MuSGVyb1NraWxsSW5mbxIQCgh1bkF0",
            "dGFjaxgHIAEoBWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgSynDynamicBulletinNewEquipmentS), global::Sw.PMsgSynDynamicBulletinNewEquipmentS.Parser, new[]{ "UnItemType", "UnOptType", "UnLevel", "StrName", "CEquipmentInfo" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgSynDynamicBulletinNewEquipmentS.Types.EquipmentInfo), global::Sw.PMsgSynDynamicBulletinNewEquipmentS.Types.EquipmentInfo.Parser, new[]{ "UnId", "UnType", "UnPosition", "UnEnchantTime", "UnBasicOption", "UnBasicValue", "UnAttack", "UnTimestamp" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgSynDynamicBulletinEnchantEquipmentS), global::Sw.PMsgSynDynamicBulletinEnchantEquipmentS.Parser, new[]{ "UnItemType", "UnLevel", "UnCount", "StrName", "CEquipmentInfo" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgSynDynamicBulletinEnchantEquipmentS.Types.EquipmentInfo), global::Sw.PMsgSynDynamicBulletinEnchantEquipmentS.Types.EquipmentInfo.Parser, new[]{ "UnId", "UnType", "UnPosition", "UnEnchantTime", "UnBasicOption", "UnBasicValue", "UnAttack", "UnTimestamp" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgSynDynamicBulletinEvolveEquipmentS), global::Sw.PMsgSynDynamicBulletinEvolveEquipmentS.Parser, new[]{ "UnItemType", "UnLevel", "UnCount", "StrName", "CEquipmentInfo" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgSynDynamicBulletinEvolveEquipmentS.Types.EquipmentInfo), global::Sw.PMsgSynDynamicBulletinEvolveEquipmentS.Types.EquipmentInfo.Parser, new[]{ "UnId", "UnType", "UnPosition", "UnEnchantTime", "UnBasicOption", "UnBasicValue", "UnAttack", "UnTimestamp" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgSynDynamicBulletinNewHeroS), global::Sw.PMsgSynDynamicBulletinNewHeroS.Parser, new[]{ "UnItemType", "UnOptType", "UnLevel", "StrName", "CInfo" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgSynDynamicBulletinNewHeroS.Types.HeroSkillInfo), global::Sw.PMsgSynDynamicBulletinNewHeroS.Types.HeroSkillInfo.Parser, new[]{ "UnSkillId", "UnSkillLevel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgSynDynamicBulletinNewHeroS.Types.HeroInfo), global::Sw.PMsgSynDynamicBulletinNewHeroS.Types.HeroInfo.Parser, new[]{ "UnHeroId", "UnType", "UnLevel", "UllExp", "UnBaseSkillId", "CSkillInfo", "UnAttack" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgSynDynamicBulletinEvolveHeroS), global::Sw.PMsgSynDynamicBulletinEvolveHeroS.Parser, new[]{ "UnItemType", "UnLevel", "UnCount", "StrName", "CInfo" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgSynDynamicBulletinEvolveHeroS.Types.HeroSkillInfo), global::Sw.PMsgSynDynamicBulletinEvolveHeroS.Types.HeroSkillInfo.Parser, new[]{ "UnSkillId", "UnSkillLevel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgSynDynamicBulletinEvolveHeroS.Types.HeroInfo), global::Sw.PMsgSynDynamicBulletinEvolveHeroS.Types.HeroInfo.Parser, new[]{ "UnHeroId", "UnType", "UnLevel", "UllExp", "UnBaseSkillId", "CSkillInfo", "UnAttack" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 服务器：同步新装备动态公告
  /// _MSG_SYN_DYNAMIC_BULLETIN_NEW_EQUIPMENT_S
  /// </summary>
  public sealed partial class PMsgSynDynamicBulletinNewEquipmentS : pb::IMessage<PMsgSynDynamicBulletinNewEquipmentS> {
    private static readonly pb::MessageParser<PMsgSynDynamicBulletinNewEquipmentS> _parser = new pb::MessageParser<PMsgSynDynamicBulletinNewEquipmentS>(() => new PMsgSynDynamicBulletinNewEquipmentS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgSynDynamicBulletinNewEquipmentS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgDynamicBulletinReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSynDynamicBulletinNewEquipmentS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSynDynamicBulletinNewEquipmentS(PMsgSynDynamicBulletinNewEquipmentS other) : this() {
      unItemType_ = other.unItemType_;
      unOptType_ = other.unOptType_;
      unLevel_ = other.unLevel_;
      strName_ = other.strName_;
      CEquipmentInfo = other.cEquipmentInfo_ != null ? other.CEquipmentInfo.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSynDynamicBulletinNewEquipmentS Clone() {
      return new PMsgSynDynamicBulletinNewEquipmentS(this);
    }

    /// <summary>Field number for the "unItemType" field.</summary>
    public const int UnItemTypeFieldNumber = 1;
    private uint unItemType_;
    /// <summary>
    /// 装备类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnItemType {
      get { return unItemType_; }
      set {
        unItemType_ = value;
      }
    }

    /// <summary>Field number for the "unOptType" field.</summary>
    public const int UnOptTypeFieldNumber = 2;
    private uint unOptType_;
    /// <summary>
    /// 装备来源
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnOptType {
      get { return unOptType_; }
      set {
        unOptType_ = value;
      }
    }

    /// <summary>Field number for the "unLevel" field.</summary>
    public const int UnLevelFieldNumber = 3;
    private uint unLevel_;
    /// <summary>
    /// Item_Equipment表Grade_b字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnLevel {
      get { return unLevel_; }
      set {
        unLevel_ = value;
      }
    }

    /// <summary>Field number for the "strName" field.</summary>
    public const int StrNameFieldNumber = 4;
    private string strName_ = "";
    /// <summary>
    /// 角色名称	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StrName {
      get { return strName_; }
      set {
        strName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cEquipmentInfo" field.</summary>
    public const int CEquipmentInfoFieldNumber = 5;
    private global::Sw.PMsgSynDynamicBulletinNewEquipmentS.Types.EquipmentInfo cEquipmentInfo_;
    /// <summary>
    /// 装备信息列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Sw.PMsgSynDynamicBulletinNewEquipmentS.Types.EquipmentInfo CEquipmentInfo {
      get { return cEquipmentInfo_; }
      set {
        cEquipmentInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgSynDynamicBulletinNewEquipmentS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgSynDynamicBulletinNewEquipmentS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnItemType != other.UnItemType) return false;
      if (UnOptType != other.UnOptType) return false;
      if (UnLevel != other.UnLevel) return false;
      if (StrName != other.StrName) return false;
      if (!object.Equals(CEquipmentInfo, other.CEquipmentInfo)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnItemType != 0) hash ^= UnItemType.GetHashCode();
      if (UnOptType != 0) hash ^= UnOptType.GetHashCode();
      if (UnLevel != 0) hash ^= UnLevel.GetHashCode();
      if (StrName.Length != 0) hash ^= StrName.GetHashCode();
      if (cEquipmentInfo_ != null) hash ^= CEquipmentInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnItemType != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnItemType);
      }
      if (UnOptType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(UnOptType);
      }
      if (UnLevel != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(UnLevel);
      }
      if (StrName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StrName);
      }
      if (cEquipmentInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CEquipmentInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnItemType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnItemType);
      }
      if (UnOptType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnOptType);
      }
      if (UnLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnLevel);
      }
      if (StrName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StrName);
      }
      if (cEquipmentInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CEquipmentInfo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgSynDynamicBulletinNewEquipmentS other) {
      if (other == null) {
        return;
      }
      if (other.UnItemType != 0) {
        UnItemType = other.UnItemType;
      }
      if (other.UnOptType != 0) {
        UnOptType = other.UnOptType;
      }
      if (other.UnLevel != 0) {
        UnLevel = other.UnLevel;
      }
      if (other.StrName.Length != 0) {
        StrName = other.StrName;
      }
      if (other.cEquipmentInfo_ != null) {
        if (cEquipmentInfo_ == null) {
          cEquipmentInfo_ = new global::Sw.PMsgSynDynamicBulletinNewEquipmentS.Types.EquipmentInfo();
        }
        CEquipmentInfo.MergeFrom(other.CEquipmentInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnItemType = input.ReadUInt32();
            break;
          }
          case 16: {
            UnOptType = input.ReadUInt32();
            break;
          }
          case 24: {
            UnLevel = input.ReadUInt32();
            break;
          }
          case 34: {
            StrName = input.ReadString();
            break;
          }
          case 42: {
            if (cEquipmentInfo_ == null) {
              cEquipmentInfo_ = new global::Sw.PMsgSynDynamicBulletinNewEquipmentS.Types.EquipmentInfo();
            }
            input.ReadMessage(cEquipmentInfo_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PMsgSynDynamicBulletinNewEquipmentS message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// 道具基本信息
      /// </summary>
      public sealed partial class EquipmentInfo : pb::IMessage<EquipmentInfo> {
        private static readonly pb::MessageParser<EquipmentInfo> _parser = new pb::MessageParser<EquipmentInfo>(() => new EquipmentInfo());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EquipmentInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Sw.PMsgSynDynamicBulletinNewEquipmentS.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EquipmentInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EquipmentInfo(EquipmentInfo other) : this() {
          unId_ = other.unId_;
          unType_ = other.unType_;
          unPosition_ = other.unPosition_;
          unEnchantTime_ = other.unEnchantTime_;
          unBasicOption_ = other.unBasicOption_.Clone();
          unBasicValue_ = other.unBasicValue_.Clone();
          unAttack_ = other.unAttack_;
          unTimestamp_ = other.unTimestamp_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EquipmentInfo Clone() {
          return new EquipmentInfo(this);
        }

        /// <summary>Field number for the "unId" field.</summary>
        public const int UnIdFieldNumber = 1;
        private int unId_;
        /// <summary>
        /// id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnId {
          get { return unId_; }
          set {
            unId_ = value;
          }
        }

        /// <summary>Field number for the "unType" field.</summary>
        public const int UnTypeFieldNumber = 2;
        private int unType_;
        /// <summary>
        /// 类型
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnType {
          get { return unType_; }
          set {
            unType_ = value;
          }
        }

        /// <summary>Field number for the "unPosition" field.</summary>
        public const int UnPositionFieldNumber = 3;
        private int unPosition_;
        /// <summary>
        /// 装备栏位
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnPosition {
          get { return unPosition_; }
          set {
            unPosition_ = value;
          }
        }

        /// <summary>Field number for the "unEnchantTime" field.</summary>
        public const int UnEnchantTimeFieldNumber = 4;
        private int unEnchantTime_;
        /// <summary>
        /// 强化次数
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnEnchantTime {
          get { return unEnchantTime_; }
          set {
            unEnchantTime_ = value;
          }
        }

        /// <summary>Field number for the "unBasicOption" field.</summary>
        public const int UnBasicOptionFieldNumber = 5;
        private static readonly pb::FieldCodec<int> _repeated_unBasicOption_codec
            = pb::FieldCodec.ForInt32(42);
        private readonly pbc::RepeatedField<int> unBasicOption_ = new pbc::RepeatedField<int>();
        /// <summary>
        /// 固定属性
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<int> UnBasicOption {
          get { return unBasicOption_; }
        }

        /// <summary>Field number for the "unBasicValue" field.</summary>
        public const int UnBasicValueFieldNumber = 6;
        private static readonly pb::FieldCodec<int> _repeated_unBasicValue_codec
            = pb::FieldCodec.ForInt32(50);
        private readonly pbc::RepeatedField<int> unBasicValue_ = new pbc::RepeatedField<int>();
        /// <summary>
        /// 固定属性值
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<int> UnBasicValue {
          get { return unBasicValue_; }
        }

        /// <summary>Field number for the "unAttack" field.</summary>
        public const int UnAttackFieldNumber = 7;
        private int unAttack_;
        /// <summary>
        /// 战斗力
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnAttack {
          get { return unAttack_; }
          set {
            unAttack_ = value;
          }
        }

        /// <summary>Field number for the "unTimestamp" field.</summary>
        public const int UnTimestampFieldNumber = 8;
        private int unTimestamp_;
        /// <summary>
        /// 有效期：>0表示剩余时间（秒）
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnTimestamp {
          get { return unTimestamp_; }
          set {
            unTimestamp_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EquipmentInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EquipmentInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UnId != other.UnId) return false;
          if (UnType != other.UnType) return false;
          if (UnPosition != other.UnPosition) return false;
          if (UnEnchantTime != other.UnEnchantTime) return false;
          if(!unBasicOption_.Equals(other.unBasicOption_)) return false;
          if(!unBasicValue_.Equals(other.unBasicValue_)) return false;
          if (UnAttack != other.UnAttack) return false;
          if (UnTimestamp != other.UnTimestamp) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (UnId != 0) hash ^= UnId.GetHashCode();
          if (UnType != 0) hash ^= UnType.GetHashCode();
          if (UnPosition != 0) hash ^= UnPosition.GetHashCode();
          if (UnEnchantTime != 0) hash ^= UnEnchantTime.GetHashCode();
          hash ^= unBasicOption_.GetHashCode();
          hash ^= unBasicValue_.GetHashCode();
          if (UnAttack != 0) hash ^= UnAttack.GetHashCode();
          if (UnTimestamp != 0) hash ^= UnTimestamp.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (UnId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(UnId);
          }
          if (UnType != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(UnType);
          }
          if (UnPosition != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(UnPosition);
          }
          if (UnEnchantTime != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(UnEnchantTime);
          }
          unBasicOption_.WriteTo(output, _repeated_unBasicOption_codec);
          unBasicValue_.WriteTo(output, _repeated_unBasicValue_codec);
          if (UnAttack != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(UnAttack);
          }
          if (UnTimestamp != 0) {
            output.WriteRawTag(64);
            output.WriteInt32(UnTimestamp);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (UnId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnId);
          }
          if (UnType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
          }
          if (UnPosition != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnPosition);
          }
          if (UnEnchantTime != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnEnchantTime);
          }
          size += unBasicOption_.CalculateSize(_repeated_unBasicOption_codec);
          size += unBasicValue_.CalculateSize(_repeated_unBasicValue_codec);
          if (UnAttack != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnAttack);
          }
          if (UnTimestamp != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnTimestamp);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EquipmentInfo other) {
          if (other == null) {
            return;
          }
          if (other.UnId != 0) {
            UnId = other.UnId;
          }
          if (other.UnType != 0) {
            UnType = other.UnType;
          }
          if (other.UnPosition != 0) {
            UnPosition = other.UnPosition;
          }
          if (other.UnEnchantTime != 0) {
            UnEnchantTime = other.UnEnchantTime;
          }
          unBasicOption_.Add(other.unBasicOption_);
          unBasicValue_.Add(other.unBasicValue_);
          if (other.UnAttack != 0) {
            UnAttack = other.UnAttack;
          }
          if (other.UnTimestamp != 0) {
            UnTimestamp = other.UnTimestamp;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 8: {
                UnId = input.ReadInt32();
                break;
              }
              case 16: {
                UnType = input.ReadInt32();
                break;
              }
              case 24: {
                UnPosition = input.ReadInt32();
                break;
              }
              case 32: {
                UnEnchantTime = input.ReadInt32();
                break;
              }
              case 42:
              case 40: {
                unBasicOption_.AddEntriesFrom(input, _repeated_unBasicOption_codec);
                break;
              }
              case 50:
              case 48: {
                unBasicValue_.AddEntriesFrom(input, _repeated_unBasicValue_codec);
                break;
              }
              case 56: {
                UnAttack = input.ReadInt32();
                break;
              }
              case 64: {
                UnTimestamp = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器：同步强化装备动态公告
  /// _MSG_SYN_DYNAMIC_BULLETIN_ENCHANT_EQUIPMENT_S
  /// </summary>
  public sealed partial class PMsgSynDynamicBulletinEnchantEquipmentS : pb::IMessage<PMsgSynDynamicBulletinEnchantEquipmentS> {
    private static readonly pb::MessageParser<PMsgSynDynamicBulletinEnchantEquipmentS> _parser = new pb::MessageParser<PMsgSynDynamicBulletinEnchantEquipmentS>(() => new PMsgSynDynamicBulletinEnchantEquipmentS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgSynDynamicBulletinEnchantEquipmentS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgDynamicBulletinReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSynDynamicBulletinEnchantEquipmentS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSynDynamicBulletinEnchantEquipmentS(PMsgSynDynamicBulletinEnchantEquipmentS other) : this() {
      unItemType_ = other.unItemType_;
      unLevel_ = other.unLevel_;
      unCount_ = other.unCount_;
      strName_ = other.strName_;
      CEquipmentInfo = other.cEquipmentInfo_ != null ? other.CEquipmentInfo.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSynDynamicBulletinEnchantEquipmentS Clone() {
      return new PMsgSynDynamicBulletinEnchantEquipmentS(this);
    }

    /// <summary>Field number for the "unItemType" field.</summary>
    public const int UnItemTypeFieldNumber = 1;
    private uint unItemType_;
    /// <summary>
    /// 装备类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnItemType {
      get { return unItemType_; }
      set {
        unItemType_ = value;
      }
    }

    /// <summary>Field number for the "unLevel" field.</summary>
    public const int UnLevelFieldNumber = 2;
    private uint unLevel_;
    /// <summary>
    /// Item_Equipment表Grade_b字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnLevel {
      get { return unLevel_; }
      set {
        unLevel_ = value;
      }
    }

    /// <summary>Field number for the "unCount" field.</summary>
    public const int UnCountFieldNumber = 3;
    private uint unCount_;
    /// <summary>
    /// Enchant_Enchant表enchantCount_b字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnCount {
      get { return unCount_; }
      set {
        unCount_ = value;
      }
    }

    /// <summary>Field number for the "strName" field.</summary>
    public const int StrNameFieldNumber = 4;
    private string strName_ = "";
    /// <summary>
    /// 角色名称	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StrName {
      get { return strName_; }
      set {
        strName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cEquipmentInfo" field.</summary>
    public const int CEquipmentInfoFieldNumber = 5;
    private global::Sw.PMsgSynDynamicBulletinEnchantEquipmentS.Types.EquipmentInfo cEquipmentInfo_;
    /// <summary>
    /// 装备信息列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Sw.PMsgSynDynamicBulletinEnchantEquipmentS.Types.EquipmentInfo CEquipmentInfo {
      get { return cEquipmentInfo_; }
      set {
        cEquipmentInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgSynDynamicBulletinEnchantEquipmentS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgSynDynamicBulletinEnchantEquipmentS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnItemType != other.UnItemType) return false;
      if (UnLevel != other.UnLevel) return false;
      if (UnCount != other.UnCount) return false;
      if (StrName != other.StrName) return false;
      if (!object.Equals(CEquipmentInfo, other.CEquipmentInfo)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnItemType != 0) hash ^= UnItemType.GetHashCode();
      if (UnLevel != 0) hash ^= UnLevel.GetHashCode();
      if (UnCount != 0) hash ^= UnCount.GetHashCode();
      if (StrName.Length != 0) hash ^= StrName.GetHashCode();
      if (cEquipmentInfo_ != null) hash ^= CEquipmentInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnItemType != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnItemType);
      }
      if (UnLevel != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(UnLevel);
      }
      if (UnCount != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(UnCount);
      }
      if (StrName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StrName);
      }
      if (cEquipmentInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CEquipmentInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnItemType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnItemType);
      }
      if (UnLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnLevel);
      }
      if (UnCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnCount);
      }
      if (StrName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StrName);
      }
      if (cEquipmentInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CEquipmentInfo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgSynDynamicBulletinEnchantEquipmentS other) {
      if (other == null) {
        return;
      }
      if (other.UnItemType != 0) {
        UnItemType = other.UnItemType;
      }
      if (other.UnLevel != 0) {
        UnLevel = other.UnLevel;
      }
      if (other.UnCount != 0) {
        UnCount = other.UnCount;
      }
      if (other.StrName.Length != 0) {
        StrName = other.StrName;
      }
      if (other.cEquipmentInfo_ != null) {
        if (cEquipmentInfo_ == null) {
          cEquipmentInfo_ = new global::Sw.PMsgSynDynamicBulletinEnchantEquipmentS.Types.EquipmentInfo();
        }
        CEquipmentInfo.MergeFrom(other.CEquipmentInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnItemType = input.ReadUInt32();
            break;
          }
          case 16: {
            UnLevel = input.ReadUInt32();
            break;
          }
          case 24: {
            UnCount = input.ReadUInt32();
            break;
          }
          case 34: {
            StrName = input.ReadString();
            break;
          }
          case 42: {
            if (cEquipmentInfo_ == null) {
              cEquipmentInfo_ = new global::Sw.PMsgSynDynamicBulletinEnchantEquipmentS.Types.EquipmentInfo();
            }
            input.ReadMessage(cEquipmentInfo_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PMsgSynDynamicBulletinEnchantEquipmentS message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// 道具基本信息
      /// </summary>
      public sealed partial class EquipmentInfo : pb::IMessage<EquipmentInfo> {
        private static readonly pb::MessageParser<EquipmentInfo> _parser = new pb::MessageParser<EquipmentInfo>(() => new EquipmentInfo());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EquipmentInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Sw.PMsgSynDynamicBulletinEnchantEquipmentS.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EquipmentInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EquipmentInfo(EquipmentInfo other) : this() {
          unId_ = other.unId_;
          unType_ = other.unType_;
          unPosition_ = other.unPosition_;
          unEnchantTime_ = other.unEnchantTime_;
          unBasicOption_ = other.unBasicOption_.Clone();
          unBasicValue_ = other.unBasicValue_.Clone();
          unAttack_ = other.unAttack_;
          unTimestamp_ = other.unTimestamp_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EquipmentInfo Clone() {
          return new EquipmentInfo(this);
        }

        /// <summary>Field number for the "unId" field.</summary>
        public const int UnIdFieldNumber = 1;
        private int unId_;
        /// <summary>
        /// id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnId {
          get { return unId_; }
          set {
            unId_ = value;
          }
        }

        /// <summary>Field number for the "unType" field.</summary>
        public const int UnTypeFieldNumber = 2;
        private int unType_;
        /// <summary>
        /// 类型
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnType {
          get { return unType_; }
          set {
            unType_ = value;
          }
        }

        /// <summary>Field number for the "unPosition" field.</summary>
        public const int UnPositionFieldNumber = 3;
        private int unPosition_;
        /// <summary>
        /// 装备栏位
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnPosition {
          get { return unPosition_; }
          set {
            unPosition_ = value;
          }
        }

        /// <summary>Field number for the "unEnchantTime" field.</summary>
        public const int UnEnchantTimeFieldNumber = 4;
        private int unEnchantTime_;
        /// <summary>
        /// 强化次数
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnEnchantTime {
          get { return unEnchantTime_; }
          set {
            unEnchantTime_ = value;
          }
        }

        /// <summary>Field number for the "unBasicOption" field.</summary>
        public const int UnBasicOptionFieldNumber = 5;
        private static readonly pb::FieldCodec<int> _repeated_unBasicOption_codec
            = pb::FieldCodec.ForInt32(42);
        private readonly pbc::RepeatedField<int> unBasicOption_ = new pbc::RepeatedField<int>();
        /// <summary>
        /// 固定属性
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<int> UnBasicOption {
          get { return unBasicOption_; }
        }

        /// <summary>Field number for the "unBasicValue" field.</summary>
        public const int UnBasicValueFieldNumber = 6;
        private static readonly pb::FieldCodec<int> _repeated_unBasicValue_codec
            = pb::FieldCodec.ForInt32(50);
        private readonly pbc::RepeatedField<int> unBasicValue_ = new pbc::RepeatedField<int>();
        /// <summary>
        /// 固定属性值
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<int> UnBasicValue {
          get { return unBasicValue_; }
        }

        /// <summary>Field number for the "unAttack" field.</summary>
        public const int UnAttackFieldNumber = 7;
        private int unAttack_;
        /// <summary>
        /// 战斗力
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnAttack {
          get { return unAttack_; }
          set {
            unAttack_ = value;
          }
        }

        /// <summary>Field number for the "unTimestamp" field.</summary>
        public const int UnTimestampFieldNumber = 8;
        private int unTimestamp_;
        /// <summary>
        /// 有效期：>0表示剩余时间（秒）
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnTimestamp {
          get { return unTimestamp_; }
          set {
            unTimestamp_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EquipmentInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EquipmentInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UnId != other.UnId) return false;
          if (UnType != other.UnType) return false;
          if (UnPosition != other.UnPosition) return false;
          if (UnEnchantTime != other.UnEnchantTime) return false;
          if(!unBasicOption_.Equals(other.unBasicOption_)) return false;
          if(!unBasicValue_.Equals(other.unBasicValue_)) return false;
          if (UnAttack != other.UnAttack) return false;
          if (UnTimestamp != other.UnTimestamp) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (UnId != 0) hash ^= UnId.GetHashCode();
          if (UnType != 0) hash ^= UnType.GetHashCode();
          if (UnPosition != 0) hash ^= UnPosition.GetHashCode();
          if (UnEnchantTime != 0) hash ^= UnEnchantTime.GetHashCode();
          hash ^= unBasicOption_.GetHashCode();
          hash ^= unBasicValue_.GetHashCode();
          if (UnAttack != 0) hash ^= UnAttack.GetHashCode();
          if (UnTimestamp != 0) hash ^= UnTimestamp.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (UnId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(UnId);
          }
          if (UnType != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(UnType);
          }
          if (UnPosition != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(UnPosition);
          }
          if (UnEnchantTime != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(UnEnchantTime);
          }
          unBasicOption_.WriteTo(output, _repeated_unBasicOption_codec);
          unBasicValue_.WriteTo(output, _repeated_unBasicValue_codec);
          if (UnAttack != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(UnAttack);
          }
          if (UnTimestamp != 0) {
            output.WriteRawTag(64);
            output.WriteInt32(UnTimestamp);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (UnId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnId);
          }
          if (UnType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
          }
          if (UnPosition != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnPosition);
          }
          if (UnEnchantTime != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnEnchantTime);
          }
          size += unBasicOption_.CalculateSize(_repeated_unBasicOption_codec);
          size += unBasicValue_.CalculateSize(_repeated_unBasicValue_codec);
          if (UnAttack != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnAttack);
          }
          if (UnTimestamp != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnTimestamp);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EquipmentInfo other) {
          if (other == null) {
            return;
          }
          if (other.UnId != 0) {
            UnId = other.UnId;
          }
          if (other.UnType != 0) {
            UnType = other.UnType;
          }
          if (other.UnPosition != 0) {
            UnPosition = other.UnPosition;
          }
          if (other.UnEnchantTime != 0) {
            UnEnchantTime = other.UnEnchantTime;
          }
          unBasicOption_.Add(other.unBasicOption_);
          unBasicValue_.Add(other.unBasicValue_);
          if (other.UnAttack != 0) {
            UnAttack = other.UnAttack;
          }
          if (other.UnTimestamp != 0) {
            UnTimestamp = other.UnTimestamp;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 8: {
                UnId = input.ReadInt32();
                break;
              }
              case 16: {
                UnType = input.ReadInt32();
                break;
              }
              case 24: {
                UnPosition = input.ReadInt32();
                break;
              }
              case 32: {
                UnEnchantTime = input.ReadInt32();
                break;
              }
              case 42:
              case 40: {
                unBasicOption_.AddEntriesFrom(input, _repeated_unBasicOption_codec);
                break;
              }
              case 50:
              case 48: {
                unBasicValue_.AddEntriesFrom(input, _repeated_unBasicValue_codec);
                break;
              }
              case 56: {
                UnAttack = input.ReadInt32();
                break;
              }
              case 64: {
                UnTimestamp = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器：同步精练装备动态公告
  /// _MSG_SYN_DYNAMIC_BULLETIN_EVOLVE_EQUIPMENT_S
  /// </summary>
  public sealed partial class PMsgSynDynamicBulletinEvolveEquipmentS : pb::IMessage<PMsgSynDynamicBulletinEvolveEquipmentS> {
    private static readonly pb::MessageParser<PMsgSynDynamicBulletinEvolveEquipmentS> _parser = new pb::MessageParser<PMsgSynDynamicBulletinEvolveEquipmentS>(() => new PMsgSynDynamicBulletinEvolveEquipmentS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgSynDynamicBulletinEvolveEquipmentS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgDynamicBulletinReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSynDynamicBulletinEvolveEquipmentS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSynDynamicBulletinEvolveEquipmentS(PMsgSynDynamicBulletinEvolveEquipmentS other) : this() {
      unItemType_ = other.unItemType_;
      unLevel_ = other.unLevel_;
      unCount_ = other.unCount_;
      strName_ = other.strName_;
      CEquipmentInfo = other.cEquipmentInfo_ != null ? other.CEquipmentInfo.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSynDynamicBulletinEvolveEquipmentS Clone() {
      return new PMsgSynDynamicBulletinEvolveEquipmentS(this);
    }

    /// <summary>Field number for the "unItemType" field.</summary>
    public const int UnItemTypeFieldNumber = 1;
    private uint unItemType_;
    /// <summary>
    /// 装备类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnItemType {
      get { return unItemType_; }
      set {
        unItemType_ = value;
      }
    }

    /// <summary>Field number for the "unLevel" field.</summary>
    public const int UnLevelFieldNumber = 2;
    private uint unLevel_;
    /// <summary>
    /// Item_Equipment表Grade_b字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnLevel {
      get { return unLevel_; }
      set {
        unLevel_ = value;
      }
    }

    /// <summary>Field number for the "unCount" field.</summary>
    public const int UnCountFieldNumber = 3;
    private uint unCount_;
    /// <summary>
    /// Enchant_Evolve表evolveCount_b字段;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnCount {
      get { return unCount_; }
      set {
        unCount_ = value;
      }
    }

    /// <summary>Field number for the "strName" field.</summary>
    public const int StrNameFieldNumber = 4;
    private string strName_ = "";
    /// <summary>
    /// 角色名称	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StrName {
      get { return strName_; }
      set {
        strName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cEquipmentInfo" field.</summary>
    public const int CEquipmentInfoFieldNumber = 5;
    private global::Sw.PMsgSynDynamicBulletinEvolveEquipmentS.Types.EquipmentInfo cEquipmentInfo_;
    /// <summary>
    /// 装备信息列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Sw.PMsgSynDynamicBulletinEvolveEquipmentS.Types.EquipmentInfo CEquipmentInfo {
      get { return cEquipmentInfo_; }
      set {
        cEquipmentInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgSynDynamicBulletinEvolveEquipmentS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgSynDynamicBulletinEvolveEquipmentS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnItemType != other.UnItemType) return false;
      if (UnLevel != other.UnLevel) return false;
      if (UnCount != other.UnCount) return false;
      if (StrName != other.StrName) return false;
      if (!object.Equals(CEquipmentInfo, other.CEquipmentInfo)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnItemType != 0) hash ^= UnItemType.GetHashCode();
      if (UnLevel != 0) hash ^= UnLevel.GetHashCode();
      if (UnCount != 0) hash ^= UnCount.GetHashCode();
      if (StrName.Length != 0) hash ^= StrName.GetHashCode();
      if (cEquipmentInfo_ != null) hash ^= CEquipmentInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnItemType != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnItemType);
      }
      if (UnLevel != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(UnLevel);
      }
      if (UnCount != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(UnCount);
      }
      if (StrName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StrName);
      }
      if (cEquipmentInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CEquipmentInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnItemType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnItemType);
      }
      if (UnLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnLevel);
      }
      if (UnCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnCount);
      }
      if (StrName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StrName);
      }
      if (cEquipmentInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CEquipmentInfo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgSynDynamicBulletinEvolveEquipmentS other) {
      if (other == null) {
        return;
      }
      if (other.UnItemType != 0) {
        UnItemType = other.UnItemType;
      }
      if (other.UnLevel != 0) {
        UnLevel = other.UnLevel;
      }
      if (other.UnCount != 0) {
        UnCount = other.UnCount;
      }
      if (other.StrName.Length != 0) {
        StrName = other.StrName;
      }
      if (other.cEquipmentInfo_ != null) {
        if (cEquipmentInfo_ == null) {
          cEquipmentInfo_ = new global::Sw.PMsgSynDynamicBulletinEvolveEquipmentS.Types.EquipmentInfo();
        }
        CEquipmentInfo.MergeFrom(other.CEquipmentInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnItemType = input.ReadUInt32();
            break;
          }
          case 16: {
            UnLevel = input.ReadUInt32();
            break;
          }
          case 24: {
            UnCount = input.ReadUInt32();
            break;
          }
          case 34: {
            StrName = input.ReadString();
            break;
          }
          case 42: {
            if (cEquipmentInfo_ == null) {
              cEquipmentInfo_ = new global::Sw.PMsgSynDynamicBulletinEvolveEquipmentS.Types.EquipmentInfo();
            }
            input.ReadMessage(cEquipmentInfo_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PMsgSynDynamicBulletinEvolveEquipmentS message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// 道具基本信息
      /// </summary>
      public sealed partial class EquipmentInfo : pb::IMessage<EquipmentInfo> {
        private static readonly pb::MessageParser<EquipmentInfo> _parser = new pb::MessageParser<EquipmentInfo>(() => new EquipmentInfo());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EquipmentInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Sw.PMsgSynDynamicBulletinEvolveEquipmentS.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EquipmentInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EquipmentInfo(EquipmentInfo other) : this() {
          unId_ = other.unId_;
          unType_ = other.unType_;
          unPosition_ = other.unPosition_;
          unEnchantTime_ = other.unEnchantTime_;
          unBasicOption_ = other.unBasicOption_.Clone();
          unBasicValue_ = other.unBasicValue_.Clone();
          unAttack_ = other.unAttack_;
          unTimestamp_ = other.unTimestamp_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EquipmentInfo Clone() {
          return new EquipmentInfo(this);
        }

        /// <summary>Field number for the "unId" field.</summary>
        public const int UnIdFieldNumber = 1;
        private int unId_;
        /// <summary>
        /// id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnId {
          get { return unId_; }
          set {
            unId_ = value;
          }
        }

        /// <summary>Field number for the "unType" field.</summary>
        public const int UnTypeFieldNumber = 2;
        private int unType_;
        /// <summary>
        /// 类型
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnType {
          get { return unType_; }
          set {
            unType_ = value;
          }
        }

        /// <summary>Field number for the "unPosition" field.</summary>
        public const int UnPositionFieldNumber = 3;
        private int unPosition_;
        /// <summary>
        /// 装备栏位
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnPosition {
          get { return unPosition_; }
          set {
            unPosition_ = value;
          }
        }

        /// <summary>Field number for the "unEnchantTime" field.</summary>
        public const int UnEnchantTimeFieldNumber = 4;
        private int unEnchantTime_;
        /// <summary>
        /// 强化次数
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnEnchantTime {
          get { return unEnchantTime_; }
          set {
            unEnchantTime_ = value;
          }
        }

        /// <summary>Field number for the "unBasicOption" field.</summary>
        public const int UnBasicOptionFieldNumber = 5;
        private static readonly pb::FieldCodec<int> _repeated_unBasicOption_codec
            = pb::FieldCodec.ForInt32(42);
        private readonly pbc::RepeatedField<int> unBasicOption_ = new pbc::RepeatedField<int>();
        /// <summary>
        /// 固定属性
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<int> UnBasicOption {
          get { return unBasicOption_; }
        }

        /// <summary>Field number for the "unBasicValue" field.</summary>
        public const int UnBasicValueFieldNumber = 6;
        private static readonly pb::FieldCodec<int> _repeated_unBasicValue_codec
            = pb::FieldCodec.ForInt32(50);
        private readonly pbc::RepeatedField<int> unBasicValue_ = new pbc::RepeatedField<int>();
        /// <summary>
        /// 固定属性值
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<int> UnBasicValue {
          get { return unBasicValue_; }
        }

        /// <summary>Field number for the "unAttack" field.</summary>
        public const int UnAttackFieldNumber = 7;
        private int unAttack_;
        /// <summary>
        /// 战斗力
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnAttack {
          get { return unAttack_; }
          set {
            unAttack_ = value;
          }
        }

        /// <summary>Field number for the "unTimestamp" field.</summary>
        public const int UnTimestampFieldNumber = 8;
        private int unTimestamp_;
        /// <summary>
        /// 有效期：>0表示剩余时间（秒）
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnTimestamp {
          get { return unTimestamp_; }
          set {
            unTimestamp_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EquipmentInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EquipmentInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UnId != other.UnId) return false;
          if (UnType != other.UnType) return false;
          if (UnPosition != other.UnPosition) return false;
          if (UnEnchantTime != other.UnEnchantTime) return false;
          if(!unBasicOption_.Equals(other.unBasicOption_)) return false;
          if(!unBasicValue_.Equals(other.unBasicValue_)) return false;
          if (UnAttack != other.UnAttack) return false;
          if (UnTimestamp != other.UnTimestamp) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (UnId != 0) hash ^= UnId.GetHashCode();
          if (UnType != 0) hash ^= UnType.GetHashCode();
          if (UnPosition != 0) hash ^= UnPosition.GetHashCode();
          if (UnEnchantTime != 0) hash ^= UnEnchantTime.GetHashCode();
          hash ^= unBasicOption_.GetHashCode();
          hash ^= unBasicValue_.GetHashCode();
          if (UnAttack != 0) hash ^= UnAttack.GetHashCode();
          if (UnTimestamp != 0) hash ^= UnTimestamp.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (UnId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(UnId);
          }
          if (UnType != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(UnType);
          }
          if (UnPosition != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(UnPosition);
          }
          if (UnEnchantTime != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(UnEnchantTime);
          }
          unBasicOption_.WriteTo(output, _repeated_unBasicOption_codec);
          unBasicValue_.WriteTo(output, _repeated_unBasicValue_codec);
          if (UnAttack != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(UnAttack);
          }
          if (UnTimestamp != 0) {
            output.WriteRawTag(64);
            output.WriteInt32(UnTimestamp);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (UnId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnId);
          }
          if (UnType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
          }
          if (UnPosition != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnPosition);
          }
          if (UnEnchantTime != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnEnchantTime);
          }
          size += unBasicOption_.CalculateSize(_repeated_unBasicOption_codec);
          size += unBasicValue_.CalculateSize(_repeated_unBasicValue_codec);
          if (UnAttack != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnAttack);
          }
          if (UnTimestamp != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnTimestamp);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EquipmentInfo other) {
          if (other == null) {
            return;
          }
          if (other.UnId != 0) {
            UnId = other.UnId;
          }
          if (other.UnType != 0) {
            UnType = other.UnType;
          }
          if (other.UnPosition != 0) {
            UnPosition = other.UnPosition;
          }
          if (other.UnEnchantTime != 0) {
            UnEnchantTime = other.UnEnchantTime;
          }
          unBasicOption_.Add(other.unBasicOption_);
          unBasicValue_.Add(other.unBasicValue_);
          if (other.UnAttack != 0) {
            UnAttack = other.UnAttack;
          }
          if (other.UnTimestamp != 0) {
            UnTimestamp = other.UnTimestamp;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 8: {
                UnId = input.ReadInt32();
                break;
              }
              case 16: {
                UnType = input.ReadInt32();
                break;
              }
              case 24: {
                UnPosition = input.ReadInt32();
                break;
              }
              case 32: {
                UnEnchantTime = input.ReadInt32();
                break;
              }
              case 42:
              case 40: {
                unBasicOption_.AddEntriesFrom(input, _repeated_unBasicOption_codec);
                break;
              }
              case 50:
              case 48: {
                unBasicValue_.AddEntriesFrom(input, _repeated_unBasicValue_codec);
                break;
              }
              case 56: {
                UnAttack = input.ReadInt32();
                break;
              }
              case 64: {
                UnTimestamp = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器：同步获取新伙伴动态公告
  /// _MSG_SYN_DYNAMIC_BULLETIN_NEW_HERO_S
  /// </summary>
  public sealed partial class PMsgSynDynamicBulletinNewHeroS : pb::IMessage<PMsgSynDynamicBulletinNewHeroS> {
    private static readonly pb::MessageParser<PMsgSynDynamicBulletinNewHeroS> _parser = new pb::MessageParser<PMsgSynDynamicBulletinNewHeroS>(() => new PMsgSynDynamicBulletinNewHeroS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgSynDynamicBulletinNewHeroS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgDynamicBulletinReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSynDynamicBulletinNewHeroS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSynDynamicBulletinNewHeroS(PMsgSynDynamicBulletinNewHeroS other) : this() {
      unItemType_ = other.unItemType_;
      unOptType_ = other.unOptType_;
      unLevel_ = other.unLevel_;
      strName_ = other.strName_;
      CInfo = other.cInfo_ != null ? other.CInfo.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSynDynamicBulletinNewHeroS Clone() {
      return new PMsgSynDynamicBulletinNewHeroS(this);
    }

    /// <summary>Field number for the "unItemType" field.</summary>
    public const int UnItemTypeFieldNumber = 1;
    private uint unItemType_;
    /// <summary>
    /// 伙伴类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnItemType {
      get { return unItemType_; }
      set {
        unItemType_ = value;
      }
    }

    /// <summary>Field number for the "unOptType" field.</summary>
    public const int UnOptTypeFieldNumber = 2;
    private uint unOptType_;
    /// <summary>
    /// 伙伴来源
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnOptType {
      get { return unOptType_; }
      set {
        unOptType_ = value;
      }
    }

    /// <summary>Field number for the "unLevel" field.</summary>
    public const int UnLevelFieldNumber = 3;
    private uint unLevel_;
    /// <summary>
    /// Partner_PartnerData表Quality_b字段;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnLevel {
      get { return unLevel_; }
      set {
        unLevel_ = value;
      }
    }

    /// <summary>Field number for the "strName" field.</summary>
    public const int StrNameFieldNumber = 4;
    private string strName_ = "";
    /// <summary>
    /// 角色名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StrName {
      get { return strName_; }
      set {
        strName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cInfo" field.</summary>
    public const int CInfoFieldNumber = 5;
    private global::Sw.PMsgSynDynamicBulletinNewHeroS.Types.HeroInfo cInfo_;
    /// <summary>
    /// 伙伴信息列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Sw.PMsgSynDynamicBulletinNewHeroS.Types.HeroInfo CInfo {
      get { return cInfo_; }
      set {
        cInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgSynDynamicBulletinNewHeroS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgSynDynamicBulletinNewHeroS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnItemType != other.UnItemType) return false;
      if (UnOptType != other.UnOptType) return false;
      if (UnLevel != other.UnLevel) return false;
      if (StrName != other.StrName) return false;
      if (!object.Equals(CInfo, other.CInfo)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnItemType != 0) hash ^= UnItemType.GetHashCode();
      if (UnOptType != 0) hash ^= UnOptType.GetHashCode();
      if (UnLevel != 0) hash ^= UnLevel.GetHashCode();
      if (StrName.Length != 0) hash ^= StrName.GetHashCode();
      if (cInfo_ != null) hash ^= CInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnItemType != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnItemType);
      }
      if (UnOptType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(UnOptType);
      }
      if (UnLevel != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(UnLevel);
      }
      if (StrName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StrName);
      }
      if (cInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnItemType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnItemType);
      }
      if (UnOptType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnOptType);
      }
      if (UnLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnLevel);
      }
      if (StrName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StrName);
      }
      if (cInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CInfo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgSynDynamicBulletinNewHeroS other) {
      if (other == null) {
        return;
      }
      if (other.UnItemType != 0) {
        UnItemType = other.UnItemType;
      }
      if (other.UnOptType != 0) {
        UnOptType = other.UnOptType;
      }
      if (other.UnLevel != 0) {
        UnLevel = other.UnLevel;
      }
      if (other.StrName.Length != 0) {
        StrName = other.StrName;
      }
      if (other.cInfo_ != null) {
        if (cInfo_ == null) {
          cInfo_ = new global::Sw.PMsgSynDynamicBulletinNewHeroS.Types.HeroInfo();
        }
        CInfo.MergeFrom(other.CInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnItemType = input.ReadUInt32();
            break;
          }
          case 16: {
            UnOptType = input.ReadUInt32();
            break;
          }
          case 24: {
            UnLevel = input.ReadUInt32();
            break;
          }
          case 34: {
            StrName = input.ReadString();
            break;
          }
          case 42: {
            if (cInfo_ == null) {
              cInfo_ = new global::Sw.PMsgSynDynamicBulletinNewHeroS.Types.HeroInfo();
            }
            input.ReadMessage(cInfo_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PMsgSynDynamicBulletinNewHeroS message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// 伙伴主动技能信息
      /// </summary>
      public sealed partial class HeroSkillInfo : pb::IMessage<HeroSkillInfo> {
        private static readonly pb::MessageParser<HeroSkillInfo> _parser = new pb::MessageParser<HeroSkillInfo>(() => new HeroSkillInfo());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<HeroSkillInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Sw.PMsgSynDynamicBulletinNewHeroS.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HeroSkillInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HeroSkillInfo(HeroSkillInfo other) : this() {
          unSkillId_ = other.unSkillId_;
          unSkillLevel_ = other.unSkillLevel_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HeroSkillInfo Clone() {
          return new HeroSkillInfo(this);
        }

        /// <summary>Field number for the "unSkillId" field.</summary>
        public const int UnSkillIdFieldNumber = 1;
        private int unSkillId_;
        /// <summary>
        /// 技能id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnSkillId {
          get { return unSkillId_; }
          set {
            unSkillId_ = value;
          }
        }

        /// <summary>Field number for the "unSkillLevel" field.</summary>
        public const int UnSkillLevelFieldNumber = 2;
        private int unSkillLevel_;
        /// <summary>
        /// 等级
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnSkillLevel {
          get { return unSkillLevel_; }
          set {
            unSkillLevel_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as HeroSkillInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(HeroSkillInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UnSkillId != other.UnSkillId) return false;
          if (UnSkillLevel != other.UnSkillLevel) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (UnSkillId != 0) hash ^= UnSkillId.GetHashCode();
          if (UnSkillLevel != 0) hash ^= UnSkillLevel.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (UnSkillId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(UnSkillId);
          }
          if (UnSkillLevel != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(UnSkillLevel);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (UnSkillId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnSkillId);
          }
          if (UnSkillLevel != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnSkillLevel);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(HeroSkillInfo other) {
          if (other == null) {
            return;
          }
          if (other.UnSkillId != 0) {
            UnSkillId = other.UnSkillId;
          }
          if (other.UnSkillLevel != 0) {
            UnSkillLevel = other.UnSkillLevel;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 8: {
                UnSkillId = input.ReadInt32();
                break;
              }
              case 16: {
                UnSkillLevel = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// 伙伴基本信息
      /// </summary>
      public sealed partial class HeroInfo : pb::IMessage<HeroInfo> {
        private static readonly pb::MessageParser<HeroInfo> _parser = new pb::MessageParser<HeroInfo>(() => new HeroInfo());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<HeroInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Sw.PMsgSynDynamicBulletinNewHeroS.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HeroInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HeroInfo(HeroInfo other) : this() {
          unHeroId_ = other.unHeroId_;
          unType_ = other.unType_;
          unLevel_ = other.unLevel_;
          ullExp_ = other.ullExp_;
          unBaseSkillId_ = other.unBaseSkillId_;
          cSkillInfo_ = other.cSkillInfo_.Clone();
          unAttack_ = other.unAttack_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HeroInfo Clone() {
          return new HeroInfo(this);
        }

        /// <summary>Field number for the "unHeroId" field.</summary>
        public const int UnHeroIdFieldNumber = 1;
        private int unHeroId_;
        /// <summary>
        /// 伙伴id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnHeroId {
          get { return unHeroId_; }
          set {
            unHeroId_ = value;
          }
        }

        /// <summary>Field number for the "unType" field.</summary>
        public const int UnTypeFieldNumber = 2;
        private int unType_;
        /// <summary>
        /// 类型（品质）
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnType {
          get { return unType_; }
          set {
            unType_ = value;
          }
        }

        /// <summary>Field number for the "unLevel" field.</summary>
        public const int UnLevelFieldNumber = 3;
        private int unLevel_;
        /// <summary>
        /// 等级
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnLevel {
          get { return unLevel_; }
          set {
            unLevel_ = value;
          }
        }

        /// <summary>Field number for the "ullExp" field.</summary>
        public const int UllExpFieldNumber = 4;
        private long ullExp_;
        /// <summary>
        /// 经验
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long UllExp {
          get { return ullExp_; }
          set {
            ullExp_ = value;
          }
        }

        /// <summary>Field number for the "unBaseSkillId" field.</summary>
        public const int UnBaseSkillIdFieldNumber = 5;
        private int unBaseSkillId_;
        /// <summary>
        /// 普攻技能
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnBaseSkillId {
          get { return unBaseSkillId_; }
          set {
            unBaseSkillId_ = value;
          }
        }

        /// <summary>Field number for the "cSkillInfo" field.</summary>
        public const int CSkillInfoFieldNumber = 6;
        private static readonly pb::FieldCodec<global::Sw.PMsgSynDynamicBulletinNewHeroS.Types.HeroSkillInfo> _repeated_cSkillInfo_codec
            = pb::FieldCodec.ForMessage(50, global::Sw.PMsgSynDynamicBulletinNewHeroS.Types.HeroSkillInfo.Parser);
        private readonly pbc::RepeatedField<global::Sw.PMsgSynDynamicBulletinNewHeroS.Types.HeroSkillInfo> cSkillInfo_ = new pbc::RepeatedField<global::Sw.PMsgSynDynamicBulletinNewHeroS.Types.HeroSkillInfo>();
        /// <summary>
        /// 主动技能信息
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Sw.PMsgSynDynamicBulletinNewHeroS.Types.HeroSkillInfo> CSkillInfo {
          get { return cSkillInfo_; }
        }

        /// <summary>Field number for the "unAttack" field.</summary>
        public const int UnAttackFieldNumber = 7;
        private int unAttack_;
        /// <summary>
        /// 战斗力
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnAttack {
          get { return unAttack_; }
          set {
            unAttack_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as HeroInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(HeroInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UnHeroId != other.UnHeroId) return false;
          if (UnType != other.UnType) return false;
          if (UnLevel != other.UnLevel) return false;
          if (UllExp != other.UllExp) return false;
          if (UnBaseSkillId != other.UnBaseSkillId) return false;
          if(!cSkillInfo_.Equals(other.cSkillInfo_)) return false;
          if (UnAttack != other.UnAttack) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (UnHeroId != 0) hash ^= UnHeroId.GetHashCode();
          if (UnType != 0) hash ^= UnType.GetHashCode();
          if (UnLevel != 0) hash ^= UnLevel.GetHashCode();
          if (UllExp != 0L) hash ^= UllExp.GetHashCode();
          if (UnBaseSkillId != 0) hash ^= UnBaseSkillId.GetHashCode();
          hash ^= cSkillInfo_.GetHashCode();
          if (UnAttack != 0) hash ^= UnAttack.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (UnHeroId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(UnHeroId);
          }
          if (UnType != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(UnType);
          }
          if (UnLevel != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(UnLevel);
          }
          if (UllExp != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(UllExp);
          }
          if (UnBaseSkillId != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(UnBaseSkillId);
          }
          cSkillInfo_.WriteTo(output, _repeated_cSkillInfo_codec);
          if (UnAttack != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(UnAttack);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (UnHeroId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnHeroId);
          }
          if (UnType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
          }
          if (UnLevel != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnLevel);
          }
          if (UllExp != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllExp);
          }
          if (UnBaseSkillId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnBaseSkillId);
          }
          size += cSkillInfo_.CalculateSize(_repeated_cSkillInfo_codec);
          if (UnAttack != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnAttack);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(HeroInfo other) {
          if (other == null) {
            return;
          }
          if (other.UnHeroId != 0) {
            UnHeroId = other.UnHeroId;
          }
          if (other.UnType != 0) {
            UnType = other.UnType;
          }
          if (other.UnLevel != 0) {
            UnLevel = other.UnLevel;
          }
          if (other.UllExp != 0L) {
            UllExp = other.UllExp;
          }
          if (other.UnBaseSkillId != 0) {
            UnBaseSkillId = other.UnBaseSkillId;
          }
          cSkillInfo_.Add(other.cSkillInfo_);
          if (other.UnAttack != 0) {
            UnAttack = other.UnAttack;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 8: {
                UnHeroId = input.ReadInt32();
                break;
              }
              case 16: {
                UnType = input.ReadInt32();
                break;
              }
              case 24: {
                UnLevel = input.ReadInt32();
                break;
              }
              case 32: {
                UllExp = input.ReadInt64();
                break;
              }
              case 40: {
                UnBaseSkillId = input.ReadInt32();
                break;
              }
              case 50: {
                cSkillInfo_.AddEntriesFrom(input, _repeated_cSkillInfo_codec);
                break;
              }
              case 56: {
                UnAttack = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器：同步精练伙伴动态公告
  /// _MSG_SYN_DYNAMIC_BULLETIN_EVOLVE_HERO_S
  /// </summary>
  public sealed partial class PMsgSynDynamicBulletinEvolveHeroS : pb::IMessage<PMsgSynDynamicBulletinEvolveHeroS> {
    private static readonly pb::MessageParser<PMsgSynDynamicBulletinEvolveHeroS> _parser = new pb::MessageParser<PMsgSynDynamicBulletinEvolveHeroS>(() => new PMsgSynDynamicBulletinEvolveHeroS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgSynDynamicBulletinEvolveHeroS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgDynamicBulletinReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSynDynamicBulletinEvolveHeroS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSynDynamicBulletinEvolveHeroS(PMsgSynDynamicBulletinEvolveHeroS other) : this() {
      unItemType_ = other.unItemType_;
      unLevel_ = other.unLevel_;
      unCount_ = other.unCount_;
      strName_ = other.strName_;
      CInfo = other.cInfo_ != null ? other.CInfo.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSynDynamicBulletinEvolveHeroS Clone() {
      return new PMsgSynDynamicBulletinEvolveHeroS(this);
    }

    /// <summary>Field number for the "unItemType" field.</summary>
    public const int UnItemTypeFieldNumber = 1;
    private uint unItemType_;
    /// <summary>
    /// 伙伴类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnItemType {
      get { return unItemType_; }
      set {
        unItemType_ = value;
      }
    }

    /// <summary>Field number for the "unLevel" field.</summary>
    public const int UnLevelFieldNumber = 2;
    private uint unLevel_;
    /// <summary>
    /// Partner_PartnerData表Quality_b字段;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnLevel {
      get { return unLevel_; }
      set {
        unLevel_ = value;
      }
    }

    /// <summary>Field number for the "unCount" field.</summary>
    public const int UnCountFieldNumber = 3;
    private uint unCount_;
    /// <summary>
    /// Enchant_Evolve表evolveCount_b字段;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnCount {
      get { return unCount_; }
      set {
        unCount_ = value;
      }
    }

    /// <summary>Field number for the "strName" field.</summary>
    public const int StrNameFieldNumber = 4;
    private string strName_ = "";
    /// <summary>
    /// 角色名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StrName {
      get { return strName_; }
      set {
        strName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cInfo" field.</summary>
    public const int CInfoFieldNumber = 5;
    private global::Sw.PMsgSynDynamicBulletinEvolveHeroS.Types.HeroInfo cInfo_;
    /// <summary>
    /// 伙伴信息列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Sw.PMsgSynDynamicBulletinEvolveHeroS.Types.HeroInfo CInfo {
      get { return cInfo_; }
      set {
        cInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgSynDynamicBulletinEvolveHeroS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgSynDynamicBulletinEvolveHeroS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnItemType != other.UnItemType) return false;
      if (UnLevel != other.UnLevel) return false;
      if (UnCount != other.UnCount) return false;
      if (StrName != other.StrName) return false;
      if (!object.Equals(CInfo, other.CInfo)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnItemType != 0) hash ^= UnItemType.GetHashCode();
      if (UnLevel != 0) hash ^= UnLevel.GetHashCode();
      if (UnCount != 0) hash ^= UnCount.GetHashCode();
      if (StrName.Length != 0) hash ^= StrName.GetHashCode();
      if (cInfo_ != null) hash ^= CInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnItemType != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnItemType);
      }
      if (UnLevel != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(UnLevel);
      }
      if (UnCount != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(UnCount);
      }
      if (StrName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StrName);
      }
      if (cInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnItemType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnItemType);
      }
      if (UnLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnLevel);
      }
      if (UnCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnCount);
      }
      if (StrName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StrName);
      }
      if (cInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CInfo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgSynDynamicBulletinEvolveHeroS other) {
      if (other == null) {
        return;
      }
      if (other.UnItemType != 0) {
        UnItemType = other.UnItemType;
      }
      if (other.UnLevel != 0) {
        UnLevel = other.UnLevel;
      }
      if (other.UnCount != 0) {
        UnCount = other.UnCount;
      }
      if (other.StrName.Length != 0) {
        StrName = other.StrName;
      }
      if (other.cInfo_ != null) {
        if (cInfo_ == null) {
          cInfo_ = new global::Sw.PMsgSynDynamicBulletinEvolveHeroS.Types.HeroInfo();
        }
        CInfo.MergeFrom(other.CInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnItemType = input.ReadUInt32();
            break;
          }
          case 16: {
            UnLevel = input.ReadUInt32();
            break;
          }
          case 24: {
            UnCount = input.ReadUInt32();
            break;
          }
          case 34: {
            StrName = input.ReadString();
            break;
          }
          case 42: {
            if (cInfo_ == null) {
              cInfo_ = new global::Sw.PMsgSynDynamicBulletinEvolveHeroS.Types.HeroInfo();
            }
            input.ReadMessage(cInfo_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PMsgSynDynamicBulletinEvolveHeroS message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// 伙伴主动技能信息
      /// </summary>
      public sealed partial class HeroSkillInfo : pb::IMessage<HeroSkillInfo> {
        private static readonly pb::MessageParser<HeroSkillInfo> _parser = new pb::MessageParser<HeroSkillInfo>(() => new HeroSkillInfo());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<HeroSkillInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Sw.PMsgSynDynamicBulletinEvolveHeroS.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HeroSkillInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HeroSkillInfo(HeroSkillInfo other) : this() {
          unSkillId_ = other.unSkillId_;
          unSkillLevel_ = other.unSkillLevel_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HeroSkillInfo Clone() {
          return new HeroSkillInfo(this);
        }

        /// <summary>Field number for the "unSkillId" field.</summary>
        public const int UnSkillIdFieldNumber = 1;
        private int unSkillId_;
        /// <summary>
        /// 技能id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnSkillId {
          get { return unSkillId_; }
          set {
            unSkillId_ = value;
          }
        }

        /// <summary>Field number for the "unSkillLevel" field.</summary>
        public const int UnSkillLevelFieldNumber = 2;
        private int unSkillLevel_;
        /// <summary>
        /// 等级
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnSkillLevel {
          get { return unSkillLevel_; }
          set {
            unSkillLevel_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as HeroSkillInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(HeroSkillInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UnSkillId != other.UnSkillId) return false;
          if (UnSkillLevel != other.UnSkillLevel) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (UnSkillId != 0) hash ^= UnSkillId.GetHashCode();
          if (UnSkillLevel != 0) hash ^= UnSkillLevel.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (UnSkillId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(UnSkillId);
          }
          if (UnSkillLevel != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(UnSkillLevel);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (UnSkillId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnSkillId);
          }
          if (UnSkillLevel != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnSkillLevel);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(HeroSkillInfo other) {
          if (other == null) {
            return;
          }
          if (other.UnSkillId != 0) {
            UnSkillId = other.UnSkillId;
          }
          if (other.UnSkillLevel != 0) {
            UnSkillLevel = other.UnSkillLevel;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 8: {
                UnSkillId = input.ReadInt32();
                break;
              }
              case 16: {
                UnSkillLevel = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// 伙伴基本信息
      /// </summary>
      public sealed partial class HeroInfo : pb::IMessage<HeroInfo> {
        private static readonly pb::MessageParser<HeroInfo> _parser = new pb::MessageParser<HeroInfo>(() => new HeroInfo());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<HeroInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Sw.PMsgSynDynamicBulletinEvolveHeroS.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HeroInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HeroInfo(HeroInfo other) : this() {
          unHeroId_ = other.unHeroId_;
          unType_ = other.unType_;
          unLevel_ = other.unLevel_;
          ullExp_ = other.ullExp_;
          unBaseSkillId_ = other.unBaseSkillId_;
          cSkillInfo_ = other.cSkillInfo_.Clone();
          unAttack_ = other.unAttack_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HeroInfo Clone() {
          return new HeroInfo(this);
        }

        /// <summary>Field number for the "unHeroId" field.</summary>
        public const int UnHeroIdFieldNumber = 1;
        private int unHeroId_;
        /// <summary>
        /// 伙伴id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnHeroId {
          get { return unHeroId_; }
          set {
            unHeroId_ = value;
          }
        }

        /// <summary>Field number for the "unType" field.</summary>
        public const int UnTypeFieldNumber = 2;
        private int unType_;
        /// <summary>
        /// 类型（品质）
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnType {
          get { return unType_; }
          set {
            unType_ = value;
          }
        }

        /// <summary>Field number for the "unLevel" field.</summary>
        public const int UnLevelFieldNumber = 3;
        private int unLevel_;
        /// <summary>
        /// 等级
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnLevel {
          get { return unLevel_; }
          set {
            unLevel_ = value;
          }
        }

        /// <summary>Field number for the "ullExp" field.</summary>
        public const int UllExpFieldNumber = 4;
        private long ullExp_;
        /// <summary>
        /// 经验
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long UllExp {
          get { return ullExp_; }
          set {
            ullExp_ = value;
          }
        }

        /// <summary>Field number for the "unBaseSkillId" field.</summary>
        public const int UnBaseSkillIdFieldNumber = 5;
        private int unBaseSkillId_;
        /// <summary>
        /// 普攻技能
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnBaseSkillId {
          get { return unBaseSkillId_; }
          set {
            unBaseSkillId_ = value;
          }
        }

        /// <summary>Field number for the "cSkillInfo" field.</summary>
        public const int CSkillInfoFieldNumber = 6;
        private static readonly pb::FieldCodec<global::Sw.PMsgSynDynamicBulletinEvolveHeroS.Types.HeroSkillInfo> _repeated_cSkillInfo_codec
            = pb::FieldCodec.ForMessage(50, global::Sw.PMsgSynDynamicBulletinEvolveHeroS.Types.HeroSkillInfo.Parser);
        private readonly pbc::RepeatedField<global::Sw.PMsgSynDynamicBulletinEvolveHeroS.Types.HeroSkillInfo> cSkillInfo_ = new pbc::RepeatedField<global::Sw.PMsgSynDynamicBulletinEvolveHeroS.Types.HeroSkillInfo>();
        /// <summary>
        /// 主动技能信息
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Sw.PMsgSynDynamicBulletinEvolveHeroS.Types.HeroSkillInfo> CSkillInfo {
          get { return cSkillInfo_; }
        }

        /// <summary>Field number for the "unAttack" field.</summary>
        public const int UnAttackFieldNumber = 7;
        private int unAttack_;
        /// <summary>
        /// 战斗力
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnAttack {
          get { return unAttack_; }
          set {
            unAttack_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as HeroInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(HeroInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UnHeroId != other.UnHeroId) return false;
          if (UnType != other.UnType) return false;
          if (UnLevel != other.UnLevel) return false;
          if (UllExp != other.UllExp) return false;
          if (UnBaseSkillId != other.UnBaseSkillId) return false;
          if(!cSkillInfo_.Equals(other.cSkillInfo_)) return false;
          if (UnAttack != other.UnAttack) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (UnHeroId != 0) hash ^= UnHeroId.GetHashCode();
          if (UnType != 0) hash ^= UnType.GetHashCode();
          if (UnLevel != 0) hash ^= UnLevel.GetHashCode();
          if (UllExp != 0L) hash ^= UllExp.GetHashCode();
          if (UnBaseSkillId != 0) hash ^= UnBaseSkillId.GetHashCode();
          hash ^= cSkillInfo_.GetHashCode();
          if (UnAttack != 0) hash ^= UnAttack.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (UnHeroId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(UnHeroId);
          }
          if (UnType != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(UnType);
          }
          if (UnLevel != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(UnLevel);
          }
          if (UllExp != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(UllExp);
          }
          if (UnBaseSkillId != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(UnBaseSkillId);
          }
          cSkillInfo_.WriteTo(output, _repeated_cSkillInfo_codec);
          if (UnAttack != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(UnAttack);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (UnHeroId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnHeroId);
          }
          if (UnType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
          }
          if (UnLevel != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnLevel);
          }
          if (UllExp != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllExp);
          }
          if (UnBaseSkillId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnBaseSkillId);
          }
          size += cSkillInfo_.CalculateSize(_repeated_cSkillInfo_codec);
          if (UnAttack != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnAttack);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(HeroInfo other) {
          if (other == null) {
            return;
          }
          if (other.UnHeroId != 0) {
            UnHeroId = other.UnHeroId;
          }
          if (other.UnType != 0) {
            UnType = other.UnType;
          }
          if (other.UnLevel != 0) {
            UnLevel = other.UnLevel;
          }
          if (other.UllExp != 0L) {
            UllExp = other.UllExp;
          }
          if (other.UnBaseSkillId != 0) {
            UnBaseSkillId = other.UnBaseSkillId;
          }
          cSkillInfo_.Add(other.cSkillInfo_);
          if (other.UnAttack != 0) {
            UnAttack = other.UnAttack;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 8: {
                UnHeroId = input.ReadInt32();
                break;
              }
              case 16: {
                UnType = input.ReadInt32();
                break;
              }
              case 24: {
                UnLevel = input.ReadInt32();
                break;
              }
              case 32: {
                UllExp = input.ReadInt64();
                break;
              }
              case 40: {
                UnBaseSkillId = input.ReadInt32();
                break;
              }
              case 50: {
                cSkillInfo_.AddEntriesFrom(input, _repeated_cSkillInfo_codec);
                break;
              }
              case 56: {
                UnAttack = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
