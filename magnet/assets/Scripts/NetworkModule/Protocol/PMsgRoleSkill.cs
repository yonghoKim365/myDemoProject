// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/PMsgRoleSkill.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Sw {

  /// <summary>Holder for reflection information generated from protos/PMsgRoleSkill.proto</summary>
  public static partial class PMsgRoleSkillReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/PMsgRoleSkill.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PMsgRoleSkillReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chpwcm90b3MvUE1zZ1JvbGVTa2lsbC5wcm90bxICc3ciLgoYUE1zZ1JvbGVB",
            "Y3RpdmVTa2lsbExpc3RDEhIKCnVuUmVzZXJ2ZWQYASABKAUiYgoTUm9sZUFj",
            "dGl2ZVNraWxsSW5mbxIOCgZ1blR5cGUYASABKAUSFgoOdW5JZGVudGlmeVR5",
            "cGUYAiABKAUSEgoKdW5Qb3NpdGlvbhgDIAEoBRIPCgd1bkxldmVsGAQgAygF",
            "IlgKGFBNc2dSb2xlQWN0aXZlU2tpbGxMaXN0UxIPCgd1bkNvdW50GAEgASgF",
            "EisKCmNTa2lsbEluZm8YAiADKAsyFy5zdy5Sb2xlQWN0aXZlU2tpbGxJbmZv",
            "IjwKG1BNc2dSb2xlQWN0aXZlU2tpbGxVcGdyYWRlQxIOCgZ1blR5cGUYASAB",
            "KAUSDQoFdW5JZHgYAiABKAUiUQobUE1zZ1JvbGVBY3RpdmVTa2lsbFVwZ3Jh",
            "ZGVTEg4KBnVuVHlwZRgBIAEoBRINCgV1bklkeBgCIAEoBRITCgt1bkVycm9y",
            "Q29kZRhjIAEoBSIpChdQTXNnUm9sZUFjdGl2ZVNraWxsVXNlQxIOCgZ1blR5",
            "cGUYASABKAUiPgoXUE1zZ1JvbGVBY3RpdmVTa2lsbFVzZVMSDgoGdW5UeXBl",
            "GAEgASgFEhMKC3VuRXJyb3JDb2RlGGMgASgFIkEKIFBNc2dSb2xlQWN0aXZl",
            "U2tpbGxVcGdyYWRlVHVyYm9DEg4KBnVuVHlwZRgBIAEoBRINCgV1bklkeBgC",
            "IAEoBSJnCiBQTXNnUm9sZUFjdGl2ZVNraWxsVXBncmFkZVR1cmJvUxIOCgZ1",
            "blR5cGUYASABKAUSDQoFdW5JZHgYAiABKAUSDwoHdW5UaW1lcxgDIAEoBRIT",
            "Cgt1bkVycm9yQ29kZRhjIAEoBSIvChlQTXNnUm9sZVBhc3NpdmVTa2lsbExp",
            "c3RDEhIKCnVuUmVzZXJ2ZWQYASABKAUiZgoUUm9sZVBhc3NpdmVTa2lsbElu",
            "Zm8SEQoJdW5Ta2lsbElkGAEgASgFEhYKDnVuSWRlbnRpZnlUeXBlGAIgASgF",
            "EhIKCnVuUG9zaXRpb24YAyABKAUSDwoHdW5MZXZlbBgEIAEoBSJaChlQTXNn",
            "Um9sZVBhc3NpdmVTa2lsbExpc3RTEg8KB3VuQ291bnQYASABKAUSLAoKY1Nr",
            "aWxsSW5mbxgCIAMoCzIYLnN3LlJvbGVQYXNzaXZlU2tpbGxJbmZvIjEKHFBN",
            "c2dSb2xlUGFzc2l2ZVNraWxsVXBncmFkZUMSEQoJdW5Ta2lsbElkGAEgASgF",
            "IkYKHFBNc2dSb2xlUGFzc2l2ZVNraWxsVXBncmFkZVMSEQoJdW5Ta2lsbElk",
            "GAEgASgFEhMKC3VuRXJyb3JDb2RlGGMgASgFIi0KGFBNc2dSb2xlUGFzc2l2",
            "ZVNraWxsVXNlQxIRCgl1blNraWxsSWQYASABKAUiQgoYUE1zZ1JvbGVQYXNz",
            "aXZlU2tpbGxVc2VTEhEKCXVuU2tpbGxJZBgBIAEoBRITCgt1bkVycm9yQ29k",
            "ZRhjIAEoBSI2CiFQTXNnUm9sZVBhc3NpdmVTa2lsbFVwZ3JhZGVUdXJib0MS",
            "EQoJdW5Ta2lsbElkGAEgASgFIlwKIVBNc2dSb2xlUGFzc2l2ZVNraWxsVXBn",
            "cmFkZVR1cmJvUxIRCgl1blNraWxsSWQYASABKAUSDwoHdW5UaW1lcxgCIAEo",
            "BRITCgt1bkVycm9yQ29kZRhjIAEoBWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgRoleActiveSkillListC), global::Sw.PMsgRoleActiveSkillListC.Parser, new[]{ "UnReserved" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.RoleActiveSkillInfo), global::Sw.RoleActiveSkillInfo.Parser, new[]{ "UnType", "UnIdentifyType", "UnPosition", "UnLevel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgRoleActiveSkillListS), global::Sw.PMsgRoleActiveSkillListS.Parser, new[]{ "UnCount", "CSkillInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgRoleActiveSkillUpgradeC), global::Sw.PMsgRoleActiveSkillUpgradeC.Parser, new[]{ "UnType", "UnIdx" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgRoleActiveSkillUpgradeS), global::Sw.PMsgRoleActiveSkillUpgradeS.Parser, new[]{ "UnType", "UnIdx", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgRoleActiveSkillUseC), global::Sw.PMsgRoleActiveSkillUseC.Parser, new[]{ "UnType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgRoleActiveSkillUseS), global::Sw.PMsgRoleActiveSkillUseS.Parser, new[]{ "UnType", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgRoleActiveSkillUpgradeTurboC), global::Sw.PMsgRoleActiveSkillUpgradeTurboC.Parser, new[]{ "UnType", "UnIdx" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgRoleActiveSkillUpgradeTurboS), global::Sw.PMsgRoleActiveSkillUpgradeTurboS.Parser, new[]{ "UnType", "UnIdx", "UnTimes", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgRolePassiveSkillListC), global::Sw.PMsgRolePassiveSkillListC.Parser, new[]{ "UnReserved" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.RolePassiveSkillInfo), global::Sw.RolePassiveSkillInfo.Parser, new[]{ "UnSkillId", "UnIdentifyType", "UnPosition", "UnLevel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgRolePassiveSkillListS), global::Sw.PMsgRolePassiveSkillListS.Parser, new[]{ "UnCount", "CSkillInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgRolePassiveSkillUpgradeC), global::Sw.PMsgRolePassiveSkillUpgradeC.Parser, new[]{ "UnSkillId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgRolePassiveSkillUpgradeS), global::Sw.PMsgRolePassiveSkillUpgradeS.Parser, new[]{ "UnSkillId", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgRolePassiveSkillUseC), global::Sw.PMsgRolePassiveSkillUseC.Parser, new[]{ "UnSkillId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgRolePassiveSkillUseS), global::Sw.PMsgRolePassiveSkillUseS.Parser, new[]{ "UnSkillId", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgRolePassiveSkillUpgradeTurboC), global::Sw.PMsgRolePassiveSkillUpgradeTurboC.Parser, new[]{ "UnSkillId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgRolePassiveSkillUpgradeTurboS), global::Sw.PMsgRolePassiveSkillUpgradeTurboS.Parser, new[]{ "UnSkillId", "UnTimes", "UnErrorCode" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 客户端：请求主动技能列表
  /// _MSG_ROLE_ACTIVE_SKILL_LIST_C
  /// </summary>
  public sealed partial class PMsgRoleActiveSkillListC : pb::IMessage<PMsgRoleActiveSkillListC> {
    private static readonly pb::MessageParser<PMsgRoleActiveSkillListC> _parser = new pb::MessageParser<PMsgRoleActiveSkillListC>(() => new PMsgRoleActiveSkillListC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgRoleActiveSkillListC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgRoleSkillReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRoleActiveSkillListC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRoleActiveSkillListC(PMsgRoleActiveSkillListC other) : this() {
      unReserved_ = other.unReserved_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRoleActiveSkillListC Clone() {
      return new PMsgRoleActiveSkillListC(this);
    }

    /// <summary>Field number for the "unReserved" field.</summary>
    public const int UnReservedFieldNumber = 1;
    private int unReserved_;
    /// <summary>
    /// 保留字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnReserved {
      get { return unReserved_; }
      set {
        unReserved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgRoleActiveSkillListC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgRoleActiveSkillListC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnReserved != other.UnReserved) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnReserved != 0) hash ^= UnReserved.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnReserved != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnReserved);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnReserved != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnReserved);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgRoleActiveSkillListC other) {
      if (other == null) {
        return;
      }
      if (other.UnReserved != 0) {
        UnReserved = other.UnReserved;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnReserved = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 主动技能信息
  /// </summary>
  public sealed partial class RoleActiveSkillInfo : pb::IMessage<RoleActiveSkillInfo> {
    private static readonly pb::MessageParser<RoleActiveSkillInfo> _parser = new pb::MessageParser<RoleActiveSkillInfo>(() => new RoleActiveSkillInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoleActiveSkillInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgRoleSkillReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleActiveSkillInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleActiveSkillInfo(RoleActiveSkillInfo other) : this() {
      unType_ = other.unType_;
      unIdentifyType_ = other.unIdentifyType_;
      unPosition_ = other.unPosition_;
      unLevel_ = other.unLevel_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleActiveSkillInfo Clone() {
      return new RoleActiveSkillInfo(this);
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 1;
    private int unType_;
    /// <summary>
    /// 技能套装类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    /// <summary>Field number for the "unIdentifyType" field.</summary>
    public const int UnIdentifyTypeFieldNumber = 2;
    private int unIdentifyType_;
    /// <summary>
    /// 身份类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnIdentifyType {
      get { return unIdentifyType_; }
      set {
        unIdentifyType_ = value;
      }
    }

    /// <summary>Field number for the "unPosition" field.</summary>
    public const int UnPositionFieldNumber = 3;
    private int unPosition_;
    /// <summary>
    /// 佩戴标志
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnPosition {
      get { return unPosition_; }
      set {
        unPosition_ = value;
      }
    }

    /// <summary>Field number for the "unLevel" field.</summary>
    public const int UnLevelFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_unLevel_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> unLevel_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 技能等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> UnLevel {
      get { return unLevel_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoleActiveSkillInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoleActiveSkillInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnType != other.UnType) return false;
      if (UnIdentifyType != other.UnIdentifyType) return false;
      if (UnPosition != other.UnPosition) return false;
      if(!unLevel_.Equals(other.unLevel_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnType != 0) hash ^= UnType.GetHashCode();
      if (UnIdentifyType != 0) hash ^= UnIdentifyType.GetHashCode();
      if (UnPosition != 0) hash ^= UnPosition.GetHashCode();
      hash ^= unLevel_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnType);
      }
      if (UnIdentifyType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnIdentifyType);
      }
      if (UnPosition != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnPosition);
      }
      unLevel_.WriteTo(output, _repeated_unLevel_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      if (UnIdentifyType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnIdentifyType);
      }
      if (UnPosition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnPosition);
      }
      size += unLevel_.CalculateSize(_repeated_unLevel_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoleActiveSkillInfo other) {
      if (other == null) {
        return;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
      if (other.UnIdentifyType != 0) {
        UnIdentifyType = other.UnIdentifyType;
      }
      if (other.UnPosition != 0) {
        UnPosition = other.UnPosition;
      }
      unLevel_.Add(other.unLevel_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnType = input.ReadInt32();
            break;
          }
          case 16: {
            UnIdentifyType = input.ReadInt32();
            break;
          }
          case 24: {
            UnPosition = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            unLevel_.AddEntriesFrom(input, _repeated_unLevel_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：请求主动技能列表回复
  /// _MSG_ROLE_ACTIVE_SKILL_LIST_S
  /// </summary>
  public sealed partial class PMsgRoleActiveSkillListS : pb::IMessage<PMsgRoleActiveSkillListS> {
    private static readonly pb::MessageParser<PMsgRoleActiveSkillListS> _parser = new pb::MessageParser<PMsgRoleActiveSkillListS>(() => new PMsgRoleActiveSkillListS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgRoleActiveSkillListS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgRoleSkillReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRoleActiveSkillListS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRoleActiveSkillListS(PMsgRoleActiveSkillListS other) : this() {
      unCount_ = other.unCount_;
      cSkillInfo_ = other.cSkillInfo_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRoleActiveSkillListS Clone() {
      return new PMsgRoleActiveSkillListS(this);
    }

    /// <summary>Field number for the "unCount" field.</summary>
    public const int UnCountFieldNumber = 1;
    private int unCount_;
    /// <summary>
    /// 主动技能数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnCount {
      get { return unCount_; }
      set {
        unCount_ = value;
      }
    }

    /// <summary>Field number for the "cSkillInfo" field.</summary>
    public const int CSkillInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Sw.RoleActiveSkillInfo> _repeated_cSkillInfo_codec
        = pb::FieldCodec.ForMessage(18, global::Sw.RoleActiveSkillInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.RoleActiveSkillInfo> cSkillInfo_ = new pbc::RepeatedField<global::Sw.RoleActiveSkillInfo>();
    /// <summary>
    /// 主动技能信息列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.RoleActiveSkillInfo> CSkillInfo {
      get { return cSkillInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgRoleActiveSkillListS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgRoleActiveSkillListS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnCount != other.UnCount) return false;
      if(!cSkillInfo_.Equals(other.cSkillInfo_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnCount != 0) hash ^= UnCount.GetHashCode();
      hash ^= cSkillInfo_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnCount);
      }
      cSkillInfo_.WriteTo(output, _repeated_cSkillInfo_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnCount);
      }
      size += cSkillInfo_.CalculateSize(_repeated_cSkillInfo_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgRoleActiveSkillListS other) {
      if (other == null) {
        return;
      }
      if (other.UnCount != 0) {
        UnCount = other.UnCount;
      }
      cSkillInfo_.Add(other.cSkillInfo_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnCount = input.ReadInt32();
            break;
          }
          case 18: {
            cSkillInfo_.AddEntriesFrom(input, _repeated_cSkillInfo_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：请求主动技能升级
  /// _MSG_ROLE_ACTIVE_SKILL_UPGRADE_C
  /// </summary>
  public sealed partial class PMsgRoleActiveSkillUpgradeC : pb::IMessage<PMsgRoleActiveSkillUpgradeC> {
    private static readonly pb::MessageParser<PMsgRoleActiveSkillUpgradeC> _parser = new pb::MessageParser<PMsgRoleActiveSkillUpgradeC>(() => new PMsgRoleActiveSkillUpgradeC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgRoleActiveSkillUpgradeC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgRoleSkillReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRoleActiveSkillUpgradeC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRoleActiveSkillUpgradeC(PMsgRoleActiveSkillUpgradeC other) : this() {
      unType_ = other.unType_;
      unIdx_ = other.unIdx_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRoleActiveSkillUpgradeC Clone() {
      return new PMsgRoleActiveSkillUpgradeC(this);
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 1;
    private int unType_;
    /// <summary>
    /// 主动技能套装类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    /// <summary>Field number for the "unIdx" field.</summary>
    public const int UnIdxFieldNumber = 2;
    private int unIdx_;
    /// <summary>
    /// 技能索引：1~4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnIdx {
      get { return unIdx_; }
      set {
        unIdx_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgRoleActiveSkillUpgradeC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgRoleActiveSkillUpgradeC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnType != other.UnType) return false;
      if (UnIdx != other.UnIdx) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnType != 0) hash ^= UnType.GetHashCode();
      if (UnIdx != 0) hash ^= UnIdx.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnType);
      }
      if (UnIdx != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnIdx);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      if (UnIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnIdx);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgRoleActiveSkillUpgradeC other) {
      if (other == null) {
        return;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
      if (other.UnIdx != 0) {
        UnIdx = other.UnIdx;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnType = input.ReadInt32();
            break;
          }
          case 16: {
            UnIdx = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：请求主动技能升级回复
  /// _MSG_ROLE_ACTIVE_SKILL_UPGRADE_S
  /// </summary>
  public sealed partial class PMsgRoleActiveSkillUpgradeS : pb::IMessage<PMsgRoleActiveSkillUpgradeS> {
    private static readonly pb::MessageParser<PMsgRoleActiveSkillUpgradeS> _parser = new pb::MessageParser<PMsgRoleActiveSkillUpgradeS>(() => new PMsgRoleActiveSkillUpgradeS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgRoleActiveSkillUpgradeS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgRoleSkillReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRoleActiveSkillUpgradeS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRoleActiveSkillUpgradeS(PMsgRoleActiveSkillUpgradeS other) : this() {
      unType_ = other.unType_;
      unIdx_ = other.unIdx_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRoleActiveSkillUpgradeS Clone() {
      return new PMsgRoleActiveSkillUpgradeS(this);
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 1;
    private int unType_;
    /// <summary>
    /// 主动技能套装类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    /// <summary>Field number for the "unIdx" field.</summary>
    public const int UnIdxFieldNumber = 2;
    private int unIdx_;
    /// <summary>
    /// 技能索引：1~4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnIdx {
      get { return unIdx_; }
      set {
        unIdx_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgRoleActiveSkillUpgradeS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgRoleActiveSkillUpgradeS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnType != other.UnType) return false;
      if (UnIdx != other.UnIdx) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnType != 0) hash ^= UnType.GetHashCode();
      if (UnIdx != 0) hash ^= UnIdx.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnType);
      }
      if (UnIdx != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnIdx);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      if (UnIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnIdx);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgRoleActiveSkillUpgradeS other) {
      if (other == null) {
        return;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
      if (other.UnIdx != 0) {
        UnIdx = other.UnIdx;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnType = input.ReadInt32();
            break;
          }
          case 16: {
            UnIdx = input.ReadInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：请求佩戴主动技能
  /// _MSG_ROLE_ACTIVE_SKILL_USE_C
  /// </summary>
  public sealed partial class PMsgRoleActiveSkillUseC : pb::IMessage<PMsgRoleActiveSkillUseC> {
    private static readonly pb::MessageParser<PMsgRoleActiveSkillUseC> _parser = new pb::MessageParser<PMsgRoleActiveSkillUseC>(() => new PMsgRoleActiveSkillUseC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgRoleActiveSkillUseC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgRoleSkillReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRoleActiveSkillUseC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRoleActiveSkillUseC(PMsgRoleActiveSkillUseC other) : this() {
      unType_ = other.unType_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRoleActiveSkillUseC Clone() {
      return new PMsgRoleActiveSkillUseC(this);
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 1;
    private int unType_;
    /// <summary>
    /// 主动技能套装类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgRoleActiveSkillUseC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgRoleActiveSkillUseC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnType != other.UnType) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnType != 0) hash ^= UnType.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgRoleActiveSkillUseC other) {
      if (other == null) {
        return;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnType = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：请求佩戴主动技能回复
  /// _MSG_ROLE_ACTIVE_SKILL_USE_S
  /// </summary>
  public sealed partial class PMsgRoleActiveSkillUseS : pb::IMessage<PMsgRoleActiveSkillUseS> {
    private static readonly pb::MessageParser<PMsgRoleActiveSkillUseS> _parser = new pb::MessageParser<PMsgRoleActiveSkillUseS>(() => new PMsgRoleActiveSkillUseS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgRoleActiveSkillUseS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgRoleSkillReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRoleActiveSkillUseS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRoleActiveSkillUseS(PMsgRoleActiveSkillUseS other) : this() {
      unType_ = other.unType_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRoleActiveSkillUseS Clone() {
      return new PMsgRoleActiveSkillUseS(this);
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 1;
    private int unType_;
    /// <summary>
    /// 主动技能套装类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgRoleActiveSkillUseS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgRoleActiveSkillUseS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnType != other.UnType) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnType != 0) hash ^= UnType.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnType);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgRoleActiveSkillUseS other) {
      if (other == null) {
        return;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnType = input.ReadInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：请求主动技能一键升级
  /// _MSG_ROLE_ACTIVE_SKILL_UPGRADE_TURBO_C
  /// </summary>
  public sealed partial class PMsgRoleActiveSkillUpgradeTurboC : pb::IMessage<PMsgRoleActiveSkillUpgradeTurboC> {
    private static readonly pb::MessageParser<PMsgRoleActiveSkillUpgradeTurboC> _parser = new pb::MessageParser<PMsgRoleActiveSkillUpgradeTurboC>(() => new PMsgRoleActiveSkillUpgradeTurboC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgRoleActiveSkillUpgradeTurboC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgRoleSkillReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRoleActiveSkillUpgradeTurboC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRoleActiveSkillUpgradeTurboC(PMsgRoleActiveSkillUpgradeTurboC other) : this() {
      unType_ = other.unType_;
      unIdx_ = other.unIdx_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRoleActiveSkillUpgradeTurboC Clone() {
      return new PMsgRoleActiveSkillUpgradeTurboC(this);
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 1;
    private int unType_;
    /// <summary>
    /// 主动技能套装类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    /// <summary>Field number for the "unIdx" field.</summary>
    public const int UnIdxFieldNumber = 2;
    private int unIdx_;
    /// <summary>
    /// 技能索引：1~4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnIdx {
      get { return unIdx_; }
      set {
        unIdx_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgRoleActiveSkillUpgradeTurboC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgRoleActiveSkillUpgradeTurboC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnType != other.UnType) return false;
      if (UnIdx != other.UnIdx) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnType != 0) hash ^= UnType.GetHashCode();
      if (UnIdx != 0) hash ^= UnIdx.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnType);
      }
      if (UnIdx != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnIdx);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      if (UnIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnIdx);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgRoleActiveSkillUpgradeTurboC other) {
      if (other == null) {
        return;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
      if (other.UnIdx != 0) {
        UnIdx = other.UnIdx;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnType = input.ReadInt32();
            break;
          }
          case 16: {
            UnIdx = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：请求主动技能一键升级回复
  /// _MSG_ROLE_ACTIVE_SKILL_UPGRADE_TURBO_S
  /// </summary>
  public sealed partial class PMsgRoleActiveSkillUpgradeTurboS : pb::IMessage<PMsgRoleActiveSkillUpgradeTurboS> {
    private static readonly pb::MessageParser<PMsgRoleActiveSkillUpgradeTurboS> _parser = new pb::MessageParser<PMsgRoleActiveSkillUpgradeTurboS>(() => new PMsgRoleActiveSkillUpgradeTurboS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgRoleActiveSkillUpgradeTurboS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgRoleSkillReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRoleActiveSkillUpgradeTurboS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRoleActiveSkillUpgradeTurboS(PMsgRoleActiveSkillUpgradeTurboS other) : this() {
      unType_ = other.unType_;
      unIdx_ = other.unIdx_;
      unTimes_ = other.unTimes_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRoleActiveSkillUpgradeTurboS Clone() {
      return new PMsgRoleActiveSkillUpgradeTurboS(this);
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 1;
    private int unType_;
    /// <summary>
    /// 主动技能套装类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    /// <summary>Field number for the "unIdx" field.</summary>
    public const int UnIdxFieldNumber = 2;
    private int unIdx_;
    /// <summary>
    /// 技能索引：1~4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnIdx {
      get { return unIdx_; }
      set {
        unIdx_ = value;
      }
    }

    /// <summary>Field number for the "unTimes" field.</summary>
    public const int UnTimesFieldNumber = 3;
    private int unTimes_;
    /// <summary>
    /// 升级次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnTimes {
      get { return unTimes_; }
      set {
        unTimes_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgRoleActiveSkillUpgradeTurboS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgRoleActiveSkillUpgradeTurboS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnType != other.UnType) return false;
      if (UnIdx != other.UnIdx) return false;
      if (UnTimes != other.UnTimes) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnType != 0) hash ^= UnType.GetHashCode();
      if (UnIdx != 0) hash ^= UnIdx.GetHashCode();
      if (UnTimes != 0) hash ^= UnTimes.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnType);
      }
      if (UnIdx != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnIdx);
      }
      if (UnTimes != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnTimes);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      if (UnIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnIdx);
      }
      if (UnTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnTimes);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgRoleActiveSkillUpgradeTurboS other) {
      if (other == null) {
        return;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
      if (other.UnIdx != 0) {
        UnIdx = other.UnIdx;
      }
      if (other.UnTimes != 0) {
        UnTimes = other.UnTimes;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnType = input.ReadInt32();
            break;
          }
          case 16: {
            UnIdx = input.ReadInt32();
            break;
          }
          case 24: {
            UnTimes = input.ReadInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：请求被动技能列表
  /// _MSG_ROLE_PASSIVE_SKILL_LIST_C
  /// </summary>
  public sealed partial class PMsgRolePassiveSkillListC : pb::IMessage<PMsgRolePassiveSkillListC> {
    private static readonly pb::MessageParser<PMsgRolePassiveSkillListC> _parser = new pb::MessageParser<PMsgRolePassiveSkillListC>(() => new PMsgRolePassiveSkillListC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgRolePassiveSkillListC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgRoleSkillReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRolePassiveSkillListC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRolePassiveSkillListC(PMsgRolePassiveSkillListC other) : this() {
      unReserved_ = other.unReserved_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRolePassiveSkillListC Clone() {
      return new PMsgRolePassiveSkillListC(this);
    }

    /// <summary>Field number for the "unReserved" field.</summary>
    public const int UnReservedFieldNumber = 1;
    private int unReserved_;
    /// <summary>
    /// 保留字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnReserved {
      get { return unReserved_; }
      set {
        unReserved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgRolePassiveSkillListC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgRolePassiveSkillListC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnReserved != other.UnReserved) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnReserved != 0) hash ^= UnReserved.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnReserved != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnReserved);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnReserved != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnReserved);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgRolePassiveSkillListC other) {
      if (other == null) {
        return;
      }
      if (other.UnReserved != 0) {
        UnReserved = other.UnReserved;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnReserved = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 被动技能信息
  /// </summary>
  public sealed partial class RolePassiveSkillInfo : pb::IMessage<RolePassiveSkillInfo> {
    private static readonly pb::MessageParser<RolePassiveSkillInfo> _parser = new pb::MessageParser<RolePassiveSkillInfo>(() => new RolePassiveSkillInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RolePassiveSkillInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgRoleSkillReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RolePassiveSkillInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RolePassiveSkillInfo(RolePassiveSkillInfo other) : this() {
      unSkillId_ = other.unSkillId_;
      unIdentifyType_ = other.unIdentifyType_;
      unPosition_ = other.unPosition_;
      unLevel_ = other.unLevel_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RolePassiveSkillInfo Clone() {
      return new RolePassiveSkillInfo(this);
    }

    /// <summary>Field number for the "unSkillId" field.</summary>
    public const int UnSkillIdFieldNumber = 1;
    private int unSkillId_;
    /// <summary>
    /// 技能id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnSkillId {
      get { return unSkillId_; }
      set {
        unSkillId_ = value;
      }
    }

    /// <summary>Field number for the "unIdentifyType" field.</summary>
    public const int UnIdentifyTypeFieldNumber = 2;
    private int unIdentifyType_;
    /// <summary>
    /// 身份类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnIdentifyType {
      get { return unIdentifyType_; }
      set {
        unIdentifyType_ = value;
      }
    }

    /// <summary>Field number for the "unPosition" field.</summary>
    public const int UnPositionFieldNumber = 3;
    private int unPosition_;
    /// <summary>
    /// 佩戴标志
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnPosition {
      get { return unPosition_; }
      set {
        unPosition_ = value;
      }
    }

    /// <summary>Field number for the "unLevel" field.</summary>
    public const int UnLevelFieldNumber = 4;
    private int unLevel_;
    /// <summary>
    /// 技能等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnLevel {
      get { return unLevel_; }
      set {
        unLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RolePassiveSkillInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RolePassiveSkillInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnSkillId != other.UnSkillId) return false;
      if (UnIdentifyType != other.UnIdentifyType) return false;
      if (UnPosition != other.UnPosition) return false;
      if (UnLevel != other.UnLevel) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnSkillId != 0) hash ^= UnSkillId.GetHashCode();
      if (UnIdentifyType != 0) hash ^= UnIdentifyType.GetHashCode();
      if (UnPosition != 0) hash ^= UnPosition.GetHashCode();
      if (UnLevel != 0) hash ^= UnLevel.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnSkillId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnSkillId);
      }
      if (UnIdentifyType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnIdentifyType);
      }
      if (UnPosition != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnPosition);
      }
      if (UnLevel != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UnLevel);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnSkillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnSkillId);
      }
      if (UnIdentifyType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnIdentifyType);
      }
      if (UnPosition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnPosition);
      }
      if (UnLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnLevel);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RolePassiveSkillInfo other) {
      if (other == null) {
        return;
      }
      if (other.UnSkillId != 0) {
        UnSkillId = other.UnSkillId;
      }
      if (other.UnIdentifyType != 0) {
        UnIdentifyType = other.UnIdentifyType;
      }
      if (other.UnPosition != 0) {
        UnPosition = other.UnPosition;
      }
      if (other.UnLevel != 0) {
        UnLevel = other.UnLevel;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnSkillId = input.ReadInt32();
            break;
          }
          case 16: {
            UnIdentifyType = input.ReadInt32();
            break;
          }
          case 24: {
            UnPosition = input.ReadInt32();
            break;
          }
          case 32: {
            UnLevel = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：请求被动技能列表回复
  /// _MSG_ROLE_PASSIVE_SKILL_LIST_S
  /// </summary>
  public sealed partial class PMsgRolePassiveSkillListS : pb::IMessage<PMsgRolePassiveSkillListS> {
    private static readonly pb::MessageParser<PMsgRolePassiveSkillListS> _parser = new pb::MessageParser<PMsgRolePassiveSkillListS>(() => new PMsgRolePassiveSkillListS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgRolePassiveSkillListS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgRoleSkillReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRolePassiveSkillListS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRolePassiveSkillListS(PMsgRolePassiveSkillListS other) : this() {
      unCount_ = other.unCount_;
      cSkillInfo_ = other.cSkillInfo_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRolePassiveSkillListS Clone() {
      return new PMsgRolePassiveSkillListS(this);
    }

    /// <summary>Field number for the "unCount" field.</summary>
    public const int UnCountFieldNumber = 1;
    private int unCount_;
    /// <summary>
    /// 被动技能数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnCount {
      get { return unCount_; }
      set {
        unCount_ = value;
      }
    }

    /// <summary>Field number for the "cSkillInfo" field.</summary>
    public const int CSkillInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Sw.RolePassiveSkillInfo> _repeated_cSkillInfo_codec
        = pb::FieldCodec.ForMessage(18, global::Sw.RolePassiveSkillInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.RolePassiveSkillInfo> cSkillInfo_ = new pbc::RepeatedField<global::Sw.RolePassiveSkillInfo>();
    /// <summary>
    /// 被动技能信息列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.RolePassiveSkillInfo> CSkillInfo {
      get { return cSkillInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgRolePassiveSkillListS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgRolePassiveSkillListS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnCount != other.UnCount) return false;
      if(!cSkillInfo_.Equals(other.cSkillInfo_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnCount != 0) hash ^= UnCount.GetHashCode();
      hash ^= cSkillInfo_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnCount);
      }
      cSkillInfo_.WriteTo(output, _repeated_cSkillInfo_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnCount);
      }
      size += cSkillInfo_.CalculateSize(_repeated_cSkillInfo_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgRolePassiveSkillListS other) {
      if (other == null) {
        return;
      }
      if (other.UnCount != 0) {
        UnCount = other.UnCount;
      }
      cSkillInfo_.Add(other.cSkillInfo_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnCount = input.ReadInt32();
            break;
          }
          case 18: {
            cSkillInfo_.AddEntriesFrom(input, _repeated_cSkillInfo_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：请求被动技能升级
  /// _MSG_ROLE_PASSIVE_SKILL_UPGRADE_C
  /// </summary>
  public sealed partial class PMsgRolePassiveSkillUpgradeC : pb::IMessage<PMsgRolePassiveSkillUpgradeC> {
    private static readonly pb::MessageParser<PMsgRolePassiveSkillUpgradeC> _parser = new pb::MessageParser<PMsgRolePassiveSkillUpgradeC>(() => new PMsgRolePassiveSkillUpgradeC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgRolePassiveSkillUpgradeC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgRoleSkillReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRolePassiveSkillUpgradeC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRolePassiveSkillUpgradeC(PMsgRolePassiveSkillUpgradeC other) : this() {
      unSkillId_ = other.unSkillId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRolePassiveSkillUpgradeC Clone() {
      return new PMsgRolePassiveSkillUpgradeC(this);
    }

    /// <summary>Field number for the "unSkillId" field.</summary>
    public const int UnSkillIdFieldNumber = 1;
    private int unSkillId_;
    /// <summary>
    /// 技能id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnSkillId {
      get { return unSkillId_; }
      set {
        unSkillId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgRolePassiveSkillUpgradeC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgRolePassiveSkillUpgradeC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnSkillId != other.UnSkillId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnSkillId != 0) hash ^= UnSkillId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnSkillId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnSkillId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnSkillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnSkillId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgRolePassiveSkillUpgradeC other) {
      if (other == null) {
        return;
      }
      if (other.UnSkillId != 0) {
        UnSkillId = other.UnSkillId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnSkillId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：请求被动技能升级回复
  /// _MSG_ROLE_PASSIVE_SKILL_UPGRADE_S
  /// </summary>
  public sealed partial class PMsgRolePassiveSkillUpgradeS : pb::IMessage<PMsgRolePassiveSkillUpgradeS> {
    private static readonly pb::MessageParser<PMsgRolePassiveSkillUpgradeS> _parser = new pb::MessageParser<PMsgRolePassiveSkillUpgradeS>(() => new PMsgRolePassiveSkillUpgradeS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgRolePassiveSkillUpgradeS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgRoleSkillReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRolePassiveSkillUpgradeS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRolePassiveSkillUpgradeS(PMsgRolePassiveSkillUpgradeS other) : this() {
      unSkillId_ = other.unSkillId_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRolePassiveSkillUpgradeS Clone() {
      return new PMsgRolePassiveSkillUpgradeS(this);
    }

    /// <summary>Field number for the "unSkillId" field.</summary>
    public const int UnSkillIdFieldNumber = 1;
    private int unSkillId_;
    /// <summary>
    /// 技能id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnSkillId {
      get { return unSkillId_; }
      set {
        unSkillId_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgRolePassiveSkillUpgradeS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgRolePassiveSkillUpgradeS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnSkillId != other.UnSkillId) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnSkillId != 0) hash ^= UnSkillId.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnSkillId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnSkillId);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnSkillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnSkillId);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgRolePassiveSkillUpgradeS other) {
      if (other == null) {
        return;
      }
      if (other.UnSkillId != 0) {
        UnSkillId = other.UnSkillId;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnSkillId = input.ReadInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：请求佩戴被动技能
  /// _MSG_ROLE_PASSIVE_SKILL_USE_C
  /// </summary>
  public sealed partial class PMsgRolePassiveSkillUseC : pb::IMessage<PMsgRolePassiveSkillUseC> {
    private static readonly pb::MessageParser<PMsgRolePassiveSkillUseC> _parser = new pb::MessageParser<PMsgRolePassiveSkillUseC>(() => new PMsgRolePassiveSkillUseC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgRolePassiveSkillUseC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgRoleSkillReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRolePassiveSkillUseC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRolePassiveSkillUseC(PMsgRolePassiveSkillUseC other) : this() {
      unSkillId_ = other.unSkillId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRolePassiveSkillUseC Clone() {
      return new PMsgRolePassiveSkillUseC(this);
    }

    /// <summary>Field number for the "unSkillId" field.</summary>
    public const int UnSkillIdFieldNumber = 1;
    private int unSkillId_;
    /// <summary>
    /// 技能id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnSkillId {
      get { return unSkillId_; }
      set {
        unSkillId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgRolePassiveSkillUseC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgRolePassiveSkillUseC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnSkillId != other.UnSkillId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnSkillId != 0) hash ^= UnSkillId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnSkillId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnSkillId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnSkillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnSkillId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgRolePassiveSkillUseC other) {
      if (other == null) {
        return;
      }
      if (other.UnSkillId != 0) {
        UnSkillId = other.UnSkillId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnSkillId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：请求佩戴被动技能回复
  /// _MSG_ROLE_PASSIVE_SKILL_USE_S
  /// </summary>
  public sealed partial class PMsgRolePassiveSkillUseS : pb::IMessage<PMsgRolePassiveSkillUseS> {
    private static readonly pb::MessageParser<PMsgRolePassiveSkillUseS> _parser = new pb::MessageParser<PMsgRolePassiveSkillUseS>(() => new PMsgRolePassiveSkillUseS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgRolePassiveSkillUseS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgRoleSkillReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRolePassiveSkillUseS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRolePassiveSkillUseS(PMsgRolePassiveSkillUseS other) : this() {
      unSkillId_ = other.unSkillId_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRolePassiveSkillUseS Clone() {
      return new PMsgRolePassiveSkillUseS(this);
    }

    /// <summary>Field number for the "unSkillId" field.</summary>
    public const int UnSkillIdFieldNumber = 1;
    private int unSkillId_;
    /// <summary>
    /// 技能id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnSkillId {
      get { return unSkillId_; }
      set {
        unSkillId_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgRolePassiveSkillUseS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgRolePassiveSkillUseS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnSkillId != other.UnSkillId) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnSkillId != 0) hash ^= UnSkillId.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnSkillId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnSkillId);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnSkillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnSkillId);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgRolePassiveSkillUseS other) {
      if (other == null) {
        return;
      }
      if (other.UnSkillId != 0) {
        UnSkillId = other.UnSkillId;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnSkillId = input.ReadInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：请求被动技能一键升级
  /// _MSG_ROLE_PASSIVE_SKILL_UPGRADE_TURBO_C
  /// </summary>
  public sealed partial class PMsgRolePassiveSkillUpgradeTurboC : pb::IMessage<PMsgRolePassiveSkillUpgradeTurboC> {
    private static readonly pb::MessageParser<PMsgRolePassiveSkillUpgradeTurboC> _parser = new pb::MessageParser<PMsgRolePassiveSkillUpgradeTurboC>(() => new PMsgRolePassiveSkillUpgradeTurboC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgRolePassiveSkillUpgradeTurboC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgRoleSkillReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRolePassiveSkillUpgradeTurboC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRolePassiveSkillUpgradeTurboC(PMsgRolePassiveSkillUpgradeTurboC other) : this() {
      unSkillId_ = other.unSkillId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRolePassiveSkillUpgradeTurboC Clone() {
      return new PMsgRolePassiveSkillUpgradeTurboC(this);
    }

    /// <summary>Field number for the "unSkillId" field.</summary>
    public const int UnSkillIdFieldNumber = 1;
    private int unSkillId_;
    /// <summary>
    /// 技能id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnSkillId {
      get { return unSkillId_; }
      set {
        unSkillId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgRolePassiveSkillUpgradeTurboC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgRolePassiveSkillUpgradeTurboC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnSkillId != other.UnSkillId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnSkillId != 0) hash ^= UnSkillId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnSkillId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnSkillId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnSkillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnSkillId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgRolePassiveSkillUpgradeTurboC other) {
      if (other == null) {
        return;
      }
      if (other.UnSkillId != 0) {
        UnSkillId = other.UnSkillId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnSkillId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：请求被动技能一键升级回复
  /// _MSG_ROLE_PASSIVE_SKILL_UPGRADE_TURBO_S
  /// </summary>
  public sealed partial class PMsgRolePassiveSkillUpgradeTurboS : pb::IMessage<PMsgRolePassiveSkillUpgradeTurboS> {
    private static readonly pb::MessageParser<PMsgRolePassiveSkillUpgradeTurboS> _parser = new pb::MessageParser<PMsgRolePassiveSkillUpgradeTurboS>(() => new PMsgRolePassiveSkillUpgradeTurboS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgRolePassiveSkillUpgradeTurboS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgRoleSkillReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRolePassiveSkillUpgradeTurboS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRolePassiveSkillUpgradeTurboS(PMsgRolePassiveSkillUpgradeTurboS other) : this() {
      unSkillId_ = other.unSkillId_;
      unTimes_ = other.unTimes_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgRolePassiveSkillUpgradeTurboS Clone() {
      return new PMsgRolePassiveSkillUpgradeTurboS(this);
    }

    /// <summary>Field number for the "unSkillId" field.</summary>
    public const int UnSkillIdFieldNumber = 1;
    private int unSkillId_;
    /// <summary>
    /// 技能id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnSkillId {
      get { return unSkillId_; }
      set {
        unSkillId_ = value;
      }
    }

    /// <summary>Field number for the "unTimes" field.</summary>
    public const int UnTimesFieldNumber = 2;
    private int unTimes_;
    /// <summary>
    /// 升级次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnTimes {
      get { return unTimes_; }
      set {
        unTimes_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgRolePassiveSkillUpgradeTurboS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgRolePassiveSkillUpgradeTurboS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnSkillId != other.UnSkillId) return false;
      if (UnTimes != other.UnTimes) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnSkillId != 0) hash ^= UnSkillId.GetHashCode();
      if (UnTimes != 0) hash ^= UnTimes.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnSkillId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnSkillId);
      }
      if (UnTimes != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnTimes);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnSkillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnSkillId);
      }
      if (UnTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnTimes);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgRolePassiveSkillUpgradeTurboS other) {
      if (other == null) {
        return;
      }
      if (other.UnSkillId != 0) {
        UnSkillId = other.UnSkillId;
      }
      if (other.UnTimes != 0) {
        UnTimes = other.UnTimes;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnSkillId = input.ReadInt32();
            break;
          }
          case 16: {
            UnTimes = input.ReadInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
