// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/PMsgTitle.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Sw {

  /// <summary>Holder for reflection information generated from protos/PMsgTitle.proto</summary>
  public static partial class PMsgTitleReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/PMsgTitle.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PMsgTitleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZwcm90b3MvUE1zZ1RpdGxlLnByb3RvEgJzdyIvCglUaXRsZUluZm8SEQoJ",
            "dW5UaXRsZUlkGAEgASgNEg8KB3VuSW5Vc2UYAiABKA0iKQoTUE1zZ1RpdGxl",
            "UXVlcnlJbmZvQxISCgp1blJlc2VydmVkGAEgASgFImMKE1BNc2dUaXRsZVF1",
            "ZXJ5SW5mb1MSFAoMdW5UaXRsZUNvdW50GAEgASgNEiEKCmNUaXRsZUluZm8Y",
            "AiADKAsyDS5zdy5UaXRsZUluZm8SEwoLdW5FcnJvckNvZGUYYyABKA0iMwoN",
            "UE1zZ1VzZVRpdGxlQxIRCgl1blRpdGxlSWQYASABKA0SDwoHdW5BZG9ybhgC",
            "IAEoDSJICg1QTXNnVXNlVGl0bGVTEhEKCXVuVGl0bGVJZBgBIAEoDRIPCgd1",
            "bkFkb3JuGAIgASgNEhMKC3VuRXJyb3JDb2RlGGMgASgNIiUKEFBNc2dTeW5O",
            "ZXdUaXRsZVMSEQoJdW5UaXRsZUlkGAEgASgNYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.TitleInfo), global::Sw.TitleInfo.Parser, new[]{ "UnTitleId", "UnInUse" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgTitleQueryInfoC), global::Sw.PMsgTitleQueryInfoC.Parser, new[]{ "UnReserved" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgTitleQueryInfoS), global::Sw.PMsgTitleQueryInfoS.Parser, new[]{ "UnTitleCount", "CTitleInfo", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgUseTitleC), global::Sw.PMsgUseTitleC.Parser, new[]{ "UnTitleId", "UnAdorn" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgUseTitleS), global::Sw.PMsgUseTitleS.Parser, new[]{ "UnTitleId", "UnAdorn", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgSynNewTitleS), global::Sw.PMsgSynNewTitleS.Parser, new[]{ "UnTitleId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 头衔信息
  /// </summary>
  public sealed partial class TitleInfo : pb::IMessage<TitleInfo> {
    private static readonly pb::MessageParser<TitleInfo> _parser = new pb::MessageParser<TitleInfo>(() => new TitleInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TitleInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgTitleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TitleInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TitleInfo(TitleInfo other) : this() {
      unTitleId_ = other.unTitleId_;
      unInUse_ = other.unInUse_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TitleInfo Clone() {
      return new TitleInfo(this);
    }

    /// <summary>Field number for the "unTitleId" field.</summary>
    public const int UnTitleIdFieldNumber = 1;
    private uint unTitleId_;
    /// <summary>
    /// 头衔id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnTitleId {
      get { return unTitleId_; }
      set {
        unTitleId_ = value;
      }
    }

    /// <summary>Field number for the "unInUse" field.</summary>
    public const int UnInUseFieldNumber = 2;
    private uint unInUse_;
    /// <summary>
    /// 1使用中,2未使用中
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnInUse {
      get { return unInUse_; }
      set {
        unInUse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TitleInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TitleInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnTitleId != other.UnTitleId) return false;
      if (UnInUse != other.UnInUse) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnTitleId != 0) hash ^= UnTitleId.GetHashCode();
      if (UnInUse != 0) hash ^= UnInUse.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnTitleId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnTitleId);
      }
      if (UnInUse != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(UnInUse);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnTitleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnTitleId);
      }
      if (UnInUse != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnInUse);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TitleInfo other) {
      if (other == null) {
        return;
      }
      if (other.UnTitleId != 0) {
        UnTitleId = other.UnTitleId;
      }
      if (other.UnInUse != 0) {
        UnInUse = other.UnInUse;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnTitleId = input.ReadUInt32();
            break;
          }
          case 16: {
            UnInUse = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：查询头衔信息请求
  /// _MSG_TITLE_QUERY_INFO_C
  /// </summary>
  public sealed partial class PMsgTitleQueryInfoC : pb::IMessage<PMsgTitleQueryInfoC> {
    private static readonly pb::MessageParser<PMsgTitleQueryInfoC> _parser = new pb::MessageParser<PMsgTitleQueryInfoC>(() => new PMsgTitleQueryInfoC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgTitleQueryInfoC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgTitleReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTitleQueryInfoC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTitleQueryInfoC(PMsgTitleQueryInfoC other) : this() {
      unReserved_ = other.unReserved_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTitleQueryInfoC Clone() {
      return new PMsgTitleQueryInfoC(this);
    }

    /// <summary>Field number for the "unReserved" field.</summary>
    public const int UnReservedFieldNumber = 1;
    private int unReserved_;
    /// <summary>
    /// 保留字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnReserved {
      get { return unReserved_; }
      set {
        unReserved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgTitleQueryInfoC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgTitleQueryInfoC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnReserved != other.UnReserved) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnReserved != 0) hash ^= UnReserved.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnReserved != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnReserved);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnReserved != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnReserved);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgTitleQueryInfoC other) {
      if (other == null) {
        return;
      }
      if (other.UnReserved != 0) {
        UnReserved = other.UnReserved;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnReserved = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：查询头衔信息请求回复
  /// _MSG_TITLE_QUERY_INFO_S
  /// </summary>
  public sealed partial class PMsgTitleQueryInfoS : pb::IMessage<PMsgTitleQueryInfoS> {
    private static readonly pb::MessageParser<PMsgTitleQueryInfoS> _parser = new pb::MessageParser<PMsgTitleQueryInfoS>(() => new PMsgTitleQueryInfoS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgTitleQueryInfoS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgTitleReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTitleQueryInfoS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTitleQueryInfoS(PMsgTitleQueryInfoS other) : this() {
      unTitleCount_ = other.unTitleCount_;
      cTitleInfo_ = other.cTitleInfo_.Clone();
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgTitleQueryInfoS Clone() {
      return new PMsgTitleQueryInfoS(this);
    }

    /// <summary>Field number for the "unTitleCount" field.</summary>
    public const int UnTitleCountFieldNumber = 1;
    private uint unTitleCount_;
    /// <summary>
    /// 头衔信息数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnTitleCount {
      get { return unTitleCount_; }
      set {
        unTitleCount_ = value;
      }
    }

    /// <summary>Field number for the "cTitleInfo" field.</summary>
    public const int CTitleInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Sw.TitleInfo> _repeated_cTitleInfo_codec
        = pb::FieldCodec.ForMessage(18, global::Sw.TitleInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.TitleInfo> cTitleInfo_ = new pbc::RepeatedField<global::Sw.TitleInfo>();
    /// <summary>
    /// 头衔信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.TitleInfo> CTitleInfo {
      get { return cTitleInfo_; }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private uint unErrorCode_;
    /// <summary>
    /// 返回错误码 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgTitleQueryInfoS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgTitleQueryInfoS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnTitleCount != other.UnTitleCount) return false;
      if(!cTitleInfo_.Equals(other.cTitleInfo_)) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnTitleCount != 0) hash ^= UnTitleCount.GetHashCode();
      hash ^= cTitleInfo_.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnTitleCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnTitleCount);
      }
      cTitleInfo_.WriteTo(output, _repeated_cTitleInfo_codec);
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteUInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnTitleCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnTitleCount);
      }
      size += cTitleInfo_.CalculateSize(_repeated_cTitleInfo_codec);
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgTitleQueryInfoS other) {
      if (other == null) {
        return;
      }
      if (other.UnTitleCount != 0) {
        UnTitleCount = other.UnTitleCount;
      }
      cTitleInfo_.Add(other.cTitleInfo_);
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnTitleCount = input.ReadUInt32();
            break;
          }
          case 18: {
            cTitleInfo_.AddEntriesFrom(input, _repeated_cTitleInfo_codec);
            break;
          }
          case 792: {
            UnErrorCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：使用头衔请求
  /// _MSG_TITLE_USE_TITLE_C
  /// </summary>
  public sealed partial class PMsgUseTitleC : pb::IMessage<PMsgUseTitleC> {
    private static readonly pb::MessageParser<PMsgUseTitleC> _parser = new pb::MessageParser<PMsgUseTitleC>(() => new PMsgUseTitleC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgUseTitleC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgTitleReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgUseTitleC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgUseTitleC(PMsgUseTitleC other) : this() {
      unTitleId_ = other.unTitleId_;
      unAdorn_ = other.unAdorn_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgUseTitleC Clone() {
      return new PMsgUseTitleC(this);
    }

    /// <summary>Field number for the "unTitleId" field.</summary>
    public const int UnTitleIdFieldNumber = 1;
    private uint unTitleId_;
    /// <summary>
    /// 将要使用的头衔id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnTitleId {
      get { return unTitleId_; }
      set {
        unTitleId_ = value;
      }
    }

    /// <summary>Field number for the "unAdorn" field.</summary>
    public const int UnAdornFieldNumber = 2;
    private uint unAdorn_;
    /// <summary>
    /// 1:佩戴头衔 2:脱下头衔   sw::eEquipTitleType
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnAdorn {
      get { return unAdorn_; }
      set {
        unAdorn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgUseTitleC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgUseTitleC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnTitleId != other.UnTitleId) return false;
      if (UnAdorn != other.UnAdorn) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnTitleId != 0) hash ^= UnTitleId.GetHashCode();
      if (UnAdorn != 0) hash ^= UnAdorn.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnTitleId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnTitleId);
      }
      if (UnAdorn != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(UnAdorn);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnTitleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnTitleId);
      }
      if (UnAdorn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnAdorn);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgUseTitleC other) {
      if (other == null) {
        return;
      }
      if (other.UnTitleId != 0) {
        UnTitleId = other.UnTitleId;
      }
      if (other.UnAdorn != 0) {
        UnAdorn = other.UnAdorn;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnTitleId = input.ReadUInt32();
            break;
          }
          case 16: {
            UnAdorn = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：使用头衔请求回复
  /// _MSG_TITLE_USE_TITLE_S
  /// </summary>
  public sealed partial class PMsgUseTitleS : pb::IMessage<PMsgUseTitleS> {
    private static readonly pb::MessageParser<PMsgUseTitleS> _parser = new pb::MessageParser<PMsgUseTitleS>(() => new PMsgUseTitleS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgUseTitleS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgTitleReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgUseTitleS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgUseTitleS(PMsgUseTitleS other) : this() {
      unTitleId_ = other.unTitleId_;
      unAdorn_ = other.unAdorn_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgUseTitleS Clone() {
      return new PMsgUseTitleS(this);
    }

    /// <summary>Field number for the "unTitleId" field.</summary>
    public const int UnTitleIdFieldNumber = 1;
    private uint unTitleId_;
    /// <summary>
    /// 更新后的头衔id	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnTitleId {
      get { return unTitleId_; }
      set {
        unTitleId_ = value;
      }
    }

    /// <summary>Field number for the "unAdorn" field.</summary>
    public const int UnAdornFieldNumber = 2;
    private uint unAdorn_;
    /// <summary>
    /// 1:佩戴头衔 2:脱下头衔   sw::eEquipTitleType
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnAdorn {
      get { return unAdorn_; }
      set {
        unAdorn_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private uint unErrorCode_;
    /// <summary>
    /// 返回错误码 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgUseTitleS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgUseTitleS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnTitleId != other.UnTitleId) return false;
      if (UnAdorn != other.UnAdorn) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnTitleId != 0) hash ^= UnTitleId.GetHashCode();
      if (UnAdorn != 0) hash ^= UnAdorn.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnTitleId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnTitleId);
      }
      if (UnAdorn != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(UnAdorn);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteUInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnTitleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnTitleId);
      }
      if (UnAdorn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnAdorn);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgUseTitleS other) {
      if (other == null) {
        return;
      }
      if (other.UnTitleId != 0) {
        UnTitleId = other.UnTitleId;
      }
      if (other.UnAdorn != 0) {
        UnAdorn = other.UnAdorn;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnTitleId = input.ReadUInt32();
            break;
          }
          case 16: {
            UnAdorn = input.ReadUInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：新获取头衔通知
  /// _MSG_TITLE_SYN_NEW_TITLE_S
  /// </summary>
  public sealed partial class PMsgSynNewTitleS : pb::IMessage<PMsgSynNewTitleS> {
    private static readonly pb::MessageParser<PMsgSynNewTitleS> _parser = new pb::MessageParser<PMsgSynNewTitleS>(() => new PMsgSynNewTitleS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgSynNewTitleS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgTitleReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSynNewTitleS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSynNewTitleS(PMsgSynNewTitleS other) : this() {
      unTitleId_ = other.unTitleId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgSynNewTitleS Clone() {
      return new PMsgSynNewTitleS(this);
    }

    /// <summary>Field number for the "unTitleId" field.</summary>
    public const int UnTitleIdFieldNumber = 1;
    private uint unTitleId_;
    /// <summary>
    /// 新的头衔id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnTitleId {
      get { return unTitleId_; }
      set {
        unTitleId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgSynNewTitleS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgSynNewTitleS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnTitleId != other.UnTitleId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnTitleId != 0) hash ^= UnTitleId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnTitleId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnTitleId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnTitleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnTitleId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgSynNewTitleS other) {
      if (other == null) {
        return;
      }
      if (other.UnTitleId != 0) {
        UnTitleId = other.UnTitleId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnTitleId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
