// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/PMsgGuildTask.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Sw {

  /// <summary>Holder for reflection information generated from protos/PMsgGuildTask.proto</summary>
  public static partial class PMsgGuildTaskReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/PMsgGuildTask.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PMsgGuildTaskReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chpwcm90b3MvUE1zZ0d1aWxkVGFzay5wcm90bxICc3ciLAoXUE1zZ0d1aWxk",
            "VGFza1F1ZXJ5SW5mb0MSEQoJdW5HdWlsZElkGAEgASgNImgKDUd1aWxkVGFz",
            "a0luZm8SEAoIdW5UYXNrSWQYASABKA0SFwoPdW5HdWlsZFRhc2tUeXBlGAIg",
            "ASgNEhgKEHVuQ29uZFZhbHVlVG90YWwYAyABKA0SEgoKdW5Db21wbGV0ZRgE",
            "IAEoDSJqChdQTXNnR3VpbGRUYXNrUXVlcnlJbmZvUxITCgt1blRhc2tDb3Vu",
            "dBgBIAEoDRIlCgpjVGFza0luZm9zGAIgAygLMhEuc3cuR3VpbGRUYXNrSW5m",
            "bxITCgt1bkVycm9yQ29kZRhjIAEoDSI/ChhQTXNnR3VpbGRUYXNrRmV0Y2hC",
            "b251c0MSEQoJdW5HdWlsZElkGAEgASgNEhAKCHVuVGFza0lkGAIgASgNIkEK",
            "GFBNc2dHdWlsZFRhc2tGZXRjaEJvbnVzUxIQCgh1blRhc2tJZBgBIAEoDRIT",
            "Cgt1bkVycm9yQ29kZRhjIAEoDSIxCh1QTXNnR3VpbGRUYXNrU3luVGFza0Nv",
            "bXBsZXRlUxIQCgh1blRhc2tJZBgBIAEoDWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgGuildTaskQueryInfoC), global::Sw.PMsgGuildTaskQueryInfoC.Parser, new[]{ "UnGuildId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.GuildTaskInfo), global::Sw.GuildTaskInfo.Parser, new[]{ "UnTaskId", "UnGuildTaskType", "UnCondValueTotal", "UnComplete" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgGuildTaskQueryInfoS), global::Sw.PMsgGuildTaskQueryInfoS.Parser, new[]{ "UnTaskCount", "CTaskInfos", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgGuildTaskFetchBonusC), global::Sw.PMsgGuildTaskFetchBonusC.Parser, new[]{ "UnGuildId", "UnTaskId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgGuildTaskFetchBonusS), global::Sw.PMsgGuildTaskFetchBonusS.Parser, new[]{ "UnTaskId", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgGuildTaskSynTaskCompleteS), global::Sw.PMsgGuildTaskSynTaskCompleteS.Parser, new[]{ "UnTaskId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 客户端：查询帮会任务信息
  /// _MSG_GUILD_TASK_QUERY_INFO_C
  /// </summary>
  public sealed partial class PMsgGuildTaskQueryInfoC : pb::IMessage<PMsgGuildTaskQueryInfoC> {
    private static readonly pb::MessageParser<PMsgGuildTaskQueryInfoC> _parser = new pb::MessageParser<PMsgGuildTaskQueryInfoC>(() => new PMsgGuildTaskQueryInfoC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgGuildTaskQueryInfoC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGuildTaskReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildTaskQueryInfoC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildTaskQueryInfoC(PMsgGuildTaskQueryInfoC other) : this() {
      unGuildId_ = other.unGuildId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildTaskQueryInfoC Clone() {
      return new PMsgGuildTaskQueryInfoC(this);
    }

    /// <summary>Field number for the "unGuildId" field.</summary>
    public const int UnGuildIdFieldNumber = 1;
    private uint unGuildId_;
    /// <summary>
    /// 帮会ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnGuildId {
      get { return unGuildId_; }
      set {
        unGuildId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgGuildTaskQueryInfoC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgGuildTaskQueryInfoC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnGuildId != other.UnGuildId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnGuildId != 0) hash ^= UnGuildId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnGuildId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnGuildId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnGuildId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnGuildId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgGuildTaskQueryInfoC other) {
      if (other == null) {
        return;
      }
      if (other.UnGuildId != 0) {
        UnGuildId = other.UnGuildId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnGuildId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 单个任务信息
  /// </summary>
  public sealed partial class GuildTaskInfo : pb::IMessage<GuildTaskInfo> {
    private static readonly pb::MessageParser<GuildTaskInfo> _parser = new pb::MessageParser<GuildTaskInfo>(() => new GuildTaskInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GuildTaskInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGuildTaskReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuildTaskInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuildTaskInfo(GuildTaskInfo other) : this() {
      unTaskId_ = other.unTaskId_;
      unGuildTaskType_ = other.unGuildTaskType_;
      unCondValueTotal_ = other.unCondValueTotal_;
      unComplete_ = other.unComplete_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuildTaskInfo Clone() {
      return new GuildTaskInfo(this);
    }

    /// <summary>Field number for the "unTaskId" field.</summary>
    public const int UnTaskIdFieldNumber = 1;
    private uint unTaskId_;
    /// <summary>
    /// 帮会任务id(自增id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnTaskId {
      get { return unTaskId_; }
      set {
        unTaskId_ = value;
      }
    }

    /// <summary>Field number for the "unGuildTaskType" field.</summary>
    public const int UnGuildTaskTypeFieldNumber = 2;
    private uint unGuildTaskType_;
    /// <summary>
    /// 帮会任务类型id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnGuildTaskType {
      get { return unGuildTaskType_; }
      set {
        unGuildTaskType_ = value;
      }
    }

    /// <summary>Field number for the "unCondValueTotal" field.</summary>
    public const int UnCondValueTotalFieldNumber = 3;
    private uint unCondValueTotal_;
    /// <summary>
    /// 帮会任务完成累积值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnCondValueTotal {
      get { return unCondValueTotal_; }
      set {
        unCondValueTotal_ = value;
      }
    }

    /// <summary>Field number for the "unComplete" field.</summary>
    public const int UnCompleteFieldNumber = 4;
    private uint unComplete_;
    /// <summary>
    /// 帮会任务是否完成	0未完成,1完成
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnComplete {
      get { return unComplete_; }
      set {
        unComplete_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GuildTaskInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GuildTaskInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnTaskId != other.UnTaskId) return false;
      if (UnGuildTaskType != other.UnGuildTaskType) return false;
      if (UnCondValueTotal != other.UnCondValueTotal) return false;
      if (UnComplete != other.UnComplete) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnTaskId != 0) hash ^= UnTaskId.GetHashCode();
      if (UnGuildTaskType != 0) hash ^= UnGuildTaskType.GetHashCode();
      if (UnCondValueTotal != 0) hash ^= UnCondValueTotal.GetHashCode();
      if (UnComplete != 0) hash ^= UnComplete.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnTaskId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnTaskId);
      }
      if (UnGuildTaskType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(UnGuildTaskType);
      }
      if (UnCondValueTotal != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(UnCondValueTotal);
      }
      if (UnComplete != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(UnComplete);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnTaskId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnTaskId);
      }
      if (UnGuildTaskType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnGuildTaskType);
      }
      if (UnCondValueTotal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnCondValueTotal);
      }
      if (UnComplete != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnComplete);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GuildTaskInfo other) {
      if (other == null) {
        return;
      }
      if (other.UnTaskId != 0) {
        UnTaskId = other.UnTaskId;
      }
      if (other.UnGuildTaskType != 0) {
        UnGuildTaskType = other.UnGuildTaskType;
      }
      if (other.UnCondValueTotal != 0) {
        UnCondValueTotal = other.UnCondValueTotal;
      }
      if (other.UnComplete != 0) {
        UnComplete = other.UnComplete;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnTaskId = input.ReadUInt32();
            break;
          }
          case 16: {
            UnGuildTaskType = input.ReadUInt32();
            break;
          }
          case 24: {
            UnCondValueTotal = input.ReadUInt32();
            break;
          }
          case 32: {
            UnComplete = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：查询帮会任务信息回复
  /// _MSG_GUILD_TASK_QUERY_INFO_S
  /// </summary>
  public sealed partial class PMsgGuildTaskQueryInfoS : pb::IMessage<PMsgGuildTaskQueryInfoS> {
    private static readonly pb::MessageParser<PMsgGuildTaskQueryInfoS> _parser = new pb::MessageParser<PMsgGuildTaskQueryInfoS>(() => new PMsgGuildTaskQueryInfoS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgGuildTaskQueryInfoS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGuildTaskReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildTaskQueryInfoS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildTaskQueryInfoS(PMsgGuildTaskQueryInfoS other) : this() {
      unTaskCount_ = other.unTaskCount_;
      cTaskInfos_ = other.cTaskInfos_.Clone();
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildTaskQueryInfoS Clone() {
      return new PMsgGuildTaskQueryInfoS(this);
    }

    /// <summary>Field number for the "unTaskCount" field.</summary>
    public const int UnTaskCountFieldNumber = 1;
    private uint unTaskCount_;
    /// <summary>
    /// 帮会任务数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnTaskCount {
      get { return unTaskCount_; }
      set {
        unTaskCount_ = value;
      }
    }

    /// <summary>Field number for the "cTaskInfos" field.</summary>
    public const int CTaskInfosFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Sw.GuildTaskInfo> _repeated_cTaskInfos_codec
        = pb::FieldCodec.ForMessage(18, global::Sw.GuildTaskInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.GuildTaskInfo> cTaskInfos_ = new pbc::RepeatedField<global::Sw.GuildTaskInfo>();
    /// <summary>
    /// 所有帮会任务信息	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.GuildTaskInfo> CTaskInfos {
      get { return cTaskInfos_; }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private uint unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgGuildTaskQueryInfoS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgGuildTaskQueryInfoS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnTaskCount != other.UnTaskCount) return false;
      if(!cTaskInfos_.Equals(other.cTaskInfos_)) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnTaskCount != 0) hash ^= UnTaskCount.GetHashCode();
      hash ^= cTaskInfos_.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnTaskCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnTaskCount);
      }
      cTaskInfos_.WriteTo(output, _repeated_cTaskInfos_codec);
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteUInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnTaskCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnTaskCount);
      }
      size += cTaskInfos_.CalculateSize(_repeated_cTaskInfos_codec);
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgGuildTaskQueryInfoS other) {
      if (other == null) {
        return;
      }
      if (other.UnTaskCount != 0) {
        UnTaskCount = other.UnTaskCount;
      }
      cTaskInfos_.Add(other.cTaskInfos_);
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnTaskCount = input.ReadUInt32();
            break;
          }
          case 18: {
            cTaskInfos_.AddEntriesFrom(input, _repeated_cTaskInfos_codec);
            break;
          }
          case 792: {
            UnErrorCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：领取帮会任务奖励请求
  /// _MSG_GUILD_TASK_FETCH_BONUS_C
  /// </summary>
  public sealed partial class PMsgGuildTaskFetchBonusC : pb::IMessage<PMsgGuildTaskFetchBonusC> {
    private static readonly pb::MessageParser<PMsgGuildTaskFetchBonusC> _parser = new pb::MessageParser<PMsgGuildTaskFetchBonusC>(() => new PMsgGuildTaskFetchBonusC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgGuildTaskFetchBonusC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGuildTaskReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildTaskFetchBonusC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildTaskFetchBonusC(PMsgGuildTaskFetchBonusC other) : this() {
      unGuildId_ = other.unGuildId_;
      unTaskId_ = other.unTaskId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildTaskFetchBonusC Clone() {
      return new PMsgGuildTaskFetchBonusC(this);
    }

    /// <summary>Field number for the "unGuildId" field.</summary>
    public const int UnGuildIdFieldNumber = 1;
    private uint unGuildId_;
    /// <summary>
    /// 帮会ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnGuildId {
      get { return unGuildId_; }
      set {
        unGuildId_ = value;
      }
    }

    /// <summary>Field number for the "unTaskId" field.</summary>
    public const int UnTaskIdFieldNumber = 2;
    private uint unTaskId_;
    /// <summary>
    /// 帮会任务id(自增id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnTaskId {
      get { return unTaskId_; }
      set {
        unTaskId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgGuildTaskFetchBonusC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgGuildTaskFetchBonusC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnGuildId != other.UnGuildId) return false;
      if (UnTaskId != other.UnTaskId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnGuildId != 0) hash ^= UnGuildId.GetHashCode();
      if (UnTaskId != 0) hash ^= UnTaskId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnGuildId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnGuildId);
      }
      if (UnTaskId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(UnTaskId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnGuildId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnGuildId);
      }
      if (UnTaskId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnTaskId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgGuildTaskFetchBonusC other) {
      if (other == null) {
        return;
      }
      if (other.UnGuildId != 0) {
        UnGuildId = other.UnGuildId;
      }
      if (other.UnTaskId != 0) {
        UnTaskId = other.UnTaskId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnGuildId = input.ReadUInt32();
            break;
          }
          case 16: {
            UnTaskId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：领取帮会任务奖励回复
  /// _MSG_GUILD_TASK_FETCH_BONUS_S
  /// </summary>
  public sealed partial class PMsgGuildTaskFetchBonusS : pb::IMessage<PMsgGuildTaskFetchBonusS> {
    private static readonly pb::MessageParser<PMsgGuildTaskFetchBonusS> _parser = new pb::MessageParser<PMsgGuildTaskFetchBonusS>(() => new PMsgGuildTaskFetchBonusS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgGuildTaskFetchBonusS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGuildTaskReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildTaskFetchBonusS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildTaskFetchBonusS(PMsgGuildTaskFetchBonusS other) : this() {
      unTaskId_ = other.unTaskId_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildTaskFetchBonusS Clone() {
      return new PMsgGuildTaskFetchBonusS(this);
    }

    /// <summary>Field number for the "unTaskId" field.</summary>
    public const int UnTaskIdFieldNumber = 1;
    private uint unTaskId_;
    /// <summary>
    /// 帮会任务id(自增id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnTaskId {
      get { return unTaskId_; }
      set {
        unTaskId_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private uint unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgGuildTaskFetchBonusS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgGuildTaskFetchBonusS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnTaskId != other.UnTaskId) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnTaskId != 0) hash ^= UnTaskId.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnTaskId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnTaskId);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteUInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnTaskId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnTaskId);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgGuildTaskFetchBonusS other) {
      if (other == null) {
        return;
      }
      if (other.UnTaskId != 0) {
        UnTaskId = other.UnTaskId;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnTaskId = input.ReadUInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：通知客户端帮会任务完成
  /// _MSG_GUILD_TASK_SYN_TASK_COMPLETE_S
  /// </summary>
  public sealed partial class PMsgGuildTaskSynTaskCompleteS : pb::IMessage<PMsgGuildTaskSynTaskCompleteS> {
    private static readonly pb::MessageParser<PMsgGuildTaskSynTaskCompleteS> _parser = new pb::MessageParser<PMsgGuildTaskSynTaskCompleteS>(() => new PMsgGuildTaskSynTaskCompleteS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgGuildTaskSynTaskCompleteS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgGuildTaskReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildTaskSynTaskCompleteS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildTaskSynTaskCompleteS(PMsgGuildTaskSynTaskCompleteS other) : this() {
      unTaskId_ = other.unTaskId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgGuildTaskSynTaskCompleteS Clone() {
      return new PMsgGuildTaskSynTaskCompleteS(this);
    }

    /// <summary>Field number for the "unTaskId" field.</summary>
    public const int UnTaskIdFieldNumber = 1;
    private uint unTaskId_;
    /// <summary>
    /// 帮会任务id(自增id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnTaskId {
      get { return unTaskId_; }
      set {
        unTaskId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgGuildTaskSynTaskCompleteS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgGuildTaskSynTaskCompleteS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnTaskId != other.UnTaskId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnTaskId != 0) hash ^= UnTaskId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnTaskId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnTaskId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnTaskId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnTaskId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgGuildTaskSynTaskCompleteS other) {
      if (other == null) {
        return;
      }
      if (other.UnTaskId != 0) {
        UnTaskId = other.UnTaskId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnTaskId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
