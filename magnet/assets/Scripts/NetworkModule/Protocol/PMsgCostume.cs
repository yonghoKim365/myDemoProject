// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/PMsgCostume.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Sw {

  /// <summary>Holder for reflection information generated from protos/PMsgCostume.proto</summary>
  public static partial class PMsgCostumeReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/PMsgCostume.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PMsgCostumeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chhwcm90b3MvUE1zZ0Nvc3R1bWUucHJvdG8SAnN3IicKEVBNc2dDb3N0dW1l",
            "UXVlcnlDEhIKCnVuUmVzZXJ2ZWQYASABKAUipAEKC0Nvc3R1bWVJbmZvEgwK",
            "BHVuSWQYASABKAUSDgoGdW5UeXBlGAIgASgFEhIKCnVuUG9zaXRpb24YAyAB",
            "KAUSFAoMdW5Fdm9sdmVTdGFyGAQgASgFEhQKDHVuRXZvbHZlVGltZRgFIAEo",
            "BRIPCgd1blRva2VuGAYgAygFEhQKDHVuU2tpbGxMZXZlbBgHIAMoBRIQCgh1",
            "bkF0dGFjaxgIIAEoBSJmChFQTXNnQ29zdHVtZVF1ZXJ5UxIWCg51bkNvc3R1",
            "bWVDb3VudBgBIAEoBRIlCgxjQ29zdHVtZUluZm8YAiADKAsyDy5zdy5Db3N0",
            "dW1lSW5mbxISCgp1blNob3dGbGFnGAMgASgFIi8KD1BNc2dDb3N0dW1lRGVs",
            "UxIMCgR1bklkGAEgASgFEg4KBnVuVHlwZRgCIAEoBSIyChJQTXNnQ29zdHVt",
            "ZUV2b2x2ZUMSDAoEdW5JZBgBIAEoBRIOCgZ1blR5cGUYAiABKAUiRwoSUE1z",
            "Z0Nvc3R1bWVFdm9sdmVTEgwKBHVuSWQYASABKAUSDgoGdW5UeXBlGAIgASgF",
            "EhMKC3VuRXJyb3JDb2RlGGMgASgFIkQKEFBNc2dDb3N0dW1lVXNlckMSDAoE",
            "dW5JZBgBIAEoBRIOCgZ1blR5cGUYAiABKAUSEgoKdW5Sb2xlRmxhZxgDIAEo",
            "BSJZChBQTXNnQ29zdHVtZVVzZXJTEgwKBHVuSWQYASABKAUSDgoGdW5UeXBl",
            "GAIgASgFEhIKCnVuUm9sZUZsYWcYAyABKAUSEwoLdW5FcnJvckNvZGUYYyAB",
            "KAUiXAoRUE1zZ0Nvc3R1bWVUb2tlbkMSDAoEdW5JZBgBIAEoBRIOCgZ1blR5",
            "cGUYAiABKAUSFQoNdW5Ub2tlbkl0ZW1JZBgDIAEoBRISCgp1blBvc2l0aW9u",
            "GAQgASgFInEKEVBNc2dDb3N0dW1lVG9rZW5TEgwKBHVuSWQYASABKAUSDgoG",
            "dW5UeXBlGAIgASgFEhUKDXVuVG9rZW5JdGVtSWQYAyABKAUSEgoKdW5Qb3Np",
            "dGlvbhgEIAEoBRITCgt1bkVycm9yQ29kZRhjIAEoBSIkChJQTXNnQ29zdHVt",
            "ZUZ1c2lvbkMSDgoGdW5UeXBlGAEgASgFIjkKElBNc2dDb3N0dW1lRnVzaW9u",
            "UxIOCgZ1blR5cGUYASABKAUSEwoLdW5FcnJvckNvZGUYYyABKAUiPAoYUE1z",
            "Z0Nvc3R1bWVTa2lsbFVwZ3JhZGVDEgwKBHVuSWQYASABKAUSEgoKdW5Ta2ls",
            "bElkeBgCIAEoBSJRChhQTXNnQ29zdHVtZVNraWxsVXBncmFkZVMSDAoEdW5J",
            "ZBgBIAEoBRISCgp1blNraWxsSWR4GAIgASgFEhMKC3VuRXJyb3JDb2RlGGMg",
            "ASgFIioKFFBNc2dDb3N0dW1lU2hvd0ZsYWdDEhIKCnVuU2hvd0ZsYWcYASAB",
            "KAUiKgoUUE1zZ0Nvc3R1bWVTaG93RmxhZ1MSEgoKdW5TaG93RmxhZxgBIAEo",
            "BWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgCostumeQueryC), global::Sw.PMsgCostumeQueryC.Parser, new[]{ "UnReserved" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.CostumeInfo), global::Sw.CostumeInfo.Parser, new[]{ "UnId", "UnType", "UnPosition", "UnEvolveStar", "UnEvolveTime", "UnToken", "UnSkillLevel", "UnAttack" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgCostumeQueryS), global::Sw.PMsgCostumeQueryS.Parser, new[]{ "UnCostumeCount", "CCostumeInfo", "UnShowFlag" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgCostumeDelS), global::Sw.PMsgCostumeDelS.Parser, new[]{ "UnId", "UnType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgCostumeEvolveC), global::Sw.PMsgCostumeEvolveC.Parser, new[]{ "UnId", "UnType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgCostumeEvolveS), global::Sw.PMsgCostumeEvolveS.Parser, new[]{ "UnId", "UnType", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgCostumeUserC), global::Sw.PMsgCostumeUserC.Parser, new[]{ "UnId", "UnType", "UnRoleFlag" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgCostumeUserS), global::Sw.PMsgCostumeUserS.Parser, new[]{ "UnId", "UnType", "UnRoleFlag", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgCostumeTokenC), global::Sw.PMsgCostumeTokenC.Parser, new[]{ "UnId", "UnType", "UnTokenItemId", "UnPosition" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgCostumeTokenS), global::Sw.PMsgCostumeTokenS.Parser, new[]{ "UnId", "UnType", "UnTokenItemId", "UnPosition", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgCostumeFusionC), global::Sw.PMsgCostumeFusionC.Parser, new[]{ "UnType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgCostumeFusionS), global::Sw.PMsgCostumeFusionS.Parser, new[]{ "UnType", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgCostumeSkillUpgradeC), global::Sw.PMsgCostumeSkillUpgradeC.Parser, new[]{ "UnId", "UnSkillIdx" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgCostumeSkillUpgradeS), global::Sw.PMsgCostumeSkillUpgradeS.Parser, new[]{ "UnId", "UnSkillIdx", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgCostumeShowFlagC), global::Sw.PMsgCostumeShowFlagC.Parser, new[]{ "UnShowFlag" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgCostumeShowFlagS), global::Sw.PMsgCostumeShowFlagS.Parser, new[]{ "UnShowFlag" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 客户端：查询时装列表
  /// _MSG_COSTUME_QUERY_C
  /// </summary>
  public sealed partial class PMsgCostumeQueryC : pb::IMessage<PMsgCostumeQueryC> {
    private static readonly pb::MessageParser<PMsgCostumeQueryC> _parser = new pb::MessageParser<PMsgCostumeQueryC>(() => new PMsgCostumeQueryC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgCostumeQueryC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgCostumeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeQueryC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeQueryC(PMsgCostumeQueryC other) : this() {
      unReserved_ = other.unReserved_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeQueryC Clone() {
      return new PMsgCostumeQueryC(this);
    }

    /// <summary>Field number for the "unReserved" field.</summary>
    public const int UnReservedFieldNumber = 1;
    private int unReserved_;
    /// <summary>
    /// 保留字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnReserved {
      get { return unReserved_; }
      set {
        unReserved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgCostumeQueryC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgCostumeQueryC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnReserved != other.UnReserved) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnReserved != 0) hash ^= UnReserved.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnReserved != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnReserved);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnReserved != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnReserved);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgCostumeQueryC other) {
      if (other == null) {
        return;
      }
      if (other.UnReserved != 0) {
        UnReserved = other.UnReserved;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnReserved = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 时装基本信息
  /// </summary>
  public sealed partial class CostumeInfo : pb::IMessage<CostumeInfo> {
    private static readonly pb::MessageParser<CostumeInfo> _parser = new pb::MessageParser<CostumeInfo>(() => new CostumeInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CostumeInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgCostumeReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CostumeInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CostumeInfo(CostumeInfo other) : this() {
      unId_ = other.unId_;
      unType_ = other.unType_;
      unPosition_ = other.unPosition_;
      unEvolveStar_ = other.unEvolveStar_;
      unEvolveTime_ = other.unEvolveTime_;
      unToken_ = other.unToken_.Clone();
      unSkillLevel_ = other.unSkillLevel_.Clone();
      unAttack_ = other.unAttack_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CostumeInfo Clone() {
      return new CostumeInfo(this);
    }

    /// <summary>Field number for the "unId" field.</summary>
    public const int UnIdFieldNumber = 1;
    private int unId_;
    /// <summary>
    /// id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnId {
      get { return unId_; }
      set {
        unId_ = value;
      }
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 2;
    private int unType_;
    /// <summary>
    /// 类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    /// <summary>Field number for the "unPosition" field.</summary>
    public const int UnPositionFieldNumber = 3;
    private int unPosition_;
    /// <summary>
    /// 装备栏位
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnPosition {
      get { return unPosition_; }
      set {
        unPosition_ = value;
      }
    }

    /// <summary>Field number for the "unEvolveStar" field.</summary>
    public const int UnEvolveStarFieldNumber = 4;
    private int unEvolveStar_;
    /// <summary>
    /// 精炼星级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnEvolveStar {
      get { return unEvolveStar_; }
      set {
        unEvolveStar_ = value;
      }
    }

    /// <summary>Field number for the "unEvolveTime" field.</summary>
    public const int UnEvolveTimeFieldNumber = 5;
    private int unEvolveTime_;
    /// <summary>
    /// 精炼次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnEvolveTime {
      get { return unEvolveTime_; }
      set {
        unEvolveTime_ = value;
      }
    }

    /// <summary>Field number for the "unToken" field.</summary>
    public const int UnTokenFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_unToken_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> unToken_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 信物列表（4个）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> UnToken {
      get { return unToken_; }
    }

    /// <summary>Field number for the "unSkillLevel" field.</summary>
    public const int UnSkillLevelFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_unSkillLevel_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> unSkillLevel_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 技能等级列表（5个）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> UnSkillLevel {
      get { return unSkillLevel_; }
    }

    /// <summary>Field number for the "unAttack" field.</summary>
    public const int UnAttackFieldNumber = 8;
    private int unAttack_;
    /// <summary>
    /// 战斗力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnAttack {
      get { return unAttack_; }
      set {
        unAttack_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CostumeInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CostumeInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnId != other.UnId) return false;
      if (UnType != other.UnType) return false;
      if (UnPosition != other.UnPosition) return false;
      if (UnEvolveStar != other.UnEvolveStar) return false;
      if (UnEvolveTime != other.UnEvolveTime) return false;
      if(!unToken_.Equals(other.unToken_)) return false;
      if(!unSkillLevel_.Equals(other.unSkillLevel_)) return false;
      if (UnAttack != other.UnAttack) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnId != 0) hash ^= UnId.GetHashCode();
      if (UnType != 0) hash ^= UnType.GetHashCode();
      if (UnPosition != 0) hash ^= UnPosition.GetHashCode();
      if (UnEvolveStar != 0) hash ^= UnEvolveStar.GetHashCode();
      if (UnEvolveTime != 0) hash ^= UnEvolveTime.GetHashCode();
      hash ^= unToken_.GetHashCode();
      hash ^= unSkillLevel_.GetHashCode();
      if (UnAttack != 0) hash ^= UnAttack.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnId);
      }
      if (UnType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnType);
      }
      if (UnPosition != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnPosition);
      }
      if (UnEvolveStar != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UnEvolveStar);
      }
      if (UnEvolveTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(UnEvolveTime);
      }
      unToken_.WriteTo(output, _repeated_unToken_codec);
      unSkillLevel_.WriteTo(output, _repeated_unSkillLevel_codec);
      if (UnAttack != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(UnAttack);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnId);
      }
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      if (UnPosition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnPosition);
      }
      if (UnEvolveStar != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnEvolveStar);
      }
      if (UnEvolveTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnEvolveTime);
      }
      size += unToken_.CalculateSize(_repeated_unToken_codec);
      size += unSkillLevel_.CalculateSize(_repeated_unSkillLevel_codec);
      if (UnAttack != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnAttack);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CostumeInfo other) {
      if (other == null) {
        return;
      }
      if (other.UnId != 0) {
        UnId = other.UnId;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
      if (other.UnPosition != 0) {
        UnPosition = other.UnPosition;
      }
      if (other.UnEvolveStar != 0) {
        UnEvolveStar = other.UnEvolveStar;
      }
      if (other.UnEvolveTime != 0) {
        UnEvolveTime = other.UnEvolveTime;
      }
      unToken_.Add(other.unToken_);
      unSkillLevel_.Add(other.unSkillLevel_);
      if (other.UnAttack != 0) {
        UnAttack = other.UnAttack;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnId = input.ReadInt32();
            break;
          }
          case 16: {
            UnType = input.ReadInt32();
            break;
          }
          case 24: {
            UnPosition = input.ReadInt32();
            break;
          }
          case 32: {
            UnEvolveStar = input.ReadInt32();
            break;
          }
          case 40: {
            UnEvolveTime = input.ReadInt32();
            break;
          }
          case 50:
          case 48: {
            unToken_.AddEntriesFrom(input, _repeated_unToken_codec);
            break;
          }
          case 58:
          case 56: {
            unSkillLevel_.AddEntriesFrom(input, _repeated_unSkillLevel_codec);
            break;
          }
          case 64: {
            UnAttack = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：查询时装列表回复
  /// _MSG_COSTUME_QUERY_S
  /// </summary>
  public sealed partial class PMsgCostumeQueryS : pb::IMessage<PMsgCostumeQueryS> {
    private static readonly pb::MessageParser<PMsgCostumeQueryS> _parser = new pb::MessageParser<PMsgCostumeQueryS>(() => new PMsgCostumeQueryS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgCostumeQueryS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgCostumeReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeQueryS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeQueryS(PMsgCostumeQueryS other) : this() {
      unCostumeCount_ = other.unCostumeCount_;
      cCostumeInfo_ = other.cCostumeInfo_.Clone();
      unShowFlag_ = other.unShowFlag_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeQueryS Clone() {
      return new PMsgCostumeQueryS(this);
    }

    /// <summary>Field number for the "unCostumeCount" field.</summary>
    public const int UnCostumeCountFieldNumber = 1;
    private int unCostumeCount_;
    /// <summary>
    /// 时装数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnCostumeCount {
      get { return unCostumeCount_; }
      set {
        unCostumeCount_ = value;
      }
    }

    /// <summary>Field number for the "cCostumeInfo" field.</summary>
    public const int CCostumeInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Sw.CostumeInfo> _repeated_cCostumeInfo_codec
        = pb::FieldCodec.ForMessage(18, global::Sw.CostumeInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.CostumeInfo> cCostumeInfo_ = new pbc::RepeatedField<global::Sw.CostumeInfo>();
    /// <summary>
    /// 时装信息列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.CostumeInfo> CCostumeInfo {
      get { return cCostumeInfo_; }
    }

    /// <summary>Field number for the "unShowFlag" field.</summary>
    public const int UnShowFlagFieldNumber = 3;
    private int unShowFlag_;
    /// <summary>
    /// 时装是否显示：0-隐藏，1-显示
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnShowFlag {
      get { return unShowFlag_; }
      set {
        unShowFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgCostumeQueryS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgCostumeQueryS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnCostumeCount != other.UnCostumeCount) return false;
      if(!cCostumeInfo_.Equals(other.cCostumeInfo_)) return false;
      if (UnShowFlag != other.UnShowFlag) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnCostumeCount != 0) hash ^= UnCostumeCount.GetHashCode();
      hash ^= cCostumeInfo_.GetHashCode();
      if (UnShowFlag != 0) hash ^= UnShowFlag.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnCostumeCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnCostumeCount);
      }
      cCostumeInfo_.WriteTo(output, _repeated_cCostumeInfo_codec);
      if (UnShowFlag != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnShowFlag);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnCostumeCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnCostumeCount);
      }
      size += cCostumeInfo_.CalculateSize(_repeated_cCostumeInfo_codec);
      if (UnShowFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnShowFlag);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgCostumeQueryS other) {
      if (other == null) {
        return;
      }
      if (other.UnCostumeCount != 0) {
        UnCostumeCount = other.UnCostumeCount;
      }
      cCostumeInfo_.Add(other.cCostumeInfo_);
      if (other.UnShowFlag != 0) {
        UnShowFlag = other.UnShowFlag;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnCostumeCount = input.ReadInt32();
            break;
          }
          case 18: {
            cCostumeInfo_.AddEntriesFrom(input, _repeated_cCostumeInfo_codec);
            break;
          }
          case 24: {
            UnShowFlag = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：时装删除
  /// _MSG_COSTUME_DEL_S
  /// </summary>
  public sealed partial class PMsgCostumeDelS : pb::IMessage<PMsgCostumeDelS> {
    private static readonly pb::MessageParser<PMsgCostumeDelS> _parser = new pb::MessageParser<PMsgCostumeDelS>(() => new PMsgCostumeDelS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgCostumeDelS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgCostumeReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeDelS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeDelS(PMsgCostumeDelS other) : this() {
      unId_ = other.unId_;
      unType_ = other.unType_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeDelS Clone() {
      return new PMsgCostumeDelS(this);
    }

    /// <summary>Field number for the "unId" field.</summary>
    public const int UnIdFieldNumber = 1;
    private int unId_;
    /// <summary>
    /// id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnId {
      get { return unId_; }
      set {
        unId_ = value;
      }
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 2;
    private int unType_;
    /// <summary>
    /// 类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgCostumeDelS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgCostumeDelS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnId != other.UnId) return false;
      if (UnType != other.UnType) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnId != 0) hash ^= UnId.GetHashCode();
      if (UnType != 0) hash ^= UnType.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnId);
      }
      if (UnType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnId);
      }
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgCostumeDelS other) {
      if (other == null) {
        return;
      }
      if (other.UnId != 0) {
        UnId = other.UnId;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnId = input.ReadInt32();
            break;
          }
          case 16: {
            UnType = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：时装精炼
  /// _MSG_COSTUME_EVOLVE_C
  /// </summary>
  public sealed partial class PMsgCostumeEvolveC : pb::IMessage<PMsgCostumeEvolveC> {
    private static readonly pb::MessageParser<PMsgCostumeEvolveC> _parser = new pb::MessageParser<PMsgCostumeEvolveC>(() => new PMsgCostumeEvolveC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgCostumeEvolveC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgCostumeReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeEvolveC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeEvolveC(PMsgCostumeEvolveC other) : this() {
      unId_ = other.unId_;
      unType_ = other.unType_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeEvolveC Clone() {
      return new PMsgCostumeEvolveC(this);
    }

    /// <summary>Field number for the "unId" field.</summary>
    public const int UnIdFieldNumber = 1;
    private int unId_;
    /// <summary>
    /// id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnId {
      get { return unId_; }
      set {
        unId_ = value;
      }
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 2;
    private int unType_;
    /// <summary>
    /// 类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgCostumeEvolveC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgCostumeEvolveC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnId != other.UnId) return false;
      if (UnType != other.UnType) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnId != 0) hash ^= UnId.GetHashCode();
      if (UnType != 0) hash ^= UnType.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnId);
      }
      if (UnType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnId);
      }
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgCostumeEvolveC other) {
      if (other == null) {
        return;
      }
      if (other.UnId != 0) {
        UnId = other.UnId;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnId = input.ReadInt32();
            break;
          }
          case 16: {
            UnType = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：时装精炼回复
  /// _MSG_COSTUME_EVOLVE_S
  /// </summary>
  public sealed partial class PMsgCostumeEvolveS : pb::IMessage<PMsgCostumeEvolveS> {
    private static readonly pb::MessageParser<PMsgCostumeEvolveS> _parser = new pb::MessageParser<PMsgCostumeEvolveS>(() => new PMsgCostumeEvolveS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgCostumeEvolveS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgCostumeReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeEvolveS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeEvolveS(PMsgCostumeEvolveS other) : this() {
      unId_ = other.unId_;
      unType_ = other.unType_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeEvolveS Clone() {
      return new PMsgCostumeEvolveS(this);
    }

    /// <summary>Field number for the "unId" field.</summary>
    public const int UnIdFieldNumber = 1;
    private int unId_;
    /// <summary>
    /// id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnId {
      get { return unId_; }
      set {
        unId_ = value;
      }
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 2;
    private int unType_;
    /// <summary>
    /// 类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgCostumeEvolveS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgCostumeEvolveS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnId != other.UnId) return false;
      if (UnType != other.UnType) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnId != 0) hash ^= UnId.GetHashCode();
      if (UnType != 0) hash ^= UnType.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnId);
      }
      if (UnType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnType);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnId);
      }
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgCostumeEvolveS other) {
      if (other == null) {
        return;
      }
      if (other.UnId != 0) {
        UnId = other.UnId;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnId = input.ReadInt32();
            break;
          }
          case 16: {
            UnType = input.ReadInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：使用时装
  /// _MSG_COSTUME_USE_C
  /// </summary>
  public sealed partial class PMsgCostumeUserC : pb::IMessage<PMsgCostumeUserC> {
    private static readonly pb::MessageParser<PMsgCostumeUserC> _parser = new pb::MessageParser<PMsgCostumeUserC>(() => new PMsgCostumeUserC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgCostumeUserC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgCostumeReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeUserC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeUserC(PMsgCostumeUserC other) : this() {
      unId_ = other.unId_;
      unType_ = other.unType_;
      unRoleFlag_ = other.unRoleFlag_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeUserC Clone() {
      return new PMsgCostumeUserC(this);
    }

    /// <summary>Field number for the "unId" field.</summary>
    public const int UnIdFieldNumber = 1;
    private int unId_;
    /// <summary>
    /// id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnId {
      get { return unId_; }
      set {
        unId_ = value;
      }
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 2;
    private int unType_;
    /// <summary>
    /// 类型：1-穿上，2-脱下
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    /// <summary>Field number for the "unRoleFlag" field.</summary>
    public const int UnRoleFlagFieldNumber = 3;
    private int unRoleFlag_;
    /// <summary>
    /// 角色标志：1-角色，2-伙伴（预留）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnRoleFlag {
      get { return unRoleFlag_; }
      set {
        unRoleFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgCostumeUserC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgCostumeUserC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnId != other.UnId) return false;
      if (UnType != other.UnType) return false;
      if (UnRoleFlag != other.UnRoleFlag) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnId != 0) hash ^= UnId.GetHashCode();
      if (UnType != 0) hash ^= UnType.GetHashCode();
      if (UnRoleFlag != 0) hash ^= UnRoleFlag.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnId);
      }
      if (UnType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnType);
      }
      if (UnRoleFlag != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnRoleFlag);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnId);
      }
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      if (UnRoleFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnRoleFlag);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgCostumeUserC other) {
      if (other == null) {
        return;
      }
      if (other.UnId != 0) {
        UnId = other.UnId;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
      if (other.UnRoleFlag != 0) {
        UnRoleFlag = other.UnRoleFlag;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnId = input.ReadInt32();
            break;
          }
          case 16: {
            UnType = input.ReadInt32();
            break;
          }
          case 24: {
            UnRoleFlag = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：使用时装回复
  /// _MSG_COSTUME_USE_S
  /// </summary>
  public sealed partial class PMsgCostumeUserS : pb::IMessage<PMsgCostumeUserS> {
    private static readonly pb::MessageParser<PMsgCostumeUserS> _parser = new pb::MessageParser<PMsgCostumeUserS>(() => new PMsgCostumeUserS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgCostumeUserS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgCostumeReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeUserS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeUserS(PMsgCostumeUserS other) : this() {
      unId_ = other.unId_;
      unType_ = other.unType_;
      unRoleFlag_ = other.unRoleFlag_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeUserS Clone() {
      return new PMsgCostumeUserS(this);
    }

    /// <summary>Field number for the "unId" field.</summary>
    public const int UnIdFieldNumber = 1;
    private int unId_;
    /// <summary>
    /// id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnId {
      get { return unId_; }
      set {
        unId_ = value;
      }
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 2;
    private int unType_;
    /// <summary>
    /// 使用类型：1-穿上，2-脱下
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    /// <summary>Field number for the "unRoleFlag" field.</summary>
    public const int UnRoleFlagFieldNumber = 3;
    private int unRoleFlag_;
    /// <summary>
    /// 角色标志：1-角色，2-伙伴（预留）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnRoleFlag {
      get { return unRoleFlag_; }
      set {
        unRoleFlag_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgCostumeUserS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgCostumeUserS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnId != other.UnId) return false;
      if (UnType != other.UnType) return false;
      if (UnRoleFlag != other.UnRoleFlag) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnId != 0) hash ^= UnId.GetHashCode();
      if (UnType != 0) hash ^= UnType.GetHashCode();
      if (UnRoleFlag != 0) hash ^= UnRoleFlag.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnId);
      }
      if (UnType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnType);
      }
      if (UnRoleFlag != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnRoleFlag);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnId);
      }
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      if (UnRoleFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnRoleFlag);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgCostumeUserS other) {
      if (other == null) {
        return;
      }
      if (other.UnId != 0) {
        UnId = other.UnId;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
      if (other.UnRoleFlag != 0) {
        UnRoleFlag = other.UnRoleFlag;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnId = input.ReadInt32();
            break;
          }
          case 16: {
            UnType = input.ReadInt32();
            break;
          }
          case 24: {
            UnRoleFlag = input.ReadInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：信物操作
  /// _MSG_COSTUME_TOKEN_C
  /// </summary>
  public sealed partial class PMsgCostumeTokenC : pb::IMessage<PMsgCostumeTokenC> {
    private static readonly pb::MessageParser<PMsgCostumeTokenC> _parser = new pb::MessageParser<PMsgCostumeTokenC>(() => new PMsgCostumeTokenC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgCostumeTokenC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgCostumeReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeTokenC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeTokenC(PMsgCostumeTokenC other) : this() {
      unId_ = other.unId_;
      unType_ = other.unType_;
      unTokenItemId_ = other.unTokenItemId_;
      unPosition_ = other.unPosition_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeTokenC Clone() {
      return new PMsgCostumeTokenC(this);
    }

    /// <summary>Field number for the "unId" field.</summary>
    public const int UnIdFieldNumber = 1;
    private int unId_;
    /// <summary>
    /// 时装id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnId {
      get { return unId_; }
      set {
        unId_ = value;
      }
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 2;
    private int unType_;
    /// <summary>
    /// 类型：1-穿上，2-脱下（预留）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    /// <summary>Field number for the "unTokenItemId" field.</summary>
    public const int UnTokenItemIdFieldNumber = 3;
    private int unTokenItemId_;
    /// <summary>
    /// Token的道具id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnTokenItemId {
      get { return unTokenItemId_; }
      set {
        unTokenItemId_ = value;
      }
    }

    /// <summary>Field number for the "unPosition" field.</summary>
    public const int UnPositionFieldNumber = 4;
    private int unPosition_;
    /// <summary>
    /// 位置：1~4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnPosition {
      get { return unPosition_; }
      set {
        unPosition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgCostumeTokenC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgCostumeTokenC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnId != other.UnId) return false;
      if (UnType != other.UnType) return false;
      if (UnTokenItemId != other.UnTokenItemId) return false;
      if (UnPosition != other.UnPosition) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnId != 0) hash ^= UnId.GetHashCode();
      if (UnType != 0) hash ^= UnType.GetHashCode();
      if (UnTokenItemId != 0) hash ^= UnTokenItemId.GetHashCode();
      if (UnPosition != 0) hash ^= UnPosition.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnId);
      }
      if (UnType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnType);
      }
      if (UnTokenItemId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnTokenItemId);
      }
      if (UnPosition != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UnPosition);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnId);
      }
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      if (UnTokenItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnTokenItemId);
      }
      if (UnPosition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnPosition);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgCostumeTokenC other) {
      if (other == null) {
        return;
      }
      if (other.UnId != 0) {
        UnId = other.UnId;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
      if (other.UnTokenItemId != 0) {
        UnTokenItemId = other.UnTokenItemId;
      }
      if (other.UnPosition != 0) {
        UnPosition = other.UnPosition;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnId = input.ReadInt32();
            break;
          }
          case 16: {
            UnType = input.ReadInt32();
            break;
          }
          case 24: {
            UnTokenItemId = input.ReadInt32();
            break;
          }
          case 32: {
            UnPosition = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：信物操作回复
  /// _MSG_COSTUME_TOKEN_S
  /// </summary>
  public sealed partial class PMsgCostumeTokenS : pb::IMessage<PMsgCostumeTokenS> {
    private static readonly pb::MessageParser<PMsgCostumeTokenS> _parser = new pb::MessageParser<PMsgCostumeTokenS>(() => new PMsgCostumeTokenS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgCostumeTokenS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgCostumeReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeTokenS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeTokenS(PMsgCostumeTokenS other) : this() {
      unId_ = other.unId_;
      unType_ = other.unType_;
      unTokenItemId_ = other.unTokenItemId_;
      unPosition_ = other.unPosition_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeTokenS Clone() {
      return new PMsgCostumeTokenS(this);
    }

    /// <summary>Field number for the "unId" field.</summary>
    public const int UnIdFieldNumber = 1;
    private int unId_;
    /// <summary>
    /// 时装id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnId {
      get { return unId_; }
      set {
        unId_ = value;
      }
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 2;
    private int unType_;
    /// <summary>
    /// 类型：1-穿上，2-脱下（预留）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    /// <summary>Field number for the "unTokenItemId" field.</summary>
    public const int UnTokenItemIdFieldNumber = 3;
    private int unTokenItemId_;
    /// <summary>
    /// Token的道具id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnTokenItemId {
      get { return unTokenItemId_; }
      set {
        unTokenItemId_ = value;
      }
    }

    /// <summary>Field number for the "unPosition" field.</summary>
    public const int UnPositionFieldNumber = 4;
    private int unPosition_;
    /// <summary>
    /// 位置：1~4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnPosition {
      get { return unPosition_; }
      set {
        unPosition_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgCostumeTokenS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgCostumeTokenS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnId != other.UnId) return false;
      if (UnType != other.UnType) return false;
      if (UnTokenItemId != other.UnTokenItemId) return false;
      if (UnPosition != other.UnPosition) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnId != 0) hash ^= UnId.GetHashCode();
      if (UnType != 0) hash ^= UnType.GetHashCode();
      if (UnTokenItemId != 0) hash ^= UnTokenItemId.GetHashCode();
      if (UnPosition != 0) hash ^= UnPosition.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnId);
      }
      if (UnType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnType);
      }
      if (UnTokenItemId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnTokenItemId);
      }
      if (UnPosition != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UnPosition);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnId);
      }
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      if (UnTokenItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnTokenItemId);
      }
      if (UnPosition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnPosition);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgCostumeTokenS other) {
      if (other == null) {
        return;
      }
      if (other.UnId != 0) {
        UnId = other.UnId;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
      if (other.UnTokenItemId != 0) {
        UnTokenItemId = other.UnTokenItemId;
      }
      if (other.UnPosition != 0) {
        UnPosition = other.UnPosition;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnId = input.ReadInt32();
            break;
          }
          case 16: {
            UnType = input.ReadInt32();
            break;
          }
          case 24: {
            UnTokenItemId = input.ReadInt32();
            break;
          }
          case 32: {
            UnPosition = input.ReadInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：时装合成
  /// _MSG_COSTUME_FUSION_C
  /// </summary>
  public sealed partial class PMsgCostumeFusionC : pb::IMessage<PMsgCostumeFusionC> {
    private static readonly pb::MessageParser<PMsgCostumeFusionC> _parser = new pb::MessageParser<PMsgCostumeFusionC>(() => new PMsgCostumeFusionC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgCostumeFusionC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgCostumeReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeFusionC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeFusionC(PMsgCostumeFusionC other) : this() {
      unType_ = other.unType_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeFusionC Clone() {
      return new PMsgCostumeFusionC(this);
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 1;
    private int unType_;
    /// <summary>
    /// 类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgCostumeFusionC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgCostumeFusionC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnType != other.UnType) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnType != 0) hash ^= UnType.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgCostumeFusionC other) {
      if (other == null) {
        return;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnType = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：时装合成回复
  /// _MSG_COSTUME_FUSION_S
  /// </summary>
  public sealed partial class PMsgCostumeFusionS : pb::IMessage<PMsgCostumeFusionS> {
    private static readonly pb::MessageParser<PMsgCostumeFusionS> _parser = new pb::MessageParser<PMsgCostumeFusionS>(() => new PMsgCostumeFusionS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgCostumeFusionS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgCostumeReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeFusionS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeFusionS(PMsgCostumeFusionS other) : this() {
      unType_ = other.unType_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeFusionS Clone() {
      return new PMsgCostumeFusionS(this);
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 1;
    private int unType_;
    /// <summary>
    /// 类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgCostumeFusionS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgCostumeFusionS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnType != other.UnType) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnType != 0) hash ^= UnType.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnType);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgCostumeFusionS other) {
      if (other == null) {
        return;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnType = input.ReadInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：时装技能升级
  /// _MSG_COSTUME_SKILL_UPGRADE_C
  /// </summary>
  public sealed partial class PMsgCostumeSkillUpgradeC : pb::IMessage<PMsgCostumeSkillUpgradeC> {
    private static readonly pb::MessageParser<PMsgCostumeSkillUpgradeC> _parser = new pb::MessageParser<PMsgCostumeSkillUpgradeC>(() => new PMsgCostumeSkillUpgradeC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgCostumeSkillUpgradeC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgCostumeReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeSkillUpgradeC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeSkillUpgradeC(PMsgCostumeSkillUpgradeC other) : this() {
      unId_ = other.unId_;
      unSkillIdx_ = other.unSkillIdx_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeSkillUpgradeC Clone() {
      return new PMsgCostumeSkillUpgradeC(this);
    }

    /// <summary>Field number for the "unId" field.</summary>
    public const int UnIdFieldNumber = 1;
    private int unId_;
    /// <summary>
    /// 时装id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnId {
      get { return unId_; }
      set {
        unId_ = value;
      }
    }

    /// <summary>Field number for the "unSkillIdx" field.</summary>
    public const int UnSkillIdxFieldNumber = 2;
    private int unSkillIdx_;
    /// <summary>
    /// 技能id：1~5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnSkillIdx {
      get { return unSkillIdx_; }
      set {
        unSkillIdx_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgCostumeSkillUpgradeC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgCostumeSkillUpgradeC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnId != other.UnId) return false;
      if (UnSkillIdx != other.UnSkillIdx) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnId != 0) hash ^= UnId.GetHashCode();
      if (UnSkillIdx != 0) hash ^= UnSkillIdx.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnId);
      }
      if (UnSkillIdx != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnSkillIdx);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnId);
      }
      if (UnSkillIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnSkillIdx);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgCostumeSkillUpgradeC other) {
      if (other == null) {
        return;
      }
      if (other.UnId != 0) {
        UnId = other.UnId;
      }
      if (other.UnSkillIdx != 0) {
        UnSkillIdx = other.UnSkillIdx;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnId = input.ReadInt32();
            break;
          }
          case 16: {
            UnSkillIdx = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：时装技能升级回复
  /// _MSG_COSTUME_SKILL_UPGRADE_S
  /// </summary>
  public sealed partial class PMsgCostumeSkillUpgradeS : pb::IMessage<PMsgCostumeSkillUpgradeS> {
    private static readonly pb::MessageParser<PMsgCostumeSkillUpgradeS> _parser = new pb::MessageParser<PMsgCostumeSkillUpgradeS>(() => new PMsgCostumeSkillUpgradeS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgCostumeSkillUpgradeS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgCostumeReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeSkillUpgradeS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeSkillUpgradeS(PMsgCostumeSkillUpgradeS other) : this() {
      unId_ = other.unId_;
      unSkillIdx_ = other.unSkillIdx_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeSkillUpgradeS Clone() {
      return new PMsgCostumeSkillUpgradeS(this);
    }

    /// <summary>Field number for the "unId" field.</summary>
    public const int UnIdFieldNumber = 1;
    private int unId_;
    /// <summary>
    /// 时装id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnId {
      get { return unId_; }
      set {
        unId_ = value;
      }
    }

    /// <summary>Field number for the "unSkillIdx" field.</summary>
    public const int UnSkillIdxFieldNumber = 2;
    private int unSkillIdx_;
    /// <summary>
    /// 技能id：1~5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnSkillIdx {
      get { return unSkillIdx_; }
      set {
        unSkillIdx_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgCostumeSkillUpgradeS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgCostumeSkillUpgradeS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnId != other.UnId) return false;
      if (UnSkillIdx != other.UnSkillIdx) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnId != 0) hash ^= UnId.GetHashCode();
      if (UnSkillIdx != 0) hash ^= UnSkillIdx.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnId);
      }
      if (UnSkillIdx != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnSkillIdx);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnId);
      }
      if (UnSkillIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnSkillIdx);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgCostumeSkillUpgradeS other) {
      if (other == null) {
        return;
      }
      if (other.UnId != 0) {
        UnId = other.UnId;
      }
      if (other.UnSkillIdx != 0) {
        UnSkillIdx = other.UnSkillIdx;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnId = input.ReadInt32();
            break;
          }
          case 16: {
            UnSkillIdx = input.ReadInt32();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：更改时装显示状态
  /// _MSG_COSTUME_SHOW_FLAG_C
  /// </summary>
  public sealed partial class PMsgCostumeShowFlagC : pb::IMessage<PMsgCostumeShowFlagC> {
    private static readonly pb::MessageParser<PMsgCostumeShowFlagC> _parser = new pb::MessageParser<PMsgCostumeShowFlagC>(() => new PMsgCostumeShowFlagC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgCostumeShowFlagC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgCostumeReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeShowFlagC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeShowFlagC(PMsgCostumeShowFlagC other) : this() {
      unShowFlag_ = other.unShowFlag_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeShowFlagC Clone() {
      return new PMsgCostumeShowFlagC(this);
    }

    /// <summary>Field number for the "unShowFlag" field.</summary>
    public const int UnShowFlagFieldNumber = 1;
    private int unShowFlag_;
    /// <summary>
    /// 时装显示状态(sw::COSTUME_FLAG_TYPE)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnShowFlag {
      get { return unShowFlag_; }
      set {
        unShowFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgCostumeShowFlagC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgCostumeShowFlagC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnShowFlag != other.UnShowFlag) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnShowFlag != 0) hash ^= UnShowFlag.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnShowFlag != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnShowFlag);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnShowFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnShowFlag);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgCostumeShowFlagC other) {
      if (other == null) {
        return;
      }
      if (other.UnShowFlag != 0) {
        UnShowFlag = other.UnShowFlag;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnShowFlag = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：更改时装显示状态回复
  /// _MSG_COSTUME_SHOW_FLAG_S
  /// </summary>
  public sealed partial class PMsgCostumeShowFlagS : pb::IMessage<PMsgCostumeShowFlagS> {
    private static readonly pb::MessageParser<PMsgCostumeShowFlagS> _parser = new pb::MessageParser<PMsgCostumeShowFlagS>(() => new PMsgCostumeShowFlagS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgCostumeShowFlagS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgCostumeReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeShowFlagS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeShowFlagS(PMsgCostumeShowFlagS other) : this() {
      unShowFlag_ = other.unShowFlag_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgCostumeShowFlagS Clone() {
      return new PMsgCostumeShowFlagS(this);
    }

    /// <summary>Field number for the "unShowFlag" field.</summary>
    public const int UnShowFlagFieldNumber = 1;
    private int unShowFlag_;
    /// <summary>
    /// 时装显示状态(sw::COSTUME_FLAG_TYPE)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnShowFlag {
      get { return unShowFlag_; }
      set {
        unShowFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgCostumeShowFlagS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgCostumeShowFlagS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnShowFlag != other.UnShowFlag) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnShowFlag != 0) hash ^= UnShowFlag.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnShowFlag != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnShowFlag);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnShowFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnShowFlag);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgCostumeShowFlagS other) {
      if (other == null) {
        return;
      }
      if (other.UnShowFlag != 0) {
        UnShowFlag = other.UnShowFlag;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnShowFlag = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
