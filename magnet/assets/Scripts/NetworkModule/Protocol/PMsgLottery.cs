// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/PMsgLottery.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Sw {

  /// <summary>Holder for reflection information generated from protos/PMsgLottery.proto</summary>
  public static partial class PMsgLotteryReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/PMsgLottery.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PMsgLotteryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chhwcm90b3MvUE1zZ0xvdHRlcnkucHJvdG8SAnN3IisKFVBNc2dMb3R0ZXJ5",
            "UXVlcnlJbmZvQxISCgp1blJlc2VydmVkGAEgASgFIksKFVBNc2dMb3R0ZXJ5",
            "UXVlcnlJbmZvUxIYChB1bkNvbW1vbkZyZWVUaW1lGAEgASgNEhgKEHVuU2Vu",
            "aW9yRnJlZVRpbWUYAiABKA0iQgoQTG90dGVyeUdvb2RzSW5mbxIOCgZ1blR5",
            "cGUYASABKA0SDwoHdW5Hb29kcxgCIAEoDRINCgV1bk51bRgDIAEoDSIvChlQ",
            "TXNnTG90dGVyeUJveENvbW1vbkZyZWVDEhIKCnVuUmVzZXJ2ZWQYASABKAUi",
            "bgoZUE1zZ0xvdHRlcnlCb3hDb21tb25GcmVlUxIUCgx1bkdvb2RzQ291bnQY",
            "ASABKA0SJwoJZ29vZHNJbmZvGAIgAygLMhQuc3cuTG90dGVyeUdvb2RzSW5m",
            "bxISCgpuRXJyb3JDb2RlGGMgASgFIisKFVBNc2dMb3R0ZXJ5Qm94Q29tbW9u",
            "QxISCgp1blJlc2VydmVkGAEgASgFImoKFVBNc2dMb3R0ZXJ5Qm94Q29tbW9u",
            "UxIUCgx1bkdvb2RzQ291bnQYASABKA0SJwoJZ29vZHNJbmZvGAIgAygLMhQu",
            "c3cuTG90dGVyeUdvb2RzSW5mbxISCgpuRXJyb3JDb2RlGGMgASgFIjQKHlBN",
            "c2dMb3R0ZXJ5Qm94Q29tbW9uTWFueXRpbWVzQxISCgp1blJlc2VydmVkGAEg",
            "ASgFInMKHlBNc2dMb3R0ZXJ5Qm94Q29tbW9uTWFueXRpbWVzUxIUCgx1bkdv",
            "b2RzQ291bnQYASABKA0SJwoJZ29vZHNJbmZvGAIgAygLMhQuc3cuTG90dGVy",
            "eUdvb2RzSW5mbxISCgpuRXJyb3JDb2RlGGMgASgFIi8KGVBNc2dMb3R0ZXJ5",
            "Qm94U2VuaW9yRnJlZUMSEgoKdW5SZXNlcnZlZBgBIAEoBSJuChlQTXNnTG90",
            "dGVyeUJveFNlbmlvckZyZWVTEhQKDHVuR29vZHNDb3VudBgBIAEoDRInCgln",
            "b29kc0luZm8YAiADKAsyFC5zdy5Mb3R0ZXJ5R29vZHNJbmZvEhIKCm5FcnJv",
            "ckNvZGUYYyABKAUiKwoVUE1zZ0xvdHRlcnlCb3hTZW5pb3JDEhIKCnVuUmVz",
            "ZXJ2ZWQYASABKAUiagoVUE1zZ0xvdHRlcnlCb3hTZW5pb3JTEhQKDHVuR29v",
            "ZHNDb3VudBgBIAEoDRInCglnb29kc0luZm8YAiADKAsyFC5zdy5Mb3R0ZXJ5",
            "R29vZHNJbmZvEhIKCm5FcnJvckNvZGUYYyABKAUiNAoeUE1zZ0xvdHRlcnlC",
            "b3hTZW5pb3JNYW55dGltZXNDEhIKCnVuUmVzZXJ2ZWQYASABKAUicwoeUE1z",
            "Z0xvdHRlcnlCb3hTZW5pb3JNYW55dGltZXNTEhQKDHVuR29vZHNDb3VudBgB",
            "IAEoDRInCglnb29kc0luZm8YAiADKAsyFC5zdy5Mb3R0ZXJ5R29vZHNJbmZv",
            "EhIKCm5FcnJvckNvZGUYYyABKAViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgLotteryQueryInfoC), global::Sw.PMsgLotteryQueryInfoC.Parser, new[]{ "UnReserved" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgLotteryQueryInfoS), global::Sw.PMsgLotteryQueryInfoS.Parser, new[]{ "UnCommonFreeTime", "UnSeniorFreeTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.LotteryGoodsInfo), global::Sw.LotteryGoodsInfo.Parser, new[]{ "UnType", "UnGoods", "UnNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgLotteryBoxCommonFreeC), global::Sw.PMsgLotteryBoxCommonFreeC.Parser, new[]{ "UnReserved" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgLotteryBoxCommonFreeS), global::Sw.PMsgLotteryBoxCommonFreeS.Parser, new[]{ "UnGoodsCount", "GoodsInfo", "NErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgLotteryBoxCommonC), global::Sw.PMsgLotteryBoxCommonC.Parser, new[]{ "UnReserved" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgLotteryBoxCommonS), global::Sw.PMsgLotteryBoxCommonS.Parser, new[]{ "UnGoodsCount", "GoodsInfo", "NErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgLotteryBoxCommonManytimesC), global::Sw.PMsgLotteryBoxCommonManytimesC.Parser, new[]{ "UnReserved" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgLotteryBoxCommonManytimesS), global::Sw.PMsgLotteryBoxCommonManytimesS.Parser, new[]{ "UnGoodsCount", "GoodsInfo", "NErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgLotteryBoxSeniorFreeC), global::Sw.PMsgLotteryBoxSeniorFreeC.Parser, new[]{ "UnReserved" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgLotteryBoxSeniorFreeS), global::Sw.PMsgLotteryBoxSeniorFreeS.Parser, new[]{ "UnGoodsCount", "GoodsInfo", "NErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgLotteryBoxSeniorC), global::Sw.PMsgLotteryBoxSeniorC.Parser, new[]{ "UnReserved" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgLotteryBoxSeniorS), global::Sw.PMsgLotteryBoxSeniorS.Parser, new[]{ "UnGoodsCount", "GoodsInfo", "NErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgLotteryBoxSeniorManytimesC), global::Sw.PMsgLotteryBoxSeniorManytimesC.Parser, new[]{ "UnReserved" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgLotteryBoxSeniorManytimesS), global::Sw.PMsgLotteryBoxSeniorManytimesS.Parser, new[]{ "UnGoodsCount", "GoodsInfo", "NErrorCode" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 客户端：查询抽箱子信息
  /// _MSG_LOTTERY_BOX_QUERYINFO_C
  /// </summary>
  public sealed partial class PMsgLotteryQueryInfoC : pb::IMessage<PMsgLotteryQueryInfoC> {
    private static readonly pb::MessageParser<PMsgLotteryQueryInfoC> _parser = new pb::MessageParser<PMsgLotteryQueryInfoC>(() => new PMsgLotteryQueryInfoC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgLotteryQueryInfoC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgLotteryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryQueryInfoC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryQueryInfoC(PMsgLotteryQueryInfoC other) : this() {
      unReserved_ = other.unReserved_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryQueryInfoC Clone() {
      return new PMsgLotteryQueryInfoC(this);
    }

    /// <summary>Field number for the "unReserved" field.</summary>
    public const int UnReservedFieldNumber = 1;
    private int unReserved_;
    /// <summary>
    /// 保留字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnReserved {
      get { return unReserved_; }
      set {
        unReserved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgLotteryQueryInfoC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgLotteryQueryInfoC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnReserved != other.UnReserved) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnReserved != 0) hash ^= UnReserved.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnReserved != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnReserved);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnReserved != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnReserved);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgLotteryQueryInfoC other) {
      if (other == null) {
        return;
      }
      if (other.UnReserved != 0) {
        UnReserved = other.UnReserved;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnReserved = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：查询抽箱子信息回复
  /// _MSG_LOTTERY_BOX_QUERYINFO_S
  /// </summary>
  public sealed partial class PMsgLotteryQueryInfoS : pb::IMessage<PMsgLotteryQueryInfoS> {
    private static readonly pb::MessageParser<PMsgLotteryQueryInfoS> _parser = new pb::MessageParser<PMsgLotteryQueryInfoS>(() => new PMsgLotteryQueryInfoS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgLotteryQueryInfoS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgLotteryReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryQueryInfoS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryQueryInfoS(PMsgLotteryQueryInfoS other) : this() {
      unCommonFreeTime_ = other.unCommonFreeTime_;
      unSeniorFreeTime_ = other.unSeniorFreeTime_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryQueryInfoS Clone() {
      return new PMsgLotteryQueryInfoS(this);
    }

    /// <summary>Field number for the "unCommonFreeTime" field.</summary>
    public const int UnCommonFreeTimeFieldNumber = 1;
    private uint unCommonFreeTime_;
    /// <summary>
    /// 普通免费抽奖倒记时(秒)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnCommonFreeTime {
      get { return unCommonFreeTime_; }
      set {
        unCommonFreeTime_ = value;
      }
    }

    /// <summary>Field number for the "unSeniorFreeTime" field.</summary>
    public const int UnSeniorFreeTimeFieldNumber = 2;
    private uint unSeniorFreeTime_;
    /// <summary>
    /// 高级免费抽奖倒记时(秒)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnSeniorFreeTime {
      get { return unSeniorFreeTime_; }
      set {
        unSeniorFreeTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgLotteryQueryInfoS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgLotteryQueryInfoS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnCommonFreeTime != other.UnCommonFreeTime) return false;
      if (UnSeniorFreeTime != other.UnSeniorFreeTime) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnCommonFreeTime != 0) hash ^= UnCommonFreeTime.GetHashCode();
      if (UnSeniorFreeTime != 0) hash ^= UnSeniorFreeTime.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnCommonFreeTime != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnCommonFreeTime);
      }
      if (UnSeniorFreeTime != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(UnSeniorFreeTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnCommonFreeTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnCommonFreeTime);
      }
      if (UnSeniorFreeTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnSeniorFreeTime);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgLotteryQueryInfoS other) {
      if (other == null) {
        return;
      }
      if (other.UnCommonFreeTime != 0) {
        UnCommonFreeTime = other.UnCommonFreeTime;
      }
      if (other.UnSeniorFreeTime != 0) {
        UnSeniorFreeTime = other.UnSeniorFreeTime;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnCommonFreeTime = input.ReadUInt32();
            break;
          }
          case 16: {
            UnSeniorFreeTime = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 统一类型信息
  /// </summary>
  public sealed partial class LotteryGoodsInfo : pb::IMessage<LotteryGoodsInfo> {
    private static readonly pb::MessageParser<LotteryGoodsInfo> _parser = new pb::MessageParser<LotteryGoodsInfo>(() => new LotteryGoodsInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LotteryGoodsInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgLotteryReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LotteryGoodsInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LotteryGoodsInfo(LotteryGoodsInfo other) : this() {
      unType_ = other.unType_;
      unGoods_ = other.unGoods_;
      unNum_ = other.unNum_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LotteryGoodsInfo Clone() {
      return new LotteryGoodsInfo(this);
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 1;
    private uint unType_;
    /// <summary>
    /// 统一类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    /// <summary>Field number for the "unGoods" field.</summary>
    public const int UnGoodsFieldNumber = 2;
    private uint unGoods_;
    /// <summary>
    /// goods类型;当unType为货币时,此变量为0无意义;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnGoods {
      get { return unGoods_; }
      set {
        unGoods_ = value;
      }
    }

    /// <summary>Field number for the "unNum" field.</summary>
    public const int UnNumFieldNumber = 3;
    private uint unNum_;
    /// <summary>
    /// 数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnNum {
      get { return unNum_; }
      set {
        unNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LotteryGoodsInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LotteryGoodsInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnType != other.UnType) return false;
      if (UnGoods != other.UnGoods) return false;
      if (UnNum != other.UnNum) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnType != 0) hash ^= UnType.GetHashCode();
      if (UnGoods != 0) hash ^= UnGoods.GetHashCode();
      if (UnNum != 0) hash ^= UnNum.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnType != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnType);
      }
      if (UnGoods != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(UnGoods);
      }
      if (UnNum != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(UnNum);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnType);
      }
      if (UnGoods != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnGoods);
      }
      if (UnNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnNum);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LotteryGoodsInfo other) {
      if (other == null) {
        return;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
      if (other.UnGoods != 0) {
        UnGoods = other.UnGoods;
      }
      if (other.UnNum != 0) {
        UnNum = other.UnNum;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnType = input.ReadUInt32();
            break;
          }
          case 16: {
            UnGoods = input.ReadUInt32();
            break;
          }
          case 24: {
            UnNum = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端 免费普通抽奖请求
  /// _MSG_LOTTERY_BOX_COMMONFREE_C
  /// </summary>
  public sealed partial class PMsgLotteryBoxCommonFreeC : pb::IMessage<PMsgLotteryBoxCommonFreeC> {
    private static readonly pb::MessageParser<PMsgLotteryBoxCommonFreeC> _parser = new pb::MessageParser<PMsgLotteryBoxCommonFreeC>(() => new PMsgLotteryBoxCommonFreeC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgLotteryBoxCommonFreeC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgLotteryReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxCommonFreeC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxCommonFreeC(PMsgLotteryBoxCommonFreeC other) : this() {
      unReserved_ = other.unReserved_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxCommonFreeC Clone() {
      return new PMsgLotteryBoxCommonFreeC(this);
    }

    /// <summary>Field number for the "unReserved" field.</summary>
    public const int UnReservedFieldNumber = 1;
    private int unReserved_;
    /// <summary>
    /// 保留字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnReserved {
      get { return unReserved_; }
      set {
        unReserved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgLotteryBoxCommonFreeC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgLotteryBoxCommonFreeC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnReserved != other.UnReserved) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnReserved != 0) hash ^= UnReserved.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnReserved != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnReserved);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnReserved != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnReserved);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgLotteryBoxCommonFreeC other) {
      if (other == null) {
        return;
      }
      if (other.UnReserved != 0) {
        UnReserved = other.UnReserved;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnReserved = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：回复免费普通抽奖请求
  /// _MSG_LOTTERY_BOX_COMMONFREE_S
  /// </summary>
  public sealed partial class PMsgLotteryBoxCommonFreeS : pb::IMessage<PMsgLotteryBoxCommonFreeS> {
    private static readonly pb::MessageParser<PMsgLotteryBoxCommonFreeS> _parser = new pb::MessageParser<PMsgLotteryBoxCommonFreeS>(() => new PMsgLotteryBoxCommonFreeS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgLotteryBoxCommonFreeS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgLotteryReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxCommonFreeS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxCommonFreeS(PMsgLotteryBoxCommonFreeS other) : this() {
      unGoodsCount_ = other.unGoodsCount_;
      goodsInfo_ = other.goodsInfo_.Clone();
      nErrorCode_ = other.nErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxCommonFreeS Clone() {
      return new PMsgLotteryBoxCommonFreeS(this);
    }

    /// <summary>Field number for the "unGoodsCount" field.</summary>
    public const int UnGoodsCountFieldNumber = 1;
    private uint unGoodsCount_;
    /// <summary>
    /// 奖励数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnGoodsCount {
      get { return unGoodsCount_; }
      set {
        unGoodsCount_ = value;
      }
    }

    /// <summary>Field number for the "goodsInfo" field.</summary>
    public const int GoodsInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Sw.LotteryGoodsInfo> _repeated_goodsInfo_codec
        = pb::FieldCodec.ForMessage(18, global::Sw.LotteryGoodsInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.LotteryGoodsInfo> goodsInfo_ = new pbc::RepeatedField<global::Sw.LotteryGoodsInfo>();
    /// <summary>
    /// 奖励信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.LotteryGoodsInfo> GoodsInfo {
      get { return goodsInfo_; }
    }

    /// <summary>Field number for the "nErrorCode" field.</summary>
    public const int NErrorCodeFieldNumber = 99;
    private int nErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NErrorCode {
      get { return nErrorCode_; }
      set {
        nErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgLotteryBoxCommonFreeS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgLotteryBoxCommonFreeS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnGoodsCount != other.UnGoodsCount) return false;
      if(!goodsInfo_.Equals(other.goodsInfo_)) return false;
      if (NErrorCode != other.NErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnGoodsCount != 0) hash ^= UnGoodsCount.GetHashCode();
      hash ^= goodsInfo_.GetHashCode();
      if (NErrorCode != 0) hash ^= NErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnGoodsCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnGoodsCount);
      }
      goodsInfo_.WriteTo(output, _repeated_goodsInfo_codec);
      if (NErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(NErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnGoodsCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnGoodsCount);
      }
      size += goodsInfo_.CalculateSize(_repeated_goodsInfo_codec);
      if (NErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgLotteryBoxCommonFreeS other) {
      if (other == null) {
        return;
      }
      if (other.UnGoodsCount != 0) {
        UnGoodsCount = other.UnGoodsCount;
      }
      goodsInfo_.Add(other.goodsInfo_);
      if (other.NErrorCode != 0) {
        NErrorCode = other.NErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnGoodsCount = input.ReadUInt32();
            break;
          }
          case 18: {
            goodsInfo_.AddEntriesFrom(input, _repeated_goodsInfo_codec);
            break;
          }
          case 792: {
            NErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端 普通抽奖请求
  /// _MSG_LOTTERY_BOX_COMMON_C
  /// </summary>
  public sealed partial class PMsgLotteryBoxCommonC : pb::IMessage<PMsgLotteryBoxCommonC> {
    private static readonly pb::MessageParser<PMsgLotteryBoxCommonC> _parser = new pb::MessageParser<PMsgLotteryBoxCommonC>(() => new PMsgLotteryBoxCommonC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgLotteryBoxCommonC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgLotteryReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxCommonC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxCommonC(PMsgLotteryBoxCommonC other) : this() {
      unReserved_ = other.unReserved_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxCommonC Clone() {
      return new PMsgLotteryBoxCommonC(this);
    }

    /// <summary>Field number for the "unReserved" field.</summary>
    public const int UnReservedFieldNumber = 1;
    private int unReserved_;
    /// <summary>
    /// 保留字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnReserved {
      get { return unReserved_; }
      set {
        unReserved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgLotteryBoxCommonC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgLotteryBoxCommonC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnReserved != other.UnReserved) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnReserved != 0) hash ^= UnReserved.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnReserved != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnReserved);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnReserved != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnReserved);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgLotteryBoxCommonC other) {
      if (other == null) {
        return;
      }
      if (other.UnReserved != 0) {
        UnReserved = other.UnReserved;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnReserved = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：回复普通抽奖请求
  /// _MSG_LOTTERY_BOX_COMMON_S
  /// </summary>
  public sealed partial class PMsgLotteryBoxCommonS : pb::IMessage<PMsgLotteryBoxCommonS> {
    private static readonly pb::MessageParser<PMsgLotteryBoxCommonS> _parser = new pb::MessageParser<PMsgLotteryBoxCommonS>(() => new PMsgLotteryBoxCommonS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgLotteryBoxCommonS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgLotteryReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxCommonS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxCommonS(PMsgLotteryBoxCommonS other) : this() {
      unGoodsCount_ = other.unGoodsCount_;
      goodsInfo_ = other.goodsInfo_.Clone();
      nErrorCode_ = other.nErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxCommonS Clone() {
      return new PMsgLotteryBoxCommonS(this);
    }

    /// <summary>Field number for the "unGoodsCount" field.</summary>
    public const int UnGoodsCountFieldNumber = 1;
    private uint unGoodsCount_;
    /// <summary>
    /// 奖励数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnGoodsCount {
      get { return unGoodsCount_; }
      set {
        unGoodsCount_ = value;
      }
    }

    /// <summary>Field number for the "goodsInfo" field.</summary>
    public const int GoodsInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Sw.LotteryGoodsInfo> _repeated_goodsInfo_codec
        = pb::FieldCodec.ForMessage(18, global::Sw.LotteryGoodsInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.LotteryGoodsInfo> goodsInfo_ = new pbc::RepeatedField<global::Sw.LotteryGoodsInfo>();
    /// <summary>
    /// 奖励信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.LotteryGoodsInfo> GoodsInfo {
      get { return goodsInfo_; }
    }

    /// <summary>Field number for the "nErrorCode" field.</summary>
    public const int NErrorCodeFieldNumber = 99;
    private int nErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NErrorCode {
      get { return nErrorCode_; }
      set {
        nErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgLotteryBoxCommonS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgLotteryBoxCommonS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnGoodsCount != other.UnGoodsCount) return false;
      if(!goodsInfo_.Equals(other.goodsInfo_)) return false;
      if (NErrorCode != other.NErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnGoodsCount != 0) hash ^= UnGoodsCount.GetHashCode();
      hash ^= goodsInfo_.GetHashCode();
      if (NErrorCode != 0) hash ^= NErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnGoodsCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnGoodsCount);
      }
      goodsInfo_.WriteTo(output, _repeated_goodsInfo_codec);
      if (NErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(NErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnGoodsCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnGoodsCount);
      }
      size += goodsInfo_.CalculateSize(_repeated_goodsInfo_codec);
      if (NErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgLotteryBoxCommonS other) {
      if (other == null) {
        return;
      }
      if (other.UnGoodsCount != 0) {
        UnGoodsCount = other.UnGoodsCount;
      }
      goodsInfo_.Add(other.goodsInfo_);
      if (other.NErrorCode != 0) {
        NErrorCode = other.NErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnGoodsCount = input.ReadUInt32();
            break;
          }
          case 18: {
            goodsInfo_.AddEntriesFrom(input, _repeated_goodsInfo_codec);
            break;
          }
          case 792: {
            NErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端 普通10连抽奖请求
  /// _MSG_LOTTERY_BOX_COMMON_MANYTIMES_C
  /// </summary>
  public sealed partial class PMsgLotteryBoxCommonManytimesC : pb::IMessage<PMsgLotteryBoxCommonManytimesC> {
    private static readonly pb::MessageParser<PMsgLotteryBoxCommonManytimesC> _parser = new pb::MessageParser<PMsgLotteryBoxCommonManytimesC>(() => new PMsgLotteryBoxCommonManytimesC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgLotteryBoxCommonManytimesC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgLotteryReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxCommonManytimesC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxCommonManytimesC(PMsgLotteryBoxCommonManytimesC other) : this() {
      unReserved_ = other.unReserved_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxCommonManytimesC Clone() {
      return new PMsgLotteryBoxCommonManytimesC(this);
    }

    /// <summary>Field number for the "unReserved" field.</summary>
    public const int UnReservedFieldNumber = 1;
    private int unReserved_;
    /// <summary>
    /// 保留字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnReserved {
      get { return unReserved_; }
      set {
        unReserved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgLotteryBoxCommonManytimesC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgLotteryBoxCommonManytimesC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnReserved != other.UnReserved) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnReserved != 0) hash ^= UnReserved.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnReserved != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnReserved);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnReserved != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnReserved);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgLotteryBoxCommonManytimesC other) {
      if (other == null) {
        return;
      }
      if (other.UnReserved != 0) {
        UnReserved = other.UnReserved;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnReserved = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：回复普通10连抽奖请求
  /// _MSG_LOTTERY_BOX_COMMON_MANYTIMES_S
  /// </summary>
  public sealed partial class PMsgLotteryBoxCommonManytimesS : pb::IMessage<PMsgLotteryBoxCommonManytimesS> {
    private static readonly pb::MessageParser<PMsgLotteryBoxCommonManytimesS> _parser = new pb::MessageParser<PMsgLotteryBoxCommonManytimesS>(() => new PMsgLotteryBoxCommonManytimesS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgLotteryBoxCommonManytimesS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgLotteryReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxCommonManytimesS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxCommonManytimesS(PMsgLotteryBoxCommonManytimesS other) : this() {
      unGoodsCount_ = other.unGoodsCount_;
      goodsInfo_ = other.goodsInfo_.Clone();
      nErrorCode_ = other.nErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxCommonManytimesS Clone() {
      return new PMsgLotteryBoxCommonManytimesS(this);
    }

    /// <summary>Field number for the "unGoodsCount" field.</summary>
    public const int UnGoodsCountFieldNumber = 1;
    private uint unGoodsCount_;
    /// <summary>
    /// 奖励数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnGoodsCount {
      get { return unGoodsCount_; }
      set {
        unGoodsCount_ = value;
      }
    }

    /// <summary>Field number for the "goodsInfo" field.</summary>
    public const int GoodsInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Sw.LotteryGoodsInfo> _repeated_goodsInfo_codec
        = pb::FieldCodec.ForMessage(18, global::Sw.LotteryGoodsInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.LotteryGoodsInfo> goodsInfo_ = new pbc::RepeatedField<global::Sw.LotteryGoodsInfo>();
    /// <summary>
    /// 奖励信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.LotteryGoodsInfo> GoodsInfo {
      get { return goodsInfo_; }
    }

    /// <summary>Field number for the "nErrorCode" field.</summary>
    public const int NErrorCodeFieldNumber = 99;
    private int nErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NErrorCode {
      get { return nErrorCode_; }
      set {
        nErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgLotteryBoxCommonManytimesS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgLotteryBoxCommonManytimesS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnGoodsCount != other.UnGoodsCount) return false;
      if(!goodsInfo_.Equals(other.goodsInfo_)) return false;
      if (NErrorCode != other.NErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnGoodsCount != 0) hash ^= UnGoodsCount.GetHashCode();
      hash ^= goodsInfo_.GetHashCode();
      if (NErrorCode != 0) hash ^= NErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnGoodsCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnGoodsCount);
      }
      goodsInfo_.WriteTo(output, _repeated_goodsInfo_codec);
      if (NErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(NErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnGoodsCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnGoodsCount);
      }
      size += goodsInfo_.CalculateSize(_repeated_goodsInfo_codec);
      if (NErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgLotteryBoxCommonManytimesS other) {
      if (other == null) {
        return;
      }
      if (other.UnGoodsCount != 0) {
        UnGoodsCount = other.UnGoodsCount;
      }
      goodsInfo_.Add(other.goodsInfo_);
      if (other.NErrorCode != 0) {
        NErrorCode = other.NErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnGoodsCount = input.ReadUInt32();
            break;
          }
          case 18: {
            goodsInfo_.AddEntriesFrom(input, _repeated_goodsInfo_codec);
            break;
          }
          case 792: {
            NErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端 免费高级抽奖请求
  /// _MSG_LOTTERY_BOX_SENIORFREE_C
  /// </summary>
  public sealed partial class PMsgLotteryBoxSeniorFreeC : pb::IMessage<PMsgLotteryBoxSeniorFreeC> {
    private static readonly pb::MessageParser<PMsgLotteryBoxSeniorFreeC> _parser = new pb::MessageParser<PMsgLotteryBoxSeniorFreeC>(() => new PMsgLotteryBoxSeniorFreeC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgLotteryBoxSeniorFreeC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgLotteryReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxSeniorFreeC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxSeniorFreeC(PMsgLotteryBoxSeniorFreeC other) : this() {
      unReserved_ = other.unReserved_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxSeniorFreeC Clone() {
      return new PMsgLotteryBoxSeniorFreeC(this);
    }

    /// <summary>Field number for the "unReserved" field.</summary>
    public const int UnReservedFieldNumber = 1;
    private int unReserved_;
    /// <summary>
    /// 保留字段	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnReserved {
      get { return unReserved_; }
      set {
        unReserved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgLotteryBoxSeniorFreeC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgLotteryBoxSeniorFreeC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnReserved != other.UnReserved) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnReserved != 0) hash ^= UnReserved.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnReserved != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnReserved);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnReserved != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnReserved);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgLotteryBoxSeniorFreeC other) {
      if (other == null) {
        return;
      }
      if (other.UnReserved != 0) {
        UnReserved = other.UnReserved;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnReserved = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端 回复免费高级抽奖请求
  /// _MSG_LOTTERY_BOX_SENIORFREE_S
  /// </summary>
  public sealed partial class PMsgLotteryBoxSeniorFreeS : pb::IMessage<PMsgLotteryBoxSeniorFreeS> {
    private static readonly pb::MessageParser<PMsgLotteryBoxSeniorFreeS> _parser = new pb::MessageParser<PMsgLotteryBoxSeniorFreeS>(() => new PMsgLotteryBoxSeniorFreeS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgLotteryBoxSeniorFreeS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgLotteryReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxSeniorFreeS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxSeniorFreeS(PMsgLotteryBoxSeniorFreeS other) : this() {
      unGoodsCount_ = other.unGoodsCount_;
      goodsInfo_ = other.goodsInfo_.Clone();
      nErrorCode_ = other.nErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxSeniorFreeS Clone() {
      return new PMsgLotteryBoxSeniorFreeS(this);
    }

    /// <summary>Field number for the "unGoodsCount" field.</summary>
    public const int UnGoodsCountFieldNumber = 1;
    private uint unGoodsCount_;
    /// <summary>
    /// 奖励数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnGoodsCount {
      get { return unGoodsCount_; }
      set {
        unGoodsCount_ = value;
      }
    }

    /// <summary>Field number for the "goodsInfo" field.</summary>
    public const int GoodsInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Sw.LotteryGoodsInfo> _repeated_goodsInfo_codec
        = pb::FieldCodec.ForMessage(18, global::Sw.LotteryGoodsInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.LotteryGoodsInfo> goodsInfo_ = new pbc::RepeatedField<global::Sw.LotteryGoodsInfo>();
    /// <summary>
    /// 奖励信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.LotteryGoodsInfo> GoodsInfo {
      get { return goodsInfo_; }
    }

    /// <summary>Field number for the "nErrorCode" field.</summary>
    public const int NErrorCodeFieldNumber = 99;
    private int nErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NErrorCode {
      get { return nErrorCode_; }
      set {
        nErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgLotteryBoxSeniorFreeS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgLotteryBoxSeniorFreeS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnGoodsCount != other.UnGoodsCount) return false;
      if(!goodsInfo_.Equals(other.goodsInfo_)) return false;
      if (NErrorCode != other.NErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnGoodsCount != 0) hash ^= UnGoodsCount.GetHashCode();
      hash ^= goodsInfo_.GetHashCode();
      if (NErrorCode != 0) hash ^= NErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnGoodsCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnGoodsCount);
      }
      goodsInfo_.WriteTo(output, _repeated_goodsInfo_codec);
      if (NErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(NErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnGoodsCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnGoodsCount);
      }
      size += goodsInfo_.CalculateSize(_repeated_goodsInfo_codec);
      if (NErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgLotteryBoxSeniorFreeS other) {
      if (other == null) {
        return;
      }
      if (other.UnGoodsCount != 0) {
        UnGoodsCount = other.UnGoodsCount;
      }
      goodsInfo_.Add(other.goodsInfo_);
      if (other.NErrorCode != 0) {
        NErrorCode = other.NErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnGoodsCount = input.ReadUInt32();
            break;
          }
          case 18: {
            goodsInfo_.AddEntriesFrom(input, _repeated_goodsInfo_codec);
            break;
          }
          case 792: {
            NErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端 高级抽奖请求
  /// _MSG_LOTTERY_BOX_SENIOR_C
  /// </summary>
  public sealed partial class PMsgLotteryBoxSeniorC : pb::IMessage<PMsgLotteryBoxSeniorC> {
    private static readonly pb::MessageParser<PMsgLotteryBoxSeniorC> _parser = new pb::MessageParser<PMsgLotteryBoxSeniorC>(() => new PMsgLotteryBoxSeniorC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgLotteryBoxSeniorC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgLotteryReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxSeniorC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxSeniorC(PMsgLotteryBoxSeniorC other) : this() {
      unReserved_ = other.unReserved_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxSeniorC Clone() {
      return new PMsgLotteryBoxSeniorC(this);
    }

    /// <summary>Field number for the "unReserved" field.</summary>
    public const int UnReservedFieldNumber = 1;
    private int unReserved_;
    /// <summary>
    /// 保留字段	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnReserved {
      get { return unReserved_; }
      set {
        unReserved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgLotteryBoxSeniorC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgLotteryBoxSeniorC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnReserved != other.UnReserved) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnReserved != 0) hash ^= UnReserved.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnReserved != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnReserved);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnReserved != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnReserved);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgLotteryBoxSeniorC other) {
      if (other == null) {
        return;
      }
      if (other.UnReserved != 0) {
        UnReserved = other.UnReserved;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnReserved = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端 回复高级抽奖请求
  /// _MSG_LOTTERY_BOX_SENIOR_S
  /// </summary>
  public sealed partial class PMsgLotteryBoxSeniorS : pb::IMessage<PMsgLotteryBoxSeniorS> {
    private static readonly pb::MessageParser<PMsgLotteryBoxSeniorS> _parser = new pb::MessageParser<PMsgLotteryBoxSeniorS>(() => new PMsgLotteryBoxSeniorS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgLotteryBoxSeniorS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgLotteryReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxSeniorS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxSeniorS(PMsgLotteryBoxSeniorS other) : this() {
      unGoodsCount_ = other.unGoodsCount_;
      goodsInfo_ = other.goodsInfo_.Clone();
      nErrorCode_ = other.nErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxSeniorS Clone() {
      return new PMsgLotteryBoxSeniorS(this);
    }

    /// <summary>Field number for the "unGoodsCount" field.</summary>
    public const int UnGoodsCountFieldNumber = 1;
    private uint unGoodsCount_;
    /// <summary>
    /// 奖励数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnGoodsCount {
      get { return unGoodsCount_; }
      set {
        unGoodsCount_ = value;
      }
    }

    /// <summary>Field number for the "goodsInfo" field.</summary>
    public const int GoodsInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Sw.LotteryGoodsInfo> _repeated_goodsInfo_codec
        = pb::FieldCodec.ForMessage(18, global::Sw.LotteryGoodsInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.LotteryGoodsInfo> goodsInfo_ = new pbc::RepeatedField<global::Sw.LotteryGoodsInfo>();
    /// <summary>
    /// 奖励信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.LotteryGoodsInfo> GoodsInfo {
      get { return goodsInfo_; }
    }

    /// <summary>Field number for the "nErrorCode" field.</summary>
    public const int NErrorCodeFieldNumber = 99;
    private int nErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NErrorCode {
      get { return nErrorCode_; }
      set {
        nErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgLotteryBoxSeniorS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgLotteryBoxSeniorS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnGoodsCount != other.UnGoodsCount) return false;
      if(!goodsInfo_.Equals(other.goodsInfo_)) return false;
      if (NErrorCode != other.NErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnGoodsCount != 0) hash ^= UnGoodsCount.GetHashCode();
      hash ^= goodsInfo_.GetHashCode();
      if (NErrorCode != 0) hash ^= NErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnGoodsCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnGoodsCount);
      }
      goodsInfo_.WriteTo(output, _repeated_goodsInfo_codec);
      if (NErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(NErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnGoodsCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnGoodsCount);
      }
      size += goodsInfo_.CalculateSize(_repeated_goodsInfo_codec);
      if (NErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgLotteryBoxSeniorS other) {
      if (other == null) {
        return;
      }
      if (other.UnGoodsCount != 0) {
        UnGoodsCount = other.UnGoodsCount;
      }
      goodsInfo_.Add(other.goodsInfo_);
      if (other.NErrorCode != 0) {
        NErrorCode = other.NErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnGoodsCount = input.ReadUInt32();
            break;
          }
          case 18: {
            goodsInfo_.AddEntriesFrom(input, _repeated_goodsInfo_codec);
            break;
          }
          case 792: {
            NErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端 高级10连抽奖请求
  /// _MSG_LOTTERY_BOX_SENIOR_MANYTIMES_C
  /// </summary>
  public sealed partial class PMsgLotteryBoxSeniorManytimesC : pb::IMessage<PMsgLotteryBoxSeniorManytimesC> {
    private static readonly pb::MessageParser<PMsgLotteryBoxSeniorManytimesC> _parser = new pb::MessageParser<PMsgLotteryBoxSeniorManytimesC>(() => new PMsgLotteryBoxSeniorManytimesC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgLotteryBoxSeniorManytimesC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgLotteryReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxSeniorManytimesC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxSeniorManytimesC(PMsgLotteryBoxSeniorManytimesC other) : this() {
      unReserved_ = other.unReserved_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxSeniorManytimesC Clone() {
      return new PMsgLotteryBoxSeniorManytimesC(this);
    }

    /// <summary>Field number for the "unReserved" field.</summary>
    public const int UnReservedFieldNumber = 1;
    private int unReserved_;
    /// <summary>
    /// 保留字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnReserved {
      get { return unReserved_; }
      set {
        unReserved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgLotteryBoxSeniorManytimesC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgLotteryBoxSeniorManytimesC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnReserved != other.UnReserved) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnReserved != 0) hash ^= UnReserved.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnReserved != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnReserved);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnReserved != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnReserved);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgLotteryBoxSeniorManytimesC other) {
      if (other == null) {
        return;
      }
      if (other.UnReserved != 0) {
        UnReserved = other.UnReserved;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnReserved = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务端：回复高级10连抽奖请求
  /// _MSG_LOTTERY_BOX_SENIOR_MANYTIMES_S
  /// </summary>
  public sealed partial class PMsgLotteryBoxSeniorManytimesS : pb::IMessage<PMsgLotteryBoxSeniorManytimesS> {
    private static readonly pb::MessageParser<PMsgLotteryBoxSeniorManytimesS> _parser = new pb::MessageParser<PMsgLotteryBoxSeniorManytimesS>(() => new PMsgLotteryBoxSeniorManytimesS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgLotteryBoxSeniorManytimesS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgLotteryReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxSeniorManytimesS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxSeniorManytimesS(PMsgLotteryBoxSeniorManytimesS other) : this() {
      unGoodsCount_ = other.unGoodsCount_;
      goodsInfo_ = other.goodsInfo_.Clone();
      nErrorCode_ = other.nErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgLotteryBoxSeniorManytimesS Clone() {
      return new PMsgLotteryBoxSeniorManytimesS(this);
    }

    /// <summary>Field number for the "unGoodsCount" field.</summary>
    public const int UnGoodsCountFieldNumber = 1;
    private uint unGoodsCount_;
    /// <summary>
    /// 奖励数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnGoodsCount {
      get { return unGoodsCount_; }
      set {
        unGoodsCount_ = value;
      }
    }

    /// <summary>Field number for the "goodsInfo" field.</summary>
    public const int GoodsInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Sw.LotteryGoodsInfo> _repeated_goodsInfo_codec
        = pb::FieldCodec.ForMessage(18, global::Sw.LotteryGoodsInfo.Parser);
    private readonly pbc::RepeatedField<global::Sw.LotteryGoodsInfo> goodsInfo_ = new pbc::RepeatedField<global::Sw.LotteryGoodsInfo>();
    /// <summary>
    /// 奖励信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Sw.LotteryGoodsInfo> GoodsInfo {
      get { return goodsInfo_; }
    }

    /// <summary>Field number for the "nErrorCode" field.</summary>
    public const int NErrorCodeFieldNumber = 99;
    private int nErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NErrorCode {
      get { return nErrorCode_; }
      set {
        nErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgLotteryBoxSeniorManytimesS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgLotteryBoxSeniorManytimesS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnGoodsCount != other.UnGoodsCount) return false;
      if(!goodsInfo_.Equals(other.goodsInfo_)) return false;
      if (NErrorCode != other.NErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnGoodsCount != 0) hash ^= UnGoodsCount.GetHashCode();
      hash ^= goodsInfo_.GetHashCode();
      if (NErrorCode != 0) hash ^= NErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnGoodsCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnGoodsCount);
      }
      goodsInfo_.WriteTo(output, _repeated_goodsInfo_codec);
      if (NErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(NErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnGoodsCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnGoodsCount);
      }
      size += goodsInfo_.CalculateSize(_repeated_goodsInfo_codec);
      if (NErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgLotteryBoxSeniorManytimesS other) {
      if (other == null) {
        return;
      }
      if (other.UnGoodsCount != 0) {
        UnGoodsCount = other.UnGoodsCount;
      }
      goodsInfo_.Add(other.goodsInfo_);
      if (other.NErrorCode != 0) {
        NErrorCode = other.NErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnGoodsCount = input.ReadUInt32();
            break;
          }
          case 18: {
            goodsInfo_.AddEntriesFrom(input, _repeated_goodsInfo_codec);
            break;
          }
          case 792: {
            NErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
