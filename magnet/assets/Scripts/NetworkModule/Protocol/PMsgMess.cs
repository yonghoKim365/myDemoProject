// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/PMsgMess.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Sw {

  /// <summary>Holder for reflection information generated from protos/PMsgMess.proto</summary>
  public static partial class PMsgMessReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/PMsgMess.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PMsgMessReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVwcm90b3MvUE1zZ01lc3MucHJvdG8SAnN3IiQKDlBNc2dNZXNzUXVlcnlD",
            "EhIKCnVuUmVzZXJ2ZWQYASABKAUiKgoOUE1zZ01lc3NRdWVyeVMSGAoQdW5E",
            "YWlseUZhbWVQb2ludBgBIAEoBSIqChJQTXNnTWVzc1Jvb21FbnRlckMSFAoM",
            "dW5TdGFnZUluZGV4GAEgASgNIk4KElBNc2dNZXNzUm9vbUVudGVyUxIUCgx1",
            "blN0YWdlSW5kZXgYASABKA0SDQoFdWxsSWQYAiABKAMSEwoLdW5FcnJvckNv",
            "ZGUYYyABKAUiIwoSUE1zZ01lc3NSb29tTGVhdmVDEg0KBXVsbElkGAEgASgD",
            "IjgKElBNc2dNZXNzUm9vbUxlYXZlUxINCgV1bGxJZBgBIAEoAxITCgt1bkVy",
            "cm9yQ29kZRhjIAEoBSJuChFQTXNnTWVzc0Jvc3NJbmZvUxISCgp1bkJvc3NE",
            "ZWFkGAEgASgFEhQKDHVsbEJvc3NOcGNJZBgDIAEoAxIRCgl1bk5wY1R5cGUY",
            "BCABKAUSDQoFblBvc1gYBSABKAUSDQoFblBvc1kYBiABKAUiQwoMTWVzc0Ry",
            "b3BJdGVtEg4KBnVuVHlwZRgBIAEoBRIQCgh1bkl0ZW1JZBgCIAEoBRIRCgl1",
            "bkl0ZW1OdW0YAyABKAUiLwoNUE1zZ01lc3NEcm9wUxIOCgZ1blR5cGUYASAB",
            "KAUSDgoGdW5GYW1lGAIgASgFIjAKG1BNc2dNZXNzU3luTm90aWZ5Qm9zc0Jl",
            "Z2luUxIRCgl1bk1pbnV0ZXMYASABKA0iLgoZUE1zZ01lc3NTeW5Ob3RpZnlC",
            "b3NzRW5kUxIRCgl1bk1pbnV0ZXMYASABKA0iUQoiUE1zZ01lc3NTeW5Ob3Rp",
            "ZnlCaWdCb3NzRGFtYWdlUmFuaxIVCg11bkRhbWFnZVRvdGFsGAEgASgNEhQK",
            "DHVuRGFtYWdlUmFuaxgCIAEoDSJBCiBQTXNnTWVzc1N5bk5vdGlmeUJvc3NC",
            "ZWdpbk9yRW5kUxIdChV1bk1lc3NCb3NzRmlnaHRTdGF0dXMYASABKA1iBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMessQueryC), global::Sw.PMsgMessQueryC.Parser, new[]{ "UnReserved" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMessQueryS), global::Sw.PMsgMessQueryS.Parser, new[]{ "UnDailyFamePoint" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMessRoomEnterC), global::Sw.PMsgMessRoomEnterC.Parser, new[]{ "UnStageIndex" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMessRoomEnterS), global::Sw.PMsgMessRoomEnterS.Parser, new[]{ "UnStageIndex", "UllId", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMessRoomLeaveC), global::Sw.PMsgMessRoomLeaveC.Parser, new[]{ "UllId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMessRoomLeaveS), global::Sw.PMsgMessRoomLeaveS.Parser, new[]{ "UllId", "UnErrorCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMessBossInfoS), global::Sw.PMsgMessBossInfoS.Parser, new[]{ "UnBossDead", "UllBossNpcId", "UnNpcType", "NPosX", "NPosY" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.MessDropItem), global::Sw.MessDropItem.Parser, new[]{ "UnType", "UnItemId", "UnItemNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMessDropS), global::Sw.PMsgMessDropS.Parser, new[]{ "UnType", "UnFame" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMessSynNotifyBossBeginS), global::Sw.PMsgMessSynNotifyBossBeginS.Parser, new[]{ "UnMinutes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMessSynNotifyBossEndS), global::Sw.PMsgMessSynNotifyBossEndS.Parser, new[]{ "UnMinutes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMessSynNotifyBigBossDamageRank), global::Sw.PMsgMessSynNotifyBigBossDamageRank.Parser, new[]{ "UnDamageTotal", "UnDamageRank" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sw.PMsgMessSynNotifyBossBeginOrEndS), global::Sw.PMsgMessSynNotifyBossBeginOrEndS.Parser, new[]{ "UnMessBossFightStatus" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 客户端：查询混乱战场信息
  /// _MSG_MESS_QUERY_C
  /// </summary>
  public sealed partial class PMsgMessQueryC : pb::IMessage<PMsgMessQueryC> {
    private static readonly pb::MessageParser<PMsgMessQueryC> _parser = new pb::MessageParser<PMsgMessQueryC>(() => new PMsgMessQueryC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMessQueryC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMessReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessQueryC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessQueryC(PMsgMessQueryC other) : this() {
      unReserved_ = other.unReserved_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessQueryC Clone() {
      return new PMsgMessQueryC(this);
    }

    /// <summary>Field number for the "unReserved" field.</summary>
    public const int UnReservedFieldNumber = 1;
    private int unReserved_;
    /// <summary>
    /// 保留字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnReserved {
      get { return unReserved_; }
      set {
        unReserved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMessQueryC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMessQueryC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnReserved != other.UnReserved) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnReserved != 0) hash ^= UnReserved.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnReserved != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnReserved);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnReserved != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnReserved);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMessQueryC other) {
      if (other == null) {
        return;
      }
      if (other.UnReserved != 0) {
        UnReserved = other.UnReserved;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnReserved = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：查询混乱战场信息回复
  /// _MSG_MESS_QUERY_S
  /// </summary>
  public sealed partial class PMsgMessQueryS : pb::IMessage<PMsgMessQueryS> {
    private static readonly pb::MessageParser<PMsgMessQueryS> _parser = new pb::MessageParser<PMsgMessQueryS>(() => new PMsgMessQueryS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMessQueryS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMessReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessQueryS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessQueryS(PMsgMessQueryS other) : this() {
      unDailyFamePoint_ = other.unDailyFamePoint_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessQueryS Clone() {
      return new PMsgMessQueryS(this);
    }

    /// <summary>Field number for the "unDailyFamePoint" field.</summary>
    public const int UnDailyFamePointFieldNumber = 1;
    private int unDailyFamePoint_;
    /// <summary>
    /// 当天获得声望
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnDailyFamePoint {
      get { return unDailyFamePoint_; }
      set {
        unDailyFamePoint_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMessQueryS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMessQueryS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnDailyFamePoint != other.UnDailyFamePoint) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnDailyFamePoint != 0) hash ^= UnDailyFamePoint.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnDailyFamePoint != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnDailyFamePoint);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnDailyFamePoint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnDailyFamePoint);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMessQueryS other) {
      if (other == null) {
        return;
      }
      if (other.UnDailyFamePoint != 0) {
        UnDailyFamePoint = other.UnDailyFamePoint;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnDailyFamePoint = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：进入混乱战场房间
  /// _MSG_MESS_ROOM_ENTER_C
  /// </summary>
  public sealed partial class PMsgMessRoomEnterC : pb::IMessage<PMsgMessRoomEnterC> {
    private static readonly pb::MessageParser<PMsgMessRoomEnterC> _parser = new pb::MessageParser<PMsgMessRoomEnterC>(() => new PMsgMessRoomEnterC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMessRoomEnterC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMessReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessRoomEnterC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessRoomEnterC(PMsgMessRoomEnterC other) : this() {
      unStageIndex_ = other.unStageIndex_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessRoomEnterC Clone() {
      return new PMsgMessRoomEnterC(this);
    }

    /// <summary>Field number for the "unStageIndex" field.</summary>
    public const int UnStageIndexFieldNumber = 1;
    private uint unStageIndex_;
    /// <summary>
    /// 战场类型(关卡索引)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnStageIndex {
      get { return unStageIndex_; }
      set {
        unStageIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMessRoomEnterC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMessRoomEnterC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnStageIndex != other.UnStageIndex) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnStageIndex != 0) hash ^= UnStageIndex.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnStageIndex != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnStageIndex);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnStageIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnStageIndex);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMessRoomEnterC other) {
      if (other == null) {
        return;
      }
      if (other.UnStageIndex != 0) {
        UnStageIndex = other.UnStageIndex;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnStageIndex = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：进入混乱战场房间回复
  /// _MSG_MESS_ROOM_ENTER_S
  /// </summary>
  public sealed partial class PMsgMessRoomEnterS : pb::IMessage<PMsgMessRoomEnterS> {
    private static readonly pb::MessageParser<PMsgMessRoomEnterS> _parser = new pb::MessageParser<PMsgMessRoomEnterS>(() => new PMsgMessRoomEnterS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMessRoomEnterS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMessReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessRoomEnterS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessRoomEnterS(PMsgMessRoomEnterS other) : this() {
      unStageIndex_ = other.unStageIndex_;
      ullId_ = other.ullId_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessRoomEnterS Clone() {
      return new PMsgMessRoomEnterS(this);
    }

    /// <summary>Field number for the "unStageIndex" field.</summary>
    public const int UnStageIndexFieldNumber = 1;
    private uint unStageIndex_;
    /// <summary>
    /// 战场类型(关卡索引)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnStageIndex {
      get { return unStageIndex_; }
      set {
        unStageIndex_ = value;
      }
    }

    /// <summary>Field number for the "ullId" field.</summary>
    public const int UllIdFieldNumber = 2;
    private long ullId_;
    /// <summary>
    /// 房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllId {
      get { return ullId_; }
      set {
        ullId_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMessRoomEnterS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMessRoomEnterS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnStageIndex != other.UnStageIndex) return false;
      if (UllId != other.UllId) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnStageIndex != 0) hash ^= UnStageIndex.GetHashCode();
      if (UllId != 0L) hash ^= UllId.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnStageIndex != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnStageIndex);
      }
      if (UllId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UllId);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnStageIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnStageIndex);
      }
      if (UllId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllId);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMessRoomEnterS other) {
      if (other == null) {
        return;
      }
      if (other.UnStageIndex != 0) {
        UnStageIndex = other.UnStageIndex;
      }
      if (other.UllId != 0L) {
        UllId = other.UllId;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnStageIndex = input.ReadUInt32();
            break;
          }
          case 16: {
            UllId = input.ReadInt64();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 客户端：离开混乱战场房间
  /// _MSG_MESS_ROOM_LEAVE_C
  /// </summary>
  public sealed partial class PMsgMessRoomLeaveC : pb::IMessage<PMsgMessRoomLeaveC> {
    private static readonly pb::MessageParser<PMsgMessRoomLeaveC> _parser = new pb::MessageParser<PMsgMessRoomLeaveC>(() => new PMsgMessRoomLeaveC());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMessRoomLeaveC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMessReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessRoomLeaveC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessRoomLeaveC(PMsgMessRoomLeaveC other) : this() {
      ullId_ = other.ullId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessRoomLeaveC Clone() {
      return new PMsgMessRoomLeaveC(this);
    }

    /// <summary>Field number for the "ullId" field.</summary>
    public const int UllIdFieldNumber = 1;
    private long ullId_;
    /// <summary>
    /// 房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllId {
      get { return ullId_; }
      set {
        ullId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMessRoomLeaveC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMessRoomLeaveC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllId != other.UllId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllId != 0L) hash ^= UllId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UllId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMessRoomLeaveC other) {
      if (other == null) {
        return;
      }
      if (other.UllId != 0L) {
        UllId = other.UllId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：离开混乱战场房间回复
  /// _MSG_MESS_ROOM_LEAVE_S
  /// </summary>
  public sealed partial class PMsgMessRoomLeaveS : pb::IMessage<PMsgMessRoomLeaveS> {
    private static readonly pb::MessageParser<PMsgMessRoomLeaveS> _parser = new pb::MessageParser<PMsgMessRoomLeaveS>(() => new PMsgMessRoomLeaveS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMessRoomLeaveS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMessReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessRoomLeaveS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessRoomLeaveS(PMsgMessRoomLeaveS other) : this() {
      ullId_ = other.ullId_;
      unErrorCode_ = other.unErrorCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessRoomLeaveS Clone() {
      return new PMsgMessRoomLeaveS(this);
    }

    /// <summary>Field number for the "ullId" field.</summary>
    public const int UllIdFieldNumber = 1;
    private long ullId_;
    /// <summary>
    /// 房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllId {
      get { return ullId_; }
      set {
        ullId_ = value;
      }
    }

    /// <summary>Field number for the "unErrorCode" field.</summary>
    public const int UnErrorCodeFieldNumber = 99;
    private int unErrorCode_;
    /// <summary>
    /// 返回错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnErrorCode {
      get { return unErrorCode_; }
      set {
        unErrorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMessRoomLeaveS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMessRoomLeaveS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UllId != other.UllId) return false;
      if (UnErrorCode != other.UnErrorCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UllId != 0L) hash ^= UllId.GetHashCode();
      if (UnErrorCode != 0) hash ^= UnErrorCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UllId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UllId);
      }
      if (UnErrorCode != 0) {
        output.WriteRawTag(152, 6);
        output.WriteInt32(UnErrorCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UllId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllId);
      }
      if (UnErrorCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnErrorCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMessRoomLeaveS other) {
      if (other == null) {
        return;
      }
      if (other.UllId != 0L) {
        UllId = other.UllId;
      }
      if (other.UnErrorCode != 0) {
        UnErrorCode = other.UnErrorCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UllId = input.ReadInt64();
            break;
          }
          case 792: {
            UnErrorCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：混乱战场boss信息
  /// _MSG_MESS_BOSS_INFO_S
  /// </summary>
  public sealed partial class PMsgMessBossInfoS : pb::IMessage<PMsgMessBossInfoS> {
    private static readonly pb::MessageParser<PMsgMessBossInfoS> _parser = new pb::MessageParser<PMsgMessBossInfoS>(() => new PMsgMessBossInfoS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMessBossInfoS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMessReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessBossInfoS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessBossInfoS(PMsgMessBossInfoS other) : this() {
      unBossDead_ = other.unBossDead_;
      ullBossNpcId_ = other.ullBossNpcId_;
      unNpcType_ = other.unNpcType_;
      nPosX_ = other.nPosX_;
      nPosY_ = other.nPosY_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessBossInfoS Clone() {
      return new PMsgMessBossInfoS(this);
    }

    /// <summary>Field number for the "unBossDead" field.</summary>
    public const int UnBossDeadFieldNumber = 1;
    private int unBossDead_;
    /// <summary>
    /// boss是否死亡：0-生存，1-死亡
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnBossDead {
      get { return unBossDead_; }
      set {
        unBossDead_ = value;
      }
    }

    /// <summary>Field number for the "ullBossNpcId" field.</summary>
    public const int UllBossNpcIdFieldNumber = 3;
    private long ullBossNpcId_;
    /// <summary>
    /// boss Npc id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UllBossNpcId {
      get { return ullBossNpcId_; }
      set {
        ullBossNpcId_ = value;
      }
    }

    /// <summary>Field number for the "unNpcType" field.</summary>
    public const int UnNpcTypeFieldNumber = 4;
    private int unNpcType_;
    /// <summary>
    /// Npc类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnNpcType {
      get { return unNpcType_; }
      set {
        unNpcType_ = value;
      }
    }

    /// <summary>Field number for the "nPosX" field.</summary>
    public const int NPosXFieldNumber = 5;
    private int nPosX_;
    /// <summary>
    /// 坐标：X
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NPosX {
      get { return nPosX_; }
      set {
        nPosX_ = value;
      }
    }

    /// <summary>Field number for the "nPosY" field.</summary>
    public const int NPosYFieldNumber = 6;
    private int nPosY_;
    /// <summary>
    /// 坐标：Y
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NPosY {
      get { return nPosY_; }
      set {
        nPosY_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMessBossInfoS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMessBossInfoS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnBossDead != other.UnBossDead) return false;
      if (UllBossNpcId != other.UllBossNpcId) return false;
      if (UnNpcType != other.UnNpcType) return false;
      if (NPosX != other.NPosX) return false;
      if (NPosY != other.NPosY) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnBossDead != 0) hash ^= UnBossDead.GetHashCode();
      if (UllBossNpcId != 0L) hash ^= UllBossNpcId.GetHashCode();
      if (UnNpcType != 0) hash ^= UnNpcType.GetHashCode();
      if (NPosX != 0) hash ^= NPosX.GetHashCode();
      if (NPosY != 0) hash ^= NPosY.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnBossDead != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnBossDead);
      }
      if (UllBossNpcId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(UllBossNpcId);
      }
      if (UnNpcType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UnNpcType);
      }
      if (NPosX != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(NPosX);
      }
      if (NPosY != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(NPosY);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnBossDead != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnBossDead);
      }
      if (UllBossNpcId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UllBossNpcId);
      }
      if (UnNpcType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnNpcType);
      }
      if (NPosX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NPosX);
      }
      if (NPosY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NPosY);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMessBossInfoS other) {
      if (other == null) {
        return;
      }
      if (other.UnBossDead != 0) {
        UnBossDead = other.UnBossDead;
      }
      if (other.UllBossNpcId != 0L) {
        UllBossNpcId = other.UllBossNpcId;
      }
      if (other.UnNpcType != 0) {
        UnNpcType = other.UnNpcType;
      }
      if (other.NPosX != 0) {
        NPosX = other.NPosX;
      }
      if (other.NPosY != 0) {
        NPosY = other.NPosY;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnBossDead = input.ReadInt32();
            break;
          }
          case 24: {
            UllBossNpcId = input.ReadInt64();
            break;
          }
          case 32: {
            UnNpcType = input.ReadInt32();
            break;
          }
          case 40: {
            NPosX = input.ReadInt32();
            break;
          }
          case 48: {
            NPosY = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 混乱战场掉落物品
  /// </summary>
  public sealed partial class MessDropItem : pb::IMessage<MessDropItem> {
    private static readonly pb::MessageParser<MessDropItem> _parser = new pb::MessageParser<MessDropItem>(() => new MessDropItem());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessDropItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMessReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessDropItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessDropItem(MessDropItem other) : this() {
      unType_ = other.unType_;
      unItemId_ = other.unItemId_;
      unItemNum_ = other.unItemNum_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessDropItem Clone() {
      return new MessDropItem(this);
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 1;
    private int unType_;
    /// <summary>
    /// 掉落物品类型(UNITE_TYPE)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    /// <summary>Field number for the "unItemId" field.</summary>
    public const int UnItemIdFieldNumber = 2;
    private int unItemId_;
    /// <summary>
    /// 掉落物品ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnItemId {
      get { return unItemId_; }
      set {
        unItemId_ = value;
      }
    }

    /// <summary>Field number for the "unItemNum" field.</summary>
    public const int UnItemNumFieldNumber = 3;
    private int unItemNum_;
    /// <summary>
    /// 掉落物品数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnItemNum {
      get { return unItemNum_; }
      set {
        unItemNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessDropItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessDropItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnType != other.UnType) return false;
      if (UnItemId != other.UnItemId) return false;
      if (UnItemNum != other.UnItemNum) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnType != 0) hash ^= UnType.GetHashCode();
      if (UnItemId != 0) hash ^= UnItemId.GetHashCode();
      if (UnItemNum != 0) hash ^= UnItemNum.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnType);
      }
      if (UnItemId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnItemId);
      }
      if (UnItemNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnItemNum);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      if (UnItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnItemId);
      }
      if (UnItemNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnItemNum);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessDropItem other) {
      if (other == null) {
        return;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
      if (other.UnItemId != 0) {
        UnItemId = other.UnItemId;
      }
      if (other.UnItemNum != 0) {
        UnItemNum = other.UnItemNum;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnType = input.ReadInt32();
            break;
          }
          case 16: {
            UnItemId = input.ReadInt32();
            break;
          }
          case 24: {
            UnItemNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：混乱战场掉落
  /// _MSG_MESS_DROP_S
  /// </summary>
  public sealed partial class PMsgMessDropS : pb::IMessage<PMsgMessDropS> {
    private static readonly pb::MessageParser<PMsgMessDropS> _parser = new pb::MessageParser<PMsgMessDropS>(() => new PMsgMessDropS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMessDropS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMessReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessDropS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessDropS(PMsgMessDropS other) : this() {
      unType_ = other.unType_;
      unFame_ = other.unFame_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessDropS Clone() {
      return new PMsgMessDropS(this);
    }

    /// <summary>Field number for the "unType" field.</summary>
    public const int UnTypeFieldNumber = 1;
    private int unType_;
    /// <summary>
    /// 扣除或者奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnType {
      get { return unType_; }
      set {
        unType_ = value;
      }
    }

    /// <summary>Field number for the "unFame" field.</summary>
    public const int UnFameFieldNumber = 2;
    private int unFame_;
    /// <summary>
    /// 声望
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnFame {
      get { return unFame_; }
      set {
        unFame_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMessDropS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMessDropS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnType != other.UnType) return false;
      if (UnFame != other.UnFame) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnType != 0) hash ^= UnType.GetHashCode();
      if (UnFame != 0) hash ^= UnFame.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnType);
      }
      if (UnFame != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnFame);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnType);
      }
      if (UnFame != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnFame);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMessDropS other) {
      if (other == null) {
        return;
      }
      if (other.UnType != 0) {
        UnType = other.UnType;
      }
      if (other.UnFame != 0) {
        UnFame = other.UnFame;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnType = input.ReadInt32();
            break;
          }
          case 16: {
            UnFame = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：统领混乱战场开始通知
  /// _MSG_MESS_SYN_NOTIFY_BOSS_BEGIN_S
  /// </summary>
  public sealed partial class PMsgMessSynNotifyBossBeginS : pb::IMessage<PMsgMessSynNotifyBossBeginS> {
    private static readonly pb::MessageParser<PMsgMessSynNotifyBossBeginS> _parser = new pb::MessageParser<PMsgMessSynNotifyBossBeginS>(() => new PMsgMessSynNotifyBossBeginS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMessSynNotifyBossBeginS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMessReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessSynNotifyBossBeginS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessSynNotifyBossBeginS(PMsgMessSynNotifyBossBeginS other) : this() {
      unMinutes_ = other.unMinutes_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessSynNotifyBossBeginS Clone() {
      return new PMsgMessSynNotifyBossBeginS(this);
    }

    /// <summary>Field number for the "unMinutes" field.</summary>
    public const int UnMinutesFieldNumber = 1;
    private uint unMinutes_;
    /// <summary>
    /// 多少分钟后开启统领混乱战场
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnMinutes {
      get { return unMinutes_; }
      set {
        unMinutes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMessSynNotifyBossBeginS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMessSynNotifyBossBeginS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnMinutes != other.UnMinutes) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnMinutes != 0) hash ^= UnMinutes.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnMinutes != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnMinutes);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnMinutes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnMinutes);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMessSynNotifyBossBeginS other) {
      if (other == null) {
        return;
      }
      if (other.UnMinutes != 0) {
        UnMinutes = other.UnMinutes;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnMinutes = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：统领混乱战场结束通知
  /// _MSG_MESS_SYN_NOTIFY_BOSS_END_S
  /// </summary>
  public sealed partial class PMsgMessSynNotifyBossEndS : pb::IMessage<PMsgMessSynNotifyBossEndS> {
    private static readonly pb::MessageParser<PMsgMessSynNotifyBossEndS> _parser = new pb::MessageParser<PMsgMessSynNotifyBossEndS>(() => new PMsgMessSynNotifyBossEndS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMessSynNotifyBossEndS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMessReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessSynNotifyBossEndS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessSynNotifyBossEndS(PMsgMessSynNotifyBossEndS other) : this() {
      unMinutes_ = other.unMinutes_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessSynNotifyBossEndS Clone() {
      return new PMsgMessSynNotifyBossEndS(this);
    }

    /// <summary>Field number for the "unMinutes" field.</summary>
    public const int UnMinutesFieldNumber = 1;
    private uint unMinutes_;
    /// <summary>
    /// 多少分钟后统领混乱战场结束
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnMinutes {
      get { return unMinutes_; }
      set {
        unMinutes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMessSynNotifyBossEndS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMessSynNotifyBossEndS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnMinutes != other.UnMinutes) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnMinutes != 0) hash ^= UnMinutes.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnMinutes != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnMinutes);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnMinutes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnMinutes);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMessSynNotifyBossEndS other) {
      if (other == null) {
        return;
      }
      if (other.UnMinutes != 0) {
        UnMinutes = other.UnMinutes;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnMinutes = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：统领混乱战场,角色对大统领伤害的排行
  /// _MSG_MESS_SYN_NOTIFY_BIG_BOSS_DAMAGE_RANK
  /// </summary>
  public sealed partial class PMsgMessSynNotifyBigBossDamageRank : pb::IMessage<PMsgMessSynNotifyBigBossDamageRank> {
    private static readonly pb::MessageParser<PMsgMessSynNotifyBigBossDamageRank> _parser = new pb::MessageParser<PMsgMessSynNotifyBigBossDamageRank>(() => new PMsgMessSynNotifyBigBossDamageRank());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMessSynNotifyBigBossDamageRank> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMessReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessSynNotifyBigBossDamageRank() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessSynNotifyBigBossDamageRank(PMsgMessSynNotifyBigBossDamageRank other) : this() {
      unDamageTotal_ = other.unDamageTotal_;
      unDamageRank_ = other.unDamageRank_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessSynNotifyBigBossDamageRank Clone() {
      return new PMsgMessSynNotifyBigBossDamageRank(this);
    }

    /// <summary>Field number for the "unDamageTotal" field.</summary>
    public const int UnDamageTotalFieldNumber = 1;
    private uint unDamageTotal_;
    /// <summary>
    /// 对大统领的伤害值累计
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnDamageTotal {
      get { return unDamageTotal_; }
      set {
        unDamageTotal_ = value;
      }
    }

    /// <summary>Field number for the "unDamageRank" field.</summary>
    public const int UnDamageRankFieldNumber = 2;
    private uint unDamageRank_;
    /// <summary>
    /// 对大统领的伤害值的排名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnDamageRank {
      get { return unDamageRank_; }
      set {
        unDamageRank_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMessSynNotifyBigBossDamageRank);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMessSynNotifyBigBossDamageRank other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnDamageTotal != other.UnDamageTotal) return false;
      if (UnDamageRank != other.UnDamageRank) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnDamageTotal != 0) hash ^= UnDamageTotal.GetHashCode();
      if (UnDamageRank != 0) hash ^= UnDamageRank.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnDamageTotal != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnDamageTotal);
      }
      if (UnDamageRank != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(UnDamageRank);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnDamageTotal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnDamageTotal);
      }
      if (UnDamageRank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnDamageRank);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMessSynNotifyBigBossDamageRank other) {
      if (other == null) {
        return;
      }
      if (other.UnDamageTotal != 0) {
        UnDamageTotal = other.UnDamageTotal;
      }
      if (other.UnDamageRank != 0) {
        UnDamageRank = other.UnDamageRank;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnDamageTotal = input.ReadUInt32();
            break;
          }
          case 16: {
            UnDamageRank = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服务器：统领混乱战场开始或者结束的通知
  /// _MSG_MESS_SYN_NOTIFY_BOSS_BEGIN_OR_END_S
  /// </summary>
  public sealed partial class PMsgMessSynNotifyBossBeginOrEndS : pb::IMessage<PMsgMessSynNotifyBossBeginOrEndS> {
    private static readonly pb::MessageParser<PMsgMessSynNotifyBossBeginOrEndS> _parser = new pb::MessageParser<PMsgMessSynNotifyBossBeginOrEndS>(() => new PMsgMessSynNotifyBossBeginOrEndS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMsgMessSynNotifyBossBeginOrEndS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sw.PMsgMessReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessSynNotifyBossBeginOrEndS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessSynNotifyBossBeginOrEndS(PMsgMessSynNotifyBossBeginOrEndS other) : this() {
      unMessBossFightStatus_ = other.unMessBossFightStatus_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMsgMessSynNotifyBossBeginOrEndS Clone() {
      return new PMsgMessSynNotifyBossBeginOrEndS(this);
    }

    /// <summary>Field number for the "unMessBossFightStatus" field.</summary>
    public const int UnMessBossFightStatusFieldNumber = 1;
    private uint unMessBossFightStatus_;
    /// <summary>
    /// 1开始,2结束 sw::eMessBossFightStatus
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnMessBossFightStatus {
      get { return unMessBossFightStatus_; }
      set {
        unMessBossFightStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMsgMessSynNotifyBossBeginOrEndS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMsgMessSynNotifyBossBeginOrEndS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnMessBossFightStatus != other.UnMessBossFightStatus) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnMessBossFightStatus != 0) hash ^= UnMessBossFightStatus.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnMessBossFightStatus != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UnMessBossFightStatus);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnMessBossFightStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnMessBossFightStatus);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMsgMessSynNotifyBossBeginOrEndS other) {
      if (other == null) {
        return;
      }
      if (other.UnMessBossFightStatus != 0) {
        UnMessBossFightStatus = other.UnMessBossFightStatus;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnMessBossFightStatus = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
